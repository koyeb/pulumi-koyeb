// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package koyeb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-koyeb/sdk/go/koyeb"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := koyeb.GetSecret(ctx, &GetSecretArgs{
// 			Name: "my-secret",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetSecret(ctx *pulumi.Context, args *GetSecretArgs, opts ...pulumi.InvokeOption) (*GetSecretResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetSecretResult
	err := ctx.Invoke("koyeb:index/getSecret:getSecret", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSecret.
type GetSecretArgs struct {
	// The Azure registry configuration to use
	AzureContainerRegistry *GetSecretAzureContainerRegistry `pulumi:"azureContainerRegistry"`
	// The DigitalOcean registry configuration to use
	DigitalOceanContainerRegistry *GetSecretDigitalOceanContainerRegistry `pulumi:"digitalOceanContainerRegistry"`
	// The DockerHub registry configuration to use
	DockerHubRegistry *GetSecretDockerHubRegistry `pulumi:"dockerHubRegistry"`
	// The GitHub registry configuration to use
	GithubRegistry *GetSecretGithubRegistry `pulumi:"githubRegistry"`
	// The GitLab registry configuration to use
	GitlabRegistry *GetSecretGitlabRegistry `pulumi:"gitlabRegistry"`
	// The secret name
	Name string `pulumi:"name"`
	// The DigitalOcean registry configuration to use
	PrivateRegistry *GetSecretPrivateRegistry `pulumi:"privateRegistry"`
	// The secret type
	Type *string `pulumi:"type"`
	// The secret value
	Value *string `pulumi:"value"`
}

// A collection of values returned by getSecret.
type GetSecretResult struct {
	// The Azure registry configuration to use
	AzureContainerRegistry *GetSecretAzureContainerRegistry `pulumi:"azureContainerRegistry"`
	// The date and time of when the secret was created
	CreatedAt string `pulumi:"createdAt"`
	// The DigitalOcean registry configuration to use
	DigitalOceanContainerRegistry *GetSecretDigitalOceanContainerRegistry `pulumi:"digitalOceanContainerRegistry"`
	// The DockerHub registry configuration to use
	DockerHubRegistry *GetSecretDockerHubRegistry `pulumi:"dockerHubRegistry"`
	// The GitHub registry configuration to use
	GithubRegistry *GetSecretGithubRegistry `pulumi:"githubRegistry"`
	// The GitLab registry configuration to use
	GitlabRegistry *GetSecretGitlabRegistry `pulumi:"gitlabRegistry"`
	// The secret ID
	Id string `pulumi:"id"`
	// The secret name
	Name string `pulumi:"name"`
	// The organization ID owning the secret
	OrganizationId string `pulumi:"organizationId"`
	// The DigitalOcean registry configuration to use
	PrivateRegistry *GetSecretPrivateRegistry `pulumi:"privateRegistry"`
	// The secret type
	Type *string `pulumi:"type"`
	// The date and time of when the secret was last updated
	UpdatedAt string `pulumi:"updatedAt"`
	// The secret value
	Value *string `pulumi:"value"`
}

func GetSecretOutput(ctx *pulumi.Context, args GetSecretOutputArgs, opts ...pulumi.InvokeOption) GetSecretResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSecretResult, error) {
			args := v.(GetSecretArgs)
			r, err := GetSecret(ctx, &args, opts...)
			var s GetSecretResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSecretResultOutput)
}

// A collection of arguments for invoking getSecret.
type GetSecretOutputArgs struct {
	// The Azure registry configuration to use
	AzureContainerRegistry GetSecretAzureContainerRegistryPtrInput `pulumi:"azureContainerRegistry"`
	// The DigitalOcean registry configuration to use
	DigitalOceanContainerRegistry GetSecretDigitalOceanContainerRegistryPtrInput `pulumi:"digitalOceanContainerRegistry"`
	// The DockerHub registry configuration to use
	DockerHubRegistry GetSecretDockerHubRegistryPtrInput `pulumi:"dockerHubRegistry"`
	// The GitHub registry configuration to use
	GithubRegistry GetSecretGithubRegistryPtrInput `pulumi:"githubRegistry"`
	// The GitLab registry configuration to use
	GitlabRegistry GetSecretGitlabRegistryPtrInput `pulumi:"gitlabRegistry"`
	// The secret name
	Name pulumi.StringInput `pulumi:"name"`
	// The DigitalOcean registry configuration to use
	PrivateRegistry GetSecretPrivateRegistryPtrInput `pulumi:"privateRegistry"`
	// The secret type
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The secret value
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GetSecretOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretArgs)(nil)).Elem()
}

// A collection of values returned by getSecret.
type GetSecretResultOutput struct{ *pulumi.OutputState }

func (GetSecretResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretResult)(nil)).Elem()
}

func (o GetSecretResultOutput) ToGetSecretResultOutput() GetSecretResultOutput {
	return o
}

func (o GetSecretResultOutput) ToGetSecretResultOutputWithContext(ctx context.Context) GetSecretResultOutput {
	return o
}

// The Azure registry configuration to use
func (o GetSecretResultOutput) AzureContainerRegistry() GetSecretAzureContainerRegistryPtrOutput {
	return o.ApplyT(func(v GetSecretResult) *GetSecretAzureContainerRegistry { return v.AzureContainerRegistry }).(GetSecretAzureContainerRegistryPtrOutput)
}

// The date and time of when the secret was created
func (o GetSecretResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The DigitalOcean registry configuration to use
func (o GetSecretResultOutput) DigitalOceanContainerRegistry() GetSecretDigitalOceanContainerRegistryPtrOutput {
	return o.ApplyT(func(v GetSecretResult) *GetSecretDigitalOceanContainerRegistry {
		return v.DigitalOceanContainerRegistry
	}).(GetSecretDigitalOceanContainerRegistryPtrOutput)
}

// The DockerHub registry configuration to use
func (o GetSecretResultOutput) DockerHubRegistry() GetSecretDockerHubRegistryPtrOutput {
	return o.ApplyT(func(v GetSecretResult) *GetSecretDockerHubRegistry { return v.DockerHubRegistry }).(GetSecretDockerHubRegistryPtrOutput)
}

// The GitHub registry configuration to use
func (o GetSecretResultOutput) GithubRegistry() GetSecretGithubRegistryPtrOutput {
	return o.ApplyT(func(v GetSecretResult) *GetSecretGithubRegistry { return v.GithubRegistry }).(GetSecretGithubRegistryPtrOutput)
}

// The GitLab registry configuration to use
func (o GetSecretResultOutput) GitlabRegistry() GetSecretGitlabRegistryPtrOutput {
	return o.ApplyT(func(v GetSecretResult) *GetSecretGitlabRegistry { return v.GitlabRegistry }).(GetSecretGitlabRegistryPtrOutput)
}

// The secret ID
func (o GetSecretResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretResult) string { return v.Id }).(pulumi.StringOutput)
}

// The secret name
func (o GetSecretResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretResult) string { return v.Name }).(pulumi.StringOutput)
}

// The organization ID owning the secret
func (o GetSecretResultOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretResult) string { return v.OrganizationId }).(pulumi.StringOutput)
}

// The DigitalOcean registry configuration to use
func (o GetSecretResultOutput) PrivateRegistry() GetSecretPrivateRegistryPtrOutput {
	return o.ApplyT(func(v GetSecretResult) *GetSecretPrivateRegistry { return v.PrivateRegistry }).(GetSecretPrivateRegistryPtrOutput)
}

// The secret type
func (o GetSecretResultOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecretResult) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The date and time of when the secret was last updated
func (o GetSecretResultOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretResult) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

// The secret value
func (o GetSecretResultOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSecretResult) *string { return v.Value }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSecretResultOutput{})
}
