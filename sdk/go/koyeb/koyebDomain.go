// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package koyeb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-koyeb/sdk/go/koyeb"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := koyeb.NewKoyebDomain(ctx, "my-domain", nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type KoyebDomain struct {
	pulumi.CustomResourceState

	// The app name the domain is assigned to
	AppName pulumi.StringPtrOutput `pulumi:"appName"`
	// The date and time of when the domain was created
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The deployment group assigned to the domain
	DeploymentGroup pulumi.StringOutput `pulumi:"deploymentGroup"`
	// The CNAME record to point the domain to
	IntendedCname pulumi.StringOutput `pulumi:"intendedCname"`
	// The status messages of the domain
	Messages pulumi.StringOutput `pulumi:"messages"`
	// The domain name
	Name pulumi.StringOutput `pulumi:"name"`
	// The organization ID owning the domain
	OrganizationId pulumi.StringOutput `pulumi:"organizationId"`
	// The status of the domain
	Status pulumi.StringOutput `pulumi:"status"`
	// The domain type
	Type pulumi.StringOutput `pulumi:"type"`
	// The date and time of when the domain was last updated
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
	// The date and time of when the domain was last verified
	VerifiedAt pulumi.StringOutput `pulumi:"verifiedAt"`
	// The version of the domain
	Version pulumi.StringOutput `pulumi:"version"`
}

// NewKoyebDomain registers a new resource with the given unique name, arguments, and options.
func NewKoyebDomain(ctx *pulumi.Context,
	name string, args *KoyebDomainArgs, opts ...pulumi.ResourceOption) (*KoyebDomain, error) {
	if args == nil {
		args = &KoyebDomainArgs{}
	}

	var resource KoyebDomain
	err := ctx.RegisterResource("koyeb:index/koyebDomain:KoyebDomain", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKoyebDomain gets an existing KoyebDomain resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKoyebDomain(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KoyebDomainState, opts ...pulumi.ResourceOption) (*KoyebDomain, error) {
	var resource KoyebDomain
	err := ctx.ReadResource("koyeb:index/koyebDomain:KoyebDomain", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KoyebDomain resources.
type koyebDomainState struct {
	// The app name the domain is assigned to
	AppName *string `pulumi:"appName"`
	// The date and time of when the domain was created
	CreatedAt *string `pulumi:"createdAt"`
	// The deployment group assigned to the domain
	DeploymentGroup *string `pulumi:"deploymentGroup"`
	// The CNAME record to point the domain to
	IntendedCname *string `pulumi:"intendedCname"`
	// The status messages of the domain
	Messages *string `pulumi:"messages"`
	// The domain name
	Name *string `pulumi:"name"`
	// The organization ID owning the domain
	OrganizationId *string `pulumi:"organizationId"`
	// The status of the domain
	Status *string `pulumi:"status"`
	// The domain type
	Type *string `pulumi:"type"`
	// The date and time of when the domain was last updated
	UpdatedAt *string `pulumi:"updatedAt"`
	// The date and time of when the domain was last verified
	VerifiedAt *string `pulumi:"verifiedAt"`
	// The version of the domain
	Version *string `pulumi:"version"`
}

type KoyebDomainState struct {
	// The app name the domain is assigned to
	AppName pulumi.StringPtrInput
	// The date and time of when the domain was created
	CreatedAt pulumi.StringPtrInput
	// The deployment group assigned to the domain
	DeploymentGroup pulumi.StringPtrInput
	// The CNAME record to point the domain to
	IntendedCname pulumi.StringPtrInput
	// The status messages of the domain
	Messages pulumi.StringPtrInput
	// The domain name
	Name pulumi.StringPtrInput
	// The organization ID owning the domain
	OrganizationId pulumi.StringPtrInput
	// The status of the domain
	Status pulumi.StringPtrInput
	// The domain type
	Type pulumi.StringPtrInput
	// The date and time of when the domain was last updated
	UpdatedAt pulumi.StringPtrInput
	// The date and time of when the domain was last verified
	VerifiedAt pulumi.StringPtrInput
	// The version of the domain
	Version pulumi.StringPtrInput
}

func (KoyebDomainState) ElementType() reflect.Type {
	return reflect.TypeOf((*koyebDomainState)(nil)).Elem()
}

type koyebDomainArgs struct {
	// The app name the domain is assigned to
	AppName *string `pulumi:"appName"`
	// The deployment group assigned to the domain
	DeploymentGroup *string `pulumi:"deploymentGroup"`
	// The CNAME record to point the domain to
	IntendedCname *string `pulumi:"intendedCname"`
	// The status messages of the domain
	Messages *string `pulumi:"messages"`
	// The domain name
	Name *string `pulumi:"name"`
	// The date and time of when the domain was last verified
	VerifiedAt *string `pulumi:"verifiedAt"`
}

// The set of arguments for constructing a KoyebDomain resource.
type KoyebDomainArgs struct {
	// The app name the domain is assigned to
	AppName pulumi.StringPtrInput
	// The deployment group assigned to the domain
	DeploymentGroup pulumi.StringPtrInput
	// The CNAME record to point the domain to
	IntendedCname pulumi.StringPtrInput
	// The status messages of the domain
	Messages pulumi.StringPtrInput
	// The domain name
	Name pulumi.StringPtrInput
	// The date and time of when the domain was last verified
	VerifiedAt pulumi.StringPtrInput
}

func (KoyebDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*koyebDomainArgs)(nil)).Elem()
}

type KoyebDomainInput interface {
	pulumi.Input

	ToKoyebDomainOutput() KoyebDomainOutput
	ToKoyebDomainOutputWithContext(ctx context.Context) KoyebDomainOutput
}

func (*KoyebDomain) ElementType() reflect.Type {
	return reflect.TypeOf((**KoyebDomain)(nil)).Elem()
}

func (i *KoyebDomain) ToKoyebDomainOutput() KoyebDomainOutput {
	return i.ToKoyebDomainOutputWithContext(context.Background())
}

func (i *KoyebDomain) ToKoyebDomainOutputWithContext(ctx context.Context) KoyebDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KoyebDomainOutput)
}

// KoyebDomainArrayInput is an input type that accepts KoyebDomainArray and KoyebDomainArrayOutput values.
// You can construct a concrete instance of `KoyebDomainArrayInput` via:
//
//          KoyebDomainArray{ KoyebDomainArgs{...} }
type KoyebDomainArrayInput interface {
	pulumi.Input

	ToKoyebDomainArrayOutput() KoyebDomainArrayOutput
	ToKoyebDomainArrayOutputWithContext(context.Context) KoyebDomainArrayOutput
}

type KoyebDomainArray []KoyebDomainInput

func (KoyebDomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KoyebDomain)(nil)).Elem()
}

func (i KoyebDomainArray) ToKoyebDomainArrayOutput() KoyebDomainArrayOutput {
	return i.ToKoyebDomainArrayOutputWithContext(context.Background())
}

func (i KoyebDomainArray) ToKoyebDomainArrayOutputWithContext(ctx context.Context) KoyebDomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KoyebDomainArrayOutput)
}

// KoyebDomainMapInput is an input type that accepts KoyebDomainMap and KoyebDomainMapOutput values.
// You can construct a concrete instance of `KoyebDomainMapInput` via:
//
//          KoyebDomainMap{ "key": KoyebDomainArgs{...} }
type KoyebDomainMapInput interface {
	pulumi.Input

	ToKoyebDomainMapOutput() KoyebDomainMapOutput
	ToKoyebDomainMapOutputWithContext(context.Context) KoyebDomainMapOutput
}

type KoyebDomainMap map[string]KoyebDomainInput

func (KoyebDomainMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KoyebDomain)(nil)).Elem()
}

func (i KoyebDomainMap) ToKoyebDomainMapOutput() KoyebDomainMapOutput {
	return i.ToKoyebDomainMapOutputWithContext(context.Background())
}

func (i KoyebDomainMap) ToKoyebDomainMapOutputWithContext(ctx context.Context) KoyebDomainMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KoyebDomainMapOutput)
}

type KoyebDomainOutput struct{ *pulumi.OutputState }

func (KoyebDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KoyebDomain)(nil)).Elem()
}

func (o KoyebDomainOutput) ToKoyebDomainOutput() KoyebDomainOutput {
	return o
}

func (o KoyebDomainOutput) ToKoyebDomainOutputWithContext(ctx context.Context) KoyebDomainOutput {
	return o
}

// The app name the domain is assigned to
func (o KoyebDomainOutput) AppName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KoyebDomain) pulumi.StringPtrOutput { return v.AppName }).(pulumi.StringPtrOutput)
}

// The date and time of when the domain was created
func (o KoyebDomainOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *KoyebDomain) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The deployment group assigned to the domain
func (o KoyebDomainOutput) DeploymentGroup() pulumi.StringOutput {
	return o.ApplyT(func(v *KoyebDomain) pulumi.StringOutput { return v.DeploymentGroup }).(pulumi.StringOutput)
}

// The CNAME record to point the domain to
func (o KoyebDomainOutput) IntendedCname() pulumi.StringOutput {
	return o.ApplyT(func(v *KoyebDomain) pulumi.StringOutput { return v.IntendedCname }).(pulumi.StringOutput)
}

// The status messages of the domain
func (o KoyebDomainOutput) Messages() pulumi.StringOutput {
	return o.ApplyT(func(v *KoyebDomain) pulumi.StringOutput { return v.Messages }).(pulumi.StringOutput)
}

// The domain name
func (o KoyebDomainOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *KoyebDomain) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The organization ID owning the domain
func (o KoyebDomainOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v *KoyebDomain) pulumi.StringOutput { return v.OrganizationId }).(pulumi.StringOutput)
}

// The status of the domain
func (o KoyebDomainOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v *KoyebDomain) pulumi.StringOutput { return v.Status }).(pulumi.StringOutput)
}

// The domain type
func (o KoyebDomainOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *KoyebDomain) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// The date and time of when the domain was last updated
func (o KoyebDomainOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *KoyebDomain) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

// The date and time of when the domain was last verified
func (o KoyebDomainOutput) VerifiedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *KoyebDomain) pulumi.StringOutput { return v.VerifiedAt }).(pulumi.StringOutput)
}

// The version of the domain
func (o KoyebDomainOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v *KoyebDomain) pulumi.StringOutput { return v.Version }).(pulumi.StringOutput)
}

type KoyebDomainArrayOutput struct{ *pulumi.OutputState }

func (KoyebDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KoyebDomain)(nil)).Elem()
}

func (o KoyebDomainArrayOutput) ToKoyebDomainArrayOutput() KoyebDomainArrayOutput {
	return o
}

func (o KoyebDomainArrayOutput) ToKoyebDomainArrayOutputWithContext(ctx context.Context) KoyebDomainArrayOutput {
	return o
}

func (o KoyebDomainArrayOutput) Index(i pulumi.IntInput) KoyebDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *KoyebDomain {
		return vs[0].([]*KoyebDomain)[vs[1].(int)]
	}).(KoyebDomainOutput)
}

type KoyebDomainMapOutput struct{ *pulumi.OutputState }

func (KoyebDomainMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KoyebDomain)(nil)).Elem()
}

func (o KoyebDomainMapOutput) ToKoyebDomainMapOutput() KoyebDomainMapOutput {
	return o
}

func (o KoyebDomainMapOutput) ToKoyebDomainMapOutputWithContext(ctx context.Context) KoyebDomainMapOutput {
	return o
}

func (o KoyebDomainMapOutput) MapIndex(k pulumi.StringInput) KoyebDomainOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *KoyebDomain {
		return vs[0].(map[string]*KoyebDomain)[vs[1].(string)]
	}).(KoyebDomainOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KoyebDomainInput)(nil)).Elem(), &KoyebDomain{})
	pulumi.RegisterInputType(reflect.TypeOf((*KoyebDomainArrayInput)(nil)).Elem(), KoyebDomainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KoyebDomainMapInput)(nil)).Elem(), KoyebDomainMap{})
	pulumi.RegisterOutputType(KoyebDomainOutput{})
	pulumi.RegisterOutputType(KoyebDomainArrayOutput{})
	pulumi.RegisterOutputType(KoyebDomainMapOutput{})
}
