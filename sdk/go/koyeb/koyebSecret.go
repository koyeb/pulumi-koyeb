// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package koyeb

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-koyeb/sdk/go/koyeb"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := koyeb.NewKoyebSecret(ctx, "simple-secret", &koyeb.KoyebSecretArgs{
//				Value: pulumi.String("secret-value"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type KoyebSecret struct {
	pulumi.CustomResourceState

	// The Azure registry configuration to use
	AzureContainerRegistry KoyebSecretAzureContainerRegistryPtrOutput `pulumi:"azureContainerRegistry"`
	// The date and time of when the secret was created
	CreatedAt pulumi.StringOutput `pulumi:"createdAt"`
	// The DigitalOcean registry configuration to use
	DigitalOceanContainerRegistry KoyebSecretDigitalOceanContainerRegistryPtrOutput `pulumi:"digitalOceanContainerRegistry"`
	// The DockerHub registry configuration to use
	DockerHubRegistry KoyebSecretDockerHubRegistryPtrOutput `pulumi:"dockerHubRegistry"`
	// The GitHub registry configuration to use
	GithubRegistry KoyebSecretGithubRegistryPtrOutput `pulumi:"githubRegistry"`
	// The GitLab registry configuration to use
	GitlabRegistry KoyebSecretGitlabRegistryPtrOutput `pulumi:"gitlabRegistry"`
	// The secret name
	Name pulumi.StringOutput `pulumi:"name"`
	// The organization ID owning the secret
	OrganizationId pulumi.StringOutput `pulumi:"organizationId"`
	// The DigitalOcean registry configuration to use
	PrivateRegistry KoyebSecretPrivateRegistryPtrOutput `pulumi:"privateRegistry"`
	// The secret type
	Type pulumi.StringPtrOutput `pulumi:"type"`
	// The date and time of when the secret was last updated
	UpdatedAt pulumi.StringOutput `pulumi:"updatedAt"`
	// The secret value
	Value pulumi.StringPtrOutput `pulumi:"value"`
}

// NewKoyebSecret registers a new resource with the given unique name, arguments, and options.
func NewKoyebSecret(ctx *pulumi.Context,
	name string, args *KoyebSecretArgs, opts ...pulumi.ResourceOption) (*KoyebSecret, error) {
	if args == nil {
		args = &KoyebSecretArgs{}
	}

	opts = pkgResourceDefaultOpts(opts)
	var resource KoyebSecret
	err := ctx.RegisterResource("koyeb:index/koyebSecret:KoyebSecret", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetKoyebSecret gets an existing KoyebSecret resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetKoyebSecret(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *KoyebSecretState, opts ...pulumi.ResourceOption) (*KoyebSecret, error) {
	var resource KoyebSecret
	err := ctx.ReadResource("koyeb:index/koyebSecret:KoyebSecret", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering KoyebSecret resources.
type koyebSecretState struct {
	// The Azure registry configuration to use
	AzureContainerRegistry *KoyebSecretAzureContainerRegistry `pulumi:"azureContainerRegistry"`
	// The date and time of when the secret was created
	CreatedAt *string `pulumi:"createdAt"`
	// The DigitalOcean registry configuration to use
	DigitalOceanContainerRegistry *KoyebSecretDigitalOceanContainerRegistry `pulumi:"digitalOceanContainerRegistry"`
	// The DockerHub registry configuration to use
	DockerHubRegistry *KoyebSecretDockerHubRegistry `pulumi:"dockerHubRegistry"`
	// The GitHub registry configuration to use
	GithubRegistry *KoyebSecretGithubRegistry `pulumi:"githubRegistry"`
	// The GitLab registry configuration to use
	GitlabRegistry *KoyebSecretGitlabRegistry `pulumi:"gitlabRegistry"`
	// The secret name
	Name *string `pulumi:"name"`
	// The organization ID owning the secret
	OrganizationId *string `pulumi:"organizationId"`
	// The DigitalOcean registry configuration to use
	PrivateRegistry *KoyebSecretPrivateRegistry `pulumi:"privateRegistry"`
	// The secret type
	Type *string `pulumi:"type"`
	// The date and time of when the secret was last updated
	UpdatedAt *string `pulumi:"updatedAt"`
	// The secret value
	Value *string `pulumi:"value"`
}

type KoyebSecretState struct {
	// The Azure registry configuration to use
	AzureContainerRegistry KoyebSecretAzureContainerRegistryPtrInput
	// The date and time of when the secret was created
	CreatedAt pulumi.StringPtrInput
	// The DigitalOcean registry configuration to use
	DigitalOceanContainerRegistry KoyebSecretDigitalOceanContainerRegistryPtrInput
	// The DockerHub registry configuration to use
	DockerHubRegistry KoyebSecretDockerHubRegistryPtrInput
	// The GitHub registry configuration to use
	GithubRegistry KoyebSecretGithubRegistryPtrInput
	// The GitLab registry configuration to use
	GitlabRegistry KoyebSecretGitlabRegistryPtrInput
	// The secret name
	Name pulumi.StringPtrInput
	// The organization ID owning the secret
	OrganizationId pulumi.StringPtrInput
	// The DigitalOcean registry configuration to use
	PrivateRegistry KoyebSecretPrivateRegistryPtrInput
	// The secret type
	Type pulumi.StringPtrInput
	// The date and time of when the secret was last updated
	UpdatedAt pulumi.StringPtrInput
	// The secret value
	Value pulumi.StringPtrInput
}

func (KoyebSecretState) ElementType() reflect.Type {
	return reflect.TypeOf((*koyebSecretState)(nil)).Elem()
}

type koyebSecretArgs struct {
	// The Azure registry configuration to use
	AzureContainerRegistry *KoyebSecretAzureContainerRegistry `pulumi:"azureContainerRegistry"`
	// The DigitalOcean registry configuration to use
	DigitalOceanContainerRegistry *KoyebSecretDigitalOceanContainerRegistry `pulumi:"digitalOceanContainerRegistry"`
	// The DockerHub registry configuration to use
	DockerHubRegistry *KoyebSecretDockerHubRegistry `pulumi:"dockerHubRegistry"`
	// The GitHub registry configuration to use
	GithubRegistry *KoyebSecretGithubRegistry `pulumi:"githubRegistry"`
	// The GitLab registry configuration to use
	GitlabRegistry *KoyebSecretGitlabRegistry `pulumi:"gitlabRegistry"`
	// The secret name
	Name *string `pulumi:"name"`
	// The DigitalOcean registry configuration to use
	PrivateRegistry *KoyebSecretPrivateRegistry `pulumi:"privateRegistry"`
	// The secret type
	Type *string `pulumi:"type"`
	// The secret value
	Value *string `pulumi:"value"`
}

// The set of arguments for constructing a KoyebSecret resource.
type KoyebSecretArgs struct {
	// The Azure registry configuration to use
	AzureContainerRegistry KoyebSecretAzureContainerRegistryPtrInput
	// The DigitalOcean registry configuration to use
	DigitalOceanContainerRegistry KoyebSecretDigitalOceanContainerRegistryPtrInput
	// The DockerHub registry configuration to use
	DockerHubRegistry KoyebSecretDockerHubRegistryPtrInput
	// The GitHub registry configuration to use
	GithubRegistry KoyebSecretGithubRegistryPtrInput
	// The GitLab registry configuration to use
	GitlabRegistry KoyebSecretGitlabRegistryPtrInput
	// The secret name
	Name pulumi.StringPtrInput
	// The DigitalOcean registry configuration to use
	PrivateRegistry KoyebSecretPrivateRegistryPtrInput
	// The secret type
	Type pulumi.StringPtrInput
	// The secret value
	Value pulumi.StringPtrInput
}

func (KoyebSecretArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*koyebSecretArgs)(nil)).Elem()
}

type KoyebSecretInput interface {
	pulumi.Input

	ToKoyebSecretOutput() KoyebSecretOutput
	ToKoyebSecretOutputWithContext(ctx context.Context) KoyebSecretOutput
}

func (*KoyebSecret) ElementType() reflect.Type {
	return reflect.TypeOf((**KoyebSecret)(nil)).Elem()
}

func (i *KoyebSecret) ToKoyebSecretOutput() KoyebSecretOutput {
	return i.ToKoyebSecretOutputWithContext(context.Background())
}

func (i *KoyebSecret) ToKoyebSecretOutputWithContext(ctx context.Context) KoyebSecretOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KoyebSecretOutput)
}

// KoyebSecretArrayInput is an input type that accepts KoyebSecretArray and KoyebSecretArrayOutput values.
// You can construct a concrete instance of `KoyebSecretArrayInput` via:
//
//	KoyebSecretArray{ KoyebSecretArgs{...} }
type KoyebSecretArrayInput interface {
	pulumi.Input

	ToKoyebSecretArrayOutput() KoyebSecretArrayOutput
	ToKoyebSecretArrayOutputWithContext(context.Context) KoyebSecretArrayOutput
}

type KoyebSecretArray []KoyebSecretInput

func (KoyebSecretArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KoyebSecret)(nil)).Elem()
}

func (i KoyebSecretArray) ToKoyebSecretArrayOutput() KoyebSecretArrayOutput {
	return i.ToKoyebSecretArrayOutputWithContext(context.Background())
}

func (i KoyebSecretArray) ToKoyebSecretArrayOutputWithContext(ctx context.Context) KoyebSecretArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KoyebSecretArrayOutput)
}

// KoyebSecretMapInput is an input type that accepts KoyebSecretMap and KoyebSecretMapOutput values.
// You can construct a concrete instance of `KoyebSecretMapInput` via:
//
//	KoyebSecretMap{ "key": KoyebSecretArgs{...} }
type KoyebSecretMapInput interface {
	pulumi.Input

	ToKoyebSecretMapOutput() KoyebSecretMapOutput
	ToKoyebSecretMapOutputWithContext(context.Context) KoyebSecretMapOutput
}

type KoyebSecretMap map[string]KoyebSecretInput

func (KoyebSecretMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KoyebSecret)(nil)).Elem()
}

func (i KoyebSecretMap) ToKoyebSecretMapOutput() KoyebSecretMapOutput {
	return i.ToKoyebSecretMapOutputWithContext(context.Background())
}

func (i KoyebSecretMap) ToKoyebSecretMapOutputWithContext(ctx context.Context) KoyebSecretMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KoyebSecretMapOutput)
}

type KoyebSecretOutput struct{ *pulumi.OutputState }

func (KoyebSecretOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KoyebSecret)(nil)).Elem()
}

func (o KoyebSecretOutput) ToKoyebSecretOutput() KoyebSecretOutput {
	return o
}

func (o KoyebSecretOutput) ToKoyebSecretOutputWithContext(ctx context.Context) KoyebSecretOutput {
	return o
}

// The Azure registry configuration to use
func (o KoyebSecretOutput) AzureContainerRegistry() KoyebSecretAzureContainerRegistryPtrOutput {
	return o.ApplyT(func(v *KoyebSecret) KoyebSecretAzureContainerRegistryPtrOutput { return v.AzureContainerRegistry }).(KoyebSecretAzureContainerRegistryPtrOutput)
}

// The date and time of when the secret was created
func (o KoyebSecretOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *KoyebSecret) pulumi.StringOutput { return v.CreatedAt }).(pulumi.StringOutput)
}

// The DigitalOcean registry configuration to use
func (o KoyebSecretOutput) DigitalOceanContainerRegistry() KoyebSecretDigitalOceanContainerRegistryPtrOutput {
	return o.ApplyT(func(v *KoyebSecret) KoyebSecretDigitalOceanContainerRegistryPtrOutput {
		return v.DigitalOceanContainerRegistry
	}).(KoyebSecretDigitalOceanContainerRegistryPtrOutput)
}

// The DockerHub registry configuration to use
func (o KoyebSecretOutput) DockerHubRegistry() KoyebSecretDockerHubRegistryPtrOutput {
	return o.ApplyT(func(v *KoyebSecret) KoyebSecretDockerHubRegistryPtrOutput { return v.DockerHubRegistry }).(KoyebSecretDockerHubRegistryPtrOutput)
}

// The GitHub registry configuration to use
func (o KoyebSecretOutput) GithubRegistry() KoyebSecretGithubRegistryPtrOutput {
	return o.ApplyT(func(v *KoyebSecret) KoyebSecretGithubRegistryPtrOutput { return v.GithubRegistry }).(KoyebSecretGithubRegistryPtrOutput)
}

// The GitLab registry configuration to use
func (o KoyebSecretOutput) GitlabRegistry() KoyebSecretGitlabRegistryPtrOutput {
	return o.ApplyT(func(v *KoyebSecret) KoyebSecretGitlabRegistryPtrOutput { return v.GitlabRegistry }).(KoyebSecretGitlabRegistryPtrOutput)
}

// The secret name
func (o KoyebSecretOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *KoyebSecret) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The organization ID owning the secret
func (o KoyebSecretOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v *KoyebSecret) pulumi.StringOutput { return v.OrganizationId }).(pulumi.StringOutput)
}

// The DigitalOcean registry configuration to use
func (o KoyebSecretOutput) PrivateRegistry() KoyebSecretPrivateRegistryPtrOutput {
	return o.ApplyT(func(v *KoyebSecret) KoyebSecretPrivateRegistryPtrOutput { return v.PrivateRegistry }).(KoyebSecretPrivateRegistryPtrOutput)
}

// The secret type
func (o KoyebSecretOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KoyebSecret) pulumi.StringPtrOutput { return v.Type }).(pulumi.StringPtrOutput)
}

// The date and time of when the secret was last updated
func (o KoyebSecretOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v *KoyebSecret) pulumi.StringOutput { return v.UpdatedAt }).(pulumi.StringOutput)
}

// The secret value
func (o KoyebSecretOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KoyebSecret) pulumi.StringPtrOutput { return v.Value }).(pulumi.StringPtrOutput)
}

type KoyebSecretArrayOutput struct{ *pulumi.OutputState }

func (KoyebSecretArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*KoyebSecret)(nil)).Elem()
}

func (o KoyebSecretArrayOutput) ToKoyebSecretArrayOutput() KoyebSecretArrayOutput {
	return o
}

func (o KoyebSecretArrayOutput) ToKoyebSecretArrayOutputWithContext(ctx context.Context) KoyebSecretArrayOutput {
	return o
}

func (o KoyebSecretArrayOutput) Index(i pulumi.IntInput) KoyebSecretOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *KoyebSecret {
		return vs[0].([]*KoyebSecret)[vs[1].(int)]
	}).(KoyebSecretOutput)
}

type KoyebSecretMapOutput struct{ *pulumi.OutputState }

func (KoyebSecretMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*KoyebSecret)(nil)).Elem()
}

func (o KoyebSecretMapOutput) ToKoyebSecretMapOutput() KoyebSecretMapOutput {
	return o
}

func (o KoyebSecretMapOutput) ToKoyebSecretMapOutputWithContext(ctx context.Context) KoyebSecretMapOutput {
	return o
}

func (o KoyebSecretMapOutput) MapIndex(k pulumi.StringInput) KoyebSecretOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *KoyebSecret {
		return vs[0].(map[string]*KoyebSecret)[vs[1].(string)]
	}).(KoyebSecretOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*KoyebSecretInput)(nil)).Elem(), &KoyebSecret{})
	pulumi.RegisterInputType(reflect.TypeOf((*KoyebSecretArrayInput)(nil)).Elem(), KoyebSecretArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KoyebSecretMapInput)(nil)).Elem(), KoyebSecretMap{})
	pulumi.RegisterOutputType(KoyebSecretOutput{})
	pulumi.RegisterOutputType(KoyebSecretArrayOutput{})
	pulumi.RegisterOutputType(KoyebSecretMapOutput{})
}
