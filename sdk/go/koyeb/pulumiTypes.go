// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package koyeb

import (
	"context"
	"reflect"

	"github.com/koyeb/pulumi-koyeb/sdk/go/koyeb/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type AppDomain struct {
	// The app name the domain is assigned to
	AppName *string `pulumi:"appName"`
	// The date and time of when the domain was created
	CreatedAt *string `pulumi:"createdAt"`
	// The deployment group assigned to the domain
	DeploymentGroup *string `pulumi:"deploymentGroup"`
	// The domain ID
	Id *string `pulumi:"id"`
	// The CNAME record to point the domain to
	IntendedCname *string `pulumi:"intendedCname"`
	// The status messages of the domain
	Messages *string `pulumi:"messages"`
	// The domain name
	Name string `pulumi:"name"`
	// The organization ID owning the domain
	OrganizationId *string `pulumi:"organizationId"`
	// The status of the domain
	Status *string `pulumi:"status"`
	// The domain type
	Type *string `pulumi:"type"`
	// The date and time of when the domain was last updated
	UpdatedAt *string `pulumi:"updatedAt"`
	// The date and time of when the domain was last verified
	VerifiedAt *string `pulumi:"verifiedAt"`
	// The version of the domain
	Version *string `pulumi:"version"`
}

// AppDomainInput is an input type that accepts AppDomainArgs and AppDomainOutput values.
// You can construct a concrete instance of `AppDomainInput` via:
//
//	AppDomainArgs{...}
type AppDomainInput interface {
	pulumi.Input

	ToAppDomainOutput() AppDomainOutput
	ToAppDomainOutputWithContext(context.Context) AppDomainOutput
}

type AppDomainArgs struct {
	// The app name the domain is assigned to
	AppName pulumi.StringPtrInput `pulumi:"appName"`
	// The date and time of when the domain was created
	CreatedAt pulumi.StringPtrInput `pulumi:"createdAt"`
	// The deployment group assigned to the domain
	DeploymentGroup pulumi.StringPtrInput `pulumi:"deploymentGroup"`
	// The domain ID
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The CNAME record to point the domain to
	IntendedCname pulumi.StringPtrInput `pulumi:"intendedCname"`
	// The status messages of the domain
	Messages pulumi.StringPtrInput `pulumi:"messages"`
	// The domain name
	Name pulumi.StringInput `pulumi:"name"`
	// The organization ID owning the domain
	OrganizationId pulumi.StringPtrInput `pulumi:"organizationId"`
	// The status of the domain
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The domain type
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The date and time of when the domain was last updated
	UpdatedAt pulumi.StringPtrInput `pulumi:"updatedAt"`
	// The date and time of when the domain was last verified
	VerifiedAt pulumi.StringPtrInput `pulumi:"verifiedAt"`
	// The version of the domain
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (AppDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppDomain)(nil)).Elem()
}

func (i AppDomainArgs) ToAppDomainOutput() AppDomainOutput {
	return i.ToAppDomainOutputWithContext(context.Background())
}

func (i AppDomainArgs) ToAppDomainOutputWithContext(ctx context.Context) AppDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppDomainOutput)
}

// AppDomainArrayInput is an input type that accepts AppDomainArray and AppDomainArrayOutput values.
// You can construct a concrete instance of `AppDomainArrayInput` via:
//
//	AppDomainArray{ AppDomainArgs{...} }
type AppDomainArrayInput interface {
	pulumi.Input

	ToAppDomainArrayOutput() AppDomainArrayOutput
	ToAppDomainArrayOutputWithContext(context.Context) AppDomainArrayOutput
}

type AppDomainArray []AppDomainInput

func (AppDomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppDomain)(nil)).Elem()
}

func (i AppDomainArray) ToAppDomainArrayOutput() AppDomainArrayOutput {
	return i.ToAppDomainArrayOutputWithContext(context.Background())
}

func (i AppDomainArray) ToAppDomainArrayOutputWithContext(ctx context.Context) AppDomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppDomainArrayOutput)
}

type AppDomainOutput struct{ *pulumi.OutputState }

func (AppDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppDomain)(nil)).Elem()
}

func (o AppDomainOutput) ToAppDomainOutput() AppDomainOutput {
	return o
}

func (o AppDomainOutput) ToAppDomainOutputWithContext(ctx context.Context) AppDomainOutput {
	return o
}

// The app name the domain is assigned to
func (o AppDomainOutput) AppName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppDomain) *string { return v.AppName }).(pulumi.StringPtrOutput)
}

// The date and time of when the domain was created
func (o AppDomainOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppDomain) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The deployment group assigned to the domain
func (o AppDomainOutput) DeploymentGroup() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppDomain) *string { return v.DeploymentGroup }).(pulumi.StringPtrOutput)
}

// The domain ID
func (o AppDomainOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppDomain) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// The CNAME record to point the domain to
func (o AppDomainOutput) IntendedCname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppDomain) *string { return v.IntendedCname }).(pulumi.StringPtrOutput)
}

// The status messages of the domain
func (o AppDomainOutput) Messages() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppDomain) *string { return v.Messages }).(pulumi.StringPtrOutput)
}

// The domain name
func (o AppDomainOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AppDomain) string { return v.Name }).(pulumi.StringOutput)
}

// The organization ID owning the domain
func (o AppDomainOutput) OrganizationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppDomain) *string { return v.OrganizationId }).(pulumi.StringPtrOutput)
}

// The status of the domain
func (o AppDomainOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppDomain) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The domain type
func (o AppDomainOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppDomain) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The date and time of when the domain was last updated
func (o AppDomainOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppDomain) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

// The date and time of when the domain was last verified
func (o AppDomainOutput) VerifiedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppDomain) *string { return v.VerifiedAt }).(pulumi.StringPtrOutput)
}

// The version of the domain
func (o AppDomainOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppDomain) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type AppDomainArrayOutput struct{ *pulumi.OutputState }

func (AppDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppDomain)(nil)).Elem()
}

func (o AppDomainArrayOutput) ToAppDomainArrayOutput() AppDomainArrayOutput {
	return o
}

func (o AppDomainArrayOutput) ToAppDomainArrayOutputWithContext(ctx context.Context) AppDomainArrayOutput {
	return o
}

func (o AppDomainArrayOutput) Index(i pulumi.IntInput) AppDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppDomain {
		return vs[0].([]AppDomain)[vs[1].(int)]
	}).(AppDomainOutput)
}

type SecretAzureContainerRegistry struct {
	// The registry password
	Password string `pulumi:"password"`
	// The registry name
	RegistryName string `pulumi:"registryName"`
	// The registry username
	Username string `pulumi:"username"`
}

// SecretAzureContainerRegistryInput is an input type that accepts SecretAzureContainerRegistryArgs and SecretAzureContainerRegistryOutput values.
// You can construct a concrete instance of `SecretAzureContainerRegistryInput` via:
//
//	SecretAzureContainerRegistryArgs{...}
type SecretAzureContainerRegistryInput interface {
	pulumi.Input

	ToSecretAzureContainerRegistryOutput() SecretAzureContainerRegistryOutput
	ToSecretAzureContainerRegistryOutputWithContext(context.Context) SecretAzureContainerRegistryOutput
}

type SecretAzureContainerRegistryArgs struct {
	// The registry password
	Password pulumi.StringInput `pulumi:"password"`
	// The registry name
	RegistryName pulumi.StringInput `pulumi:"registryName"`
	// The registry username
	Username pulumi.StringInput `pulumi:"username"`
}

func (SecretAzureContainerRegistryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretAzureContainerRegistry)(nil)).Elem()
}

func (i SecretAzureContainerRegistryArgs) ToSecretAzureContainerRegistryOutput() SecretAzureContainerRegistryOutput {
	return i.ToSecretAzureContainerRegistryOutputWithContext(context.Background())
}

func (i SecretAzureContainerRegistryArgs) ToSecretAzureContainerRegistryOutputWithContext(ctx context.Context) SecretAzureContainerRegistryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretAzureContainerRegistryOutput)
}

func (i SecretAzureContainerRegistryArgs) ToSecretAzureContainerRegistryPtrOutput() SecretAzureContainerRegistryPtrOutput {
	return i.ToSecretAzureContainerRegistryPtrOutputWithContext(context.Background())
}

func (i SecretAzureContainerRegistryArgs) ToSecretAzureContainerRegistryPtrOutputWithContext(ctx context.Context) SecretAzureContainerRegistryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretAzureContainerRegistryOutput).ToSecretAzureContainerRegistryPtrOutputWithContext(ctx)
}

// SecretAzureContainerRegistryPtrInput is an input type that accepts SecretAzureContainerRegistryArgs, SecretAzureContainerRegistryPtr and SecretAzureContainerRegistryPtrOutput values.
// You can construct a concrete instance of `SecretAzureContainerRegistryPtrInput` via:
//
//	        SecretAzureContainerRegistryArgs{...}
//
//	or:
//
//	        nil
type SecretAzureContainerRegistryPtrInput interface {
	pulumi.Input

	ToSecretAzureContainerRegistryPtrOutput() SecretAzureContainerRegistryPtrOutput
	ToSecretAzureContainerRegistryPtrOutputWithContext(context.Context) SecretAzureContainerRegistryPtrOutput
}

type secretAzureContainerRegistryPtrType SecretAzureContainerRegistryArgs

func SecretAzureContainerRegistryPtr(v *SecretAzureContainerRegistryArgs) SecretAzureContainerRegistryPtrInput {
	return (*secretAzureContainerRegistryPtrType)(v)
}

func (*secretAzureContainerRegistryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretAzureContainerRegistry)(nil)).Elem()
}

func (i *secretAzureContainerRegistryPtrType) ToSecretAzureContainerRegistryPtrOutput() SecretAzureContainerRegistryPtrOutput {
	return i.ToSecretAzureContainerRegistryPtrOutputWithContext(context.Background())
}

func (i *secretAzureContainerRegistryPtrType) ToSecretAzureContainerRegistryPtrOutputWithContext(ctx context.Context) SecretAzureContainerRegistryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretAzureContainerRegistryPtrOutput)
}

type SecretAzureContainerRegistryOutput struct{ *pulumi.OutputState }

func (SecretAzureContainerRegistryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretAzureContainerRegistry)(nil)).Elem()
}

func (o SecretAzureContainerRegistryOutput) ToSecretAzureContainerRegistryOutput() SecretAzureContainerRegistryOutput {
	return o
}

func (o SecretAzureContainerRegistryOutput) ToSecretAzureContainerRegistryOutputWithContext(ctx context.Context) SecretAzureContainerRegistryOutput {
	return o
}

func (o SecretAzureContainerRegistryOutput) ToSecretAzureContainerRegistryPtrOutput() SecretAzureContainerRegistryPtrOutput {
	return o.ToSecretAzureContainerRegistryPtrOutputWithContext(context.Background())
}

func (o SecretAzureContainerRegistryOutput) ToSecretAzureContainerRegistryPtrOutputWithContext(ctx context.Context) SecretAzureContainerRegistryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretAzureContainerRegistry) *SecretAzureContainerRegistry {
		return &v
	}).(SecretAzureContainerRegistryPtrOutput)
}

// The registry password
func (o SecretAzureContainerRegistryOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v SecretAzureContainerRegistry) string { return v.Password }).(pulumi.StringOutput)
}

// The registry name
func (o SecretAzureContainerRegistryOutput) RegistryName() pulumi.StringOutput {
	return o.ApplyT(func(v SecretAzureContainerRegistry) string { return v.RegistryName }).(pulumi.StringOutput)
}

// The registry username
func (o SecretAzureContainerRegistryOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v SecretAzureContainerRegistry) string { return v.Username }).(pulumi.StringOutput)
}

type SecretAzureContainerRegistryPtrOutput struct{ *pulumi.OutputState }

func (SecretAzureContainerRegistryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretAzureContainerRegistry)(nil)).Elem()
}

func (o SecretAzureContainerRegistryPtrOutput) ToSecretAzureContainerRegistryPtrOutput() SecretAzureContainerRegistryPtrOutput {
	return o
}

func (o SecretAzureContainerRegistryPtrOutput) ToSecretAzureContainerRegistryPtrOutputWithContext(ctx context.Context) SecretAzureContainerRegistryPtrOutput {
	return o
}

func (o SecretAzureContainerRegistryPtrOutput) Elem() SecretAzureContainerRegistryOutput {
	return o.ApplyT(func(v *SecretAzureContainerRegistry) SecretAzureContainerRegistry {
		if v != nil {
			return *v
		}
		var ret SecretAzureContainerRegistry
		return ret
	}).(SecretAzureContainerRegistryOutput)
}

// The registry password
func (o SecretAzureContainerRegistryPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretAzureContainerRegistry) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The registry name
func (o SecretAzureContainerRegistryPtrOutput) RegistryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretAzureContainerRegistry) *string {
		if v == nil {
			return nil
		}
		return &v.RegistryName
	}).(pulumi.StringPtrOutput)
}

// The registry username
func (o SecretAzureContainerRegistryPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretAzureContainerRegistry) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type SecretDigitalOceanContainerRegistry struct {
	// The registry password
	Password string `pulumi:"password"`
	// The registry username
	Username string `pulumi:"username"`
}

// SecretDigitalOceanContainerRegistryInput is an input type that accepts SecretDigitalOceanContainerRegistryArgs and SecretDigitalOceanContainerRegistryOutput values.
// You can construct a concrete instance of `SecretDigitalOceanContainerRegistryInput` via:
//
//	SecretDigitalOceanContainerRegistryArgs{...}
type SecretDigitalOceanContainerRegistryInput interface {
	pulumi.Input

	ToSecretDigitalOceanContainerRegistryOutput() SecretDigitalOceanContainerRegistryOutput
	ToSecretDigitalOceanContainerRegistryOutputWithContext(context.Context) SecretDigitalOceanContainerRegistryOutput
}

type SecretDigitalOceanContainerRegistryArgs struct {
	// The registry password
	Password pulumi.StringInput `pulumi:"password"`
	// The registry username
	Username pulumi.StringInput `pulumi:"username"`
}

func (SecretDigitalOceanContainerRegistryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretDigitalOceanContainerRegistry)(nil)).Elem()
}

func (i SecretDigitalOceanContainerRegistryArgs) ToSecretDigitalOceanContainerRegistryOutput() SecretDigitalOceanContainerRegistryOutput {
	return i.ToSecretDigitalOceanContainerRegistryOutputWithContext(context.Background())
}

func (i SecretDigitalOceanContainerRegistryArgs) ToSecretDigitalOceanContainerRegistryOutputWithContext(ctx context.Context) SecretDigitalOceanContainerRegistryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretDigitalOceanContainerRegistryOutput)
}

func (i SecretDigitalOceanContainerRegistryArgs) ToSecretDigitalOceanContainerRegistryPtrOutput() SecretDigitalOceanContainerRegistryPtrOutput {
	return i.ToSecretDigitalOceanContainerRegistryPtrOutputWithContext(context.Background())
}

func (i SecretDigitalOceanContainerRegistryArgs) ToSecretDigitalOceanContainerRegistryPtrOutputWithContext(ctx context.Context) SecretDigitalOceanContainerRegistryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretDigitalOceanContainerRegistryOutput).ToSecretDigitalOceanContainerRegistryPtrOutputWithContext(ctx)
}

// SecretDigitalOceanContainerRegistryPtrInput is an input type that accepts SecretDigitalOceanContainerRegistryArgs, SecretDigitalOceanContainerRegistryPtr and SecretDigitalOceanContainerRegistryPtrOutput values.
// You can construct a concrete instance of `SecretDigitalOceanContainerRegistryPtrInput` via:
//
//	        SecretDigitalOceanContainerRegistryArgs{...}
//
//	or:
//
//	        nil
type SecretDigitalOceanContainerRegistryPtrInput interface {
	pulumi.Input

	ToSecretDigitalOceanContainerRegistryPtrOutput() SecretDigitalOceanContainerRegistryPtrOutput
	ToSecretDigitalOceanContainerRegistryPtrOutputWithContext(context.Context) SecretDigitalOceanContainerRegistryPtrOutput
}

type secretDigitalOceanContainerRegistryPtrType SecretDigitalOceanContainerRegistryArgs

func SecretDigitalOceanContainerRegistryPtr(v *SecretDigitalOceanContainerRegistryArgs) SecretDigitalOceanContainerRegistryPtrInput {
	return (*secretDigitalOceanContainerRegistryPtrType)(v)
}

func (*secretDigitalOceanContainerRegistryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretDigitalOceanContainerRegistry)(nil)).Elem()
}

func (i *secretDigitalOceanContainerRegistryPtrType) ToSecretDigitalOceanContainerRegistryPtrOutput() SecretDigitalOceanContainerRegistryPtrOutput {
	return i.ToSecretDigitalOceanContainerRegistryPtrOutputWithContext(context.Background())
}

func (i *secretDigitalOceanContainerRegistryPtrType) ToSecretDigitalOceanContainerRegistryPtrOutputWithContext(ctx context.Context) SecretDigitalOceanContainerRegistryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretDigitalOceanContainerRegistryPtrOutput)
}

type SecretDigitalOceanContainerRegistryOutput struct{ *pulumi.OutputState }

func (SecretDigitalOceanContainerRegistryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretDigitalOceanContainerRegistry)(nil)).Elem()
}

func (o SecretDigitalOceanContainerRegistryOutput) ToSecretDigitalOceanContainerRegistryOutput() SecretDigitalOceanContainerRegistryOutput {
	return o
}

func (o SecretDigitalOceanContainerRegistryOutput) ToSecretDigitalOceanContainerRegistryOutputWithContext(ctx context.Context) SecretDigitalOceanContainerRegistryOutput {
	return o
}

func (o SecretDigitalOceanContainerRegistryOutput) ToSecretDigitalOceanContainerRegistryPtrOutput() SecretDigitalOceanContainerRegistryPtrOutput {
	return o.ToSecretDigitalOceanContainerRegistryPtrOutputWithContext(context.Background())
}

func (o SecretDigitalOceanContainerRegistryOutput) ToSecretDigitalOceanContainerRegistryPtrOutputWithContext(ctx context.Context) SecretDigitalOceanContainerRegistryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretDigitalOceanContainerRegistry) *SecretDigitalOceanContainerRegistry {
		return &v
	}).(SecretDigitalOceanContainerRegistryPtrOutput)
}

// The registry password
func (o SecretDigitalOceanContainerRegistryOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v SecretDigitalOceanContainerRegistry) string { return v.Password }).(pulumi.StringOutput)
}

// The registry username
func (o SecretDigitalOceanContainerRegistryOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v SecretDigitalOceanContainerRegistry) string { return v.Username }).(pulumi.StringOutput)
}

type SecretDigitalOceanContainerRegistryPtrOutput struct{ *pulumi.OutputState }

func (SecretDigitalOceanContainerRegistryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretDigitalOceanContainerRegistry)(nil)).Elem()
}

func (o SecretDigitalOceanContainerRegistryPtrOutput) ToSecretDigitalOceanContainerRegistryPtrOutput() SecretDigitalOceanContainerRegistryPtrOutput {
	return o
}

func (o SecretDigitalOceanContainerRegistryPtrOutput) ToSecretDigitalOceanContainerRegistryPtrOutputWithContext(ctx context.Context) SecretDigitalOceanContainerRegistryPtrOutput {
	return o
}

func (o SecretDigitalOceanContainerRegistryPtrOutput) Elem() SecretDigitalOceanContainerRegistryOutput {
	return o.ApplyT(func(v *SecretDigitalOceanContainerRegistry) SecretDigitalOceanContainerRegistry {
		if v != nil {
			return *v
		}
		var ret SecretDigitalOceanContainerRegistry
		return ret
	}).(SecretDigitalOceanContainerRegistryOutput)
}

// The registry password
func (o SecretDigitalOceanContainerRegistryPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretDigitalOceanContainerRegistry) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The registry username
func (o SecretDigitalOceanContainerRegistryPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretDigitalOceanContainerRegistry) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type SecretDockerHubRegistry struct {
	// The registry password
	Password string `pulumi:"password"`
	// The registry username
	Username string `pulumi:"username"`
}

// SecretDockerHubRegistryInput is an input type that accepts SecretDockerHubRegistryArgs and SecretDockerHubRegistryOutput values.
// You can construct a concrete instance of `SecretDockerHubRegistryInput` via:
//
//	SecretDockerHubRegistryArgs{...}
type SecretDockerHubRegistryInput interface {
	pulumi.Input

	ToSecretDockerHubRegistryOutput() SecretDockerHubRegistryOutput
	ToSecretDockerHubRegistryOutputWithContext(context.Context) SecretDockerHubRegistryOutput
}

type SecretDockerHubRegistryArgs struct {
	// The registry password
	Password pulumi.StringInput `pulumi:"password"`
	// The registry username
	Username pulumi.StringInput `pulumi:"username"`
}

func (SecretDockerHubRegistryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretDockerHubRegistry)(nil)).Elem()
}

func (i SecretDockerHubRegistryArgs) ToSecretDockerHubRegistryOutput() SecretDockerHubRegistryOutput {
	return i.ToSecretDockerHubRegistryOutputWithContext(context.Background())
}

func (i SecretDockerHubRegistryArgs) ToSecretDockerHubRegistryOutputWithContext(ctx context.Context) SecretDockerHubRegistryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretDockerHubRegistryOutput)
}

func (i SecretDockerHubRegistryArgs) ToSecretDockerHubRegistryPtrOutput() SecretDockerHubRegistryPtrOutput {
	return i.ToSecretDockerHubRegistryPtrOutputWithContext(context.Background())
}

func (i SecretDockerHubRegistryArgs) ToSecretDockerHubRegistryPtrOutputWithContext(ctx context.Context) SecretDockerHubRegistryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretDockerHubRegistryOutput).ToSecretDockerHubRegistryPtrOutputWithContext(ctx)
}

// SecretDockerHubRegistryPtrInput is an input type that accepts SecretDockerHubRegistryArgs, SecretDockerHubRegistryPtr and SecretDockerHubRegistryPtrOutput values.
// You can construct a concrete instance of `SecretDockerHubRegistryPtrInput` via:
//
//	        SecretDockerHubRegistryArgs{...}
//
//	or:
//
//	        nil
type SecretDockerHubRegistryPtrInput interface {
	pulumi.Input

	ToSecretDockerHubRegistryPtrOutput() SecretDockerHubRegistryPtrOutput
	ToSecretDockerHubRegistryPtrOutputWithContext(context.Context) SecretDockerHubRegistryPtrOutput
}

type secretDockerHubRegistryPtrType SecretDockerHubRegistryArgs

func SecretDockerHubRegistryPtr(v *SecretDockerHubRegistryArgs) SecretDockerHubRegistryPtrInput {
	return (*secretDockerHubRegistryPtrType)(v)
}

func (*secretDockerHubRegistryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretDockerHubRegistry)(nil)).Elem()
}

func (i *secretDockerHubRegistryPtrType) ToSecretDockerHubRegistryPtrOutput() SecretDockerHubRegistryPtrOutput {
	return i.ToSecretDockerHubRegistryPtrOutputWithContext(context.Background())
}

func (i *secretDockerHubRegistryPtrType) ToSecretDockerHubRegistryPtrOutputWithContext(ctx context.Context) SecretDockerHubRegistryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretDockerHubRegistryPtrOutput)
}

type SecretDockerHubRegistryOutput struct{ *pulumi.OutputState }

func (SecretDockerHubRegistryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretDockerHubRegistry)(nil)).Elem()
}

func (o SecretDockerHubRegistryOutput) ToSecretDockerHubRegistryOutput() SecretDockerHubRegistryOutput {
	return o
}

func (o SecretDockerHubRegistryOutput) ToSecretDockerHubRegistryOutputWithContext(ctx context.Context) SecretDockerHubRegistryOutput {
	return o
}

func (o SecretDockerHubRegistryOutput) ToSecretDockerHubRegistryPtrOutput() SecretDockerHubRegistryPtrOutput {
	return o.ToSecretDockerHubRegistryPtrOutputWithContext(context.Background())
}

func (o SecretDockerHubRegistryOutput) ToSecretDockerHubRegistryPtrOutputWithContext(ctx context.Context) SecretDockerHubRegistryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretDockerHubRegistry) *SecretDockerHubRegistry {
		return &v
	}).(SecretDockerHubRegistryPtrOutput)
}

// The registry password
func (o SecretDockerHubRegistryOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v SecretDockerHubRegistry) string { return v.Password }).(pulumi.StringOutput)
}

// The registry username
func (o SecretDockerHubRegistryOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v SecretDockerHubRegistry) string { return v.Username }).(pulumi.StringOutput)
}

type SecretDockerHubRegistryPtrOutput struct{ *pulumi.OutputState }

func (SecretDockerHubRegistryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretDockerHubRegistry)(nil)).Elem()
}

func (o SecretDockerHubRegistryPtrOutput) ToSecretDockerHubRegistryPtrOutput() SecretDockerHubRegistryPtrOutput {
	return o
}

func (o SecretDockerHubRegistryPtrOutput) ToSecretDockerHubRegistryPtrOutputWithContext(ctx context.Context) SecretDockerHubRegistryPtrOutput {
	return o
}

func (o SecretDockerHubRegistryPtrOutput) Elem() SecretDockerHubRegistryOutput {
	return o.ApplyT(func(v *SecretDockerHubRegistry) SecretDockerHubRegistry {
		if v != nil {
			return *v
		}
		var ret SecretDockerHubRegistry
		return ret
	}).(SecretDockerHubRegistryOutput)
}

// The registry password
func (o SecretDockerHubRegistryPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretDockerHubRegistry) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The registry username
func (o SecretDockerHubRegistryPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretDockerHubRegistry) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type SecretGithubRegistry struct {
	// The registry password
	Password string `pulumi:"password"`
	// The registry username
	Username string `pulumi:"username"`
}

// SecretGithubRegistryInput is an input type that accepts SecretGithubRegistryArgs and SecretGithubRegistryOutput values.
// You can construct a concrete instance of `SecretGithubRegistryInput` via:
//
//	SecretGithubRegistryArgs{...}
type SecretGithubRegistryInput interface {
	pulumi.Input

	ToSecretGithubRegistryOutput() SecretGithubRegistryOutput
	ToSecretGithubRegistryOutputWithContext(context.Context) SecretGithubRegistryOutput
}

type SecretGithubRegistryArgs struct {
	// The registry password
	Password pulumi.StringInput `pulumi:"password"`
	// The registry username
	Username pulumi.StringInput `pulumi:"username"`
}

func (SecretGithubRegistryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretGithubRegistry)(nil)).Elem()
}

func (i SecretGithubRegistryArgs) ToSecretGithubRegistryOutput() SecretGithubRegistryOutput {
	return i.ToSecretGithubRegistryOutputWithContext(context.Background())
}

func (i SecretGithubRegistryArgs) ToSecretGithubRegistryOutputWithContext(ctx context.Context) SecretGithubRegistryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretGithubRegistryOutput)
}

func (i SecretGithubRegistryArgs) ToSecretGithubRegistryPtrOutput() SecretGithubRegistryPtrOutput {
	return i.ToSecretGithubRegistryPtrOutputWithContext(context.Background())
}

func (i SecretGithubRegistryArgs) ToSecretGithubRegistryPtrOutputWithContext(ctx context.Context) SecretGithubRegistryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretGithubRegistryOutput).ToSecretGithubRegistryPtrOutputWithContext(ctx)
}

// SecretGithubRegistryPtrInput is an input type that accepts SecretGithubRegistryArgs, SecretGithubRegistryPtr and SecretGithubRegistryPtrOutput values.
// You can construct a concrete instance of `SecretGithubRegistryPtrInput` via:
//
//	        SecretGithubRegistryArgs{...}
//
//	or:
//
//	        nil
type SecretGithubRegistryPtrInput interface {
	pulumi.Input

	ToSecretGithubRegistryPtrOutput() SecretGithubRegistryPtrOutput
	ToSecretGithubRegistryPtrOutputWithContext(context.Context) SecretGithubRegistryPtrOutput
}

type secretGithubRegistryPtrType SecretGithubRegistryArgs

func SecretGithubRegistryPtr(v *SecretGithubRegistryArgs) SecretGithubRegistryPtrInput {
	return (*secretGithubRegistryPtrType)(v)
}

func (*secretGithubRegistryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretGithubRegistry)(nil)).Elem()
}

func (i *secretGithubRegistryPtrType) ToSecretGithubRegistryPtrOutput() SecretGithubRegistryPtrOutput {
	return i.ToSecretGithubRegistryPtrOutputWithContext(context.Background())
}

func (i *secretGithubRegistryPtrType) ToSecretGithubRegistryPtrOutputWithContext(ctx context.Context) SecretGithubRegistryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretGithubRegistryPtrOutput)
}

type SecretGithubRegistryOutput struct{ *pulumi.OutputState }

func (SecretGithubRegistryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretGithubRegistry)(nil)).Elem()
}

func (o SecretGithubRegistryOutput) ToSecretGithubRegistryOutput() SecretGithubRegistryOutput {
	return o
}

func (o SecretGithubRegistryOutput) ToSecretGithubRegistryOutputWithContext(ctx context.Context) SecretGithubRegistryOutput {
	return o
}

func (o SecretGithubRegistryOutput) ToSecretGithubRegistryPtrOutput() SecretGithubRegistryPtrOutput {
	return o.ToSecretGithubRegistryPtrOutputWithContext(context.Background())
}

func (o SecretGithubRegistryOutput) ToSecretGithubRegistryPtrOutputWithContext(ctx context.Context) SecretGithubRegistryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretGithubRegistry) *SecretGithubRegistry {
		return &v
	}).(SecretGithubRegistryPtrOutput)
}

// The registry password
func (o SecretGithubRegistryOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v SecretGithubRegistry) string { return v.Password }).(pulumi.StringOutput)
}

// The registry username
func (o SecretGithubRegistryOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v SecretGithubRegistry) string { return v.Username }).(pulumi.StringOutput)
}

type SecretGithubRegistryPtrOutput struct{ *pulumi.OutputState }

func (SecretGithubRegistryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretGithubRegistry)(nil)).Elem()
}

func (o SecretGithubRegistryPtrOutput) ToSecretGithubRegistryPtrOutput() SecretGithubRegistryPtrOutput {
	return o
}

func (o SecretGithubRegistryPtrOutput) ToSecretGithubRegistryPtrOutputWithContext(ctx context.Context) SecretGithubRegistryPtrOutput {
	return o
}

func (o SecretGithubRegistryPtrOutput) Elem() SecretGithubRegistryOutput {
	return o.ApplyT(func(v *SecretGithubRegistry) SecretGithubRegistry {
		if v != nil {
			return *v
		}
		var ret SecretGithubRegistry
		return ret
	}).(SecretGithubRegistryOutput)
}

// The registry password
func (o SecretGithubRegistryPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretGithubRegistry) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The registry username
func (o SecretGithubRegistryPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretGithubRegistry) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type SecretGitlabRegistry struct {
	// The registry password
	Password string `pulumi:"password"`
	// The registry username
	Username string `pulumi:"username"`
}

// SecretGitlabRegistryInput is an input type that accepts SecretGitlabRegistryArgs and SecretGitlabRegistryOutput values.
// You can construct a concrete instance of `SecretGitlabRegistryInput` via:
//
//	SecretGitlabRegistryArgs{...}
type SecretGitlabRegistryInput interface {
	pulumi.Input

	ToSecretGitlabRegistryOutput() SecretGitlabRegistryOutput
	ToSecretGitlabRegistryOutputWithContext(context.Context) SecretGitlabRegistryOutput
}

type SecretGitlabRegistryArgs struct {
	// The registry password
	Password pulumi.StringInput `pulumi:"password"`
	// The registry username
	Username pulumi.StringInput `pulumi:"username"`
}

func (SecretGitlabRegistryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretGitlabRegistry)(nil)).Elem()
}

func (i SecretGitlabRegistryArgs) ToSecretGitlabRegistryOutput() SecretGitlabRegistryOutput {
	return i.ToSecretGitlabRegistryOutputWithContext(context.Background())
}

func (i SecretGitlabRegistryArgs) ToSecretGitlabRegistryOutputWithContext(ctx context.Context) SecretGitlabRegistryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretGitlabRegistryOutput)
}

func (i SecretGitlabRegistryArgs) ToSecretGitlabRegistryPtrOutput() SecretGitlabRegistryPtrOutput {
	return i.ToSecretGitlabRegistryPtrOutputWithContext(context.Background())
}

func (i SecretGitlabRegistryArgs) ToSecretGitlabRegistryPtrOutputWithContext(ctx context.Context) SecretGitlabRegistryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretGitlabRegistryOutput).ToSecretGitlabRegistryPtrOutputWithContext(ctx)
}

// SecretGitlabRegistryPtrInput is an input type that accepts SecretGitlabRegistryArgs, SecretGitlabRegistryPtr and SecretGitlabRegistryPtrOutput values.
// You can construct a concrete instance of `SecretGitlabRegistryPtrInput` via:
//
//	        SecretGitlabRegistryArgs{...}
//
//	or:
//
//	        nil
type SecretGitlabRegistryPtrInput interface {
	pulumi.Input

	ToSecretGitlabRegistryPtrOutput() SecretGitlabRegistryPtrOutput
	ToSecretGitlabRegistryPtrOutputWithContext(context.Context) SecretGitlabRegistryPtrOutput
}

type secretGitlabRegistryPtrType SecretGitlabRegistryArgs

func SecretGitlabRegistryPtr(v *SecretGitlabRegistryArgs) SecretGitlabRegistryPtrInput {
	return (*secretGitlabRegistryPtrType)(v)
}

func (*secretGitlabRegistryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretGitlabRegistry)(nil)).Elem()
}

func (i *secretGitlabRegistryPtrType) ToSecretGitlabRegistryPtrOutput() SecretGitlabRegistryPtrOutput {
	return i.ToSecretGitlabRegistryPtrOutputWithContext(context.Background())
}

func (i *secretGitlabRegistryPtrType) ToSecretGitlabRegistryPtrOutputWithContext(ctx context.Context) SecretGitlabRegistryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretGitlabRegistryPtrOutput)
}

type SecretGitlabRegistryOutput struct{ *pulumi.OutputState }

func (SecretGitlabRegistryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretGitlabRegistry)(nil)).Elem()
}

func (o SecretGitlabRegistryOutput) ToSecretGitlabRegistryOutput() SecretGitlabRegistryOutput {
	return o
}

func (o SecretGitlabRegistryOutput) ToSecretGitlabRegistryOutputWithContext(ctx context.Context) SecretGitlabRegistryOutput {
	return o
}

func (o SecretGitlabRegistryOutput) ToSecretGitlabRegistryPtrOutput() SecretGitlabRegistryPtrOutput {
	return o.ToSecretGitlabRegistryPtrOutputWithContext(context.Background())
}

func (o SecretGitlabRegistryOutput) ToSecretGitlabRegistryPtrOutputWithContext(ctx context.Context) SecretGitlabRegistryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretGitlabRegistry) *SecretGitlabRegistry {
		return &v
	}).(SecretGitlabRegistryPtrOutput)
}

// The registry password
func (o SecretGitlabRegistryOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v SecretGitlabRegistry) string { return v.Password }).(pulumi.StringOutput)
}

// The registry username
func (o SecretGitlabRegistryOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v SecretGitlabRegistry) string { return v.Username }).(pulumi.StringOutput)
}

type SecretGitlabRegistryPtrOutput struct{ *pulumi.OutputState }

func (SecretGitlabRegistryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretGitlabRegistry)(nil)).Elem()
}

func (o SecretGitlabRegistryPtrOutput) ToSecretGitlabRegistryPtrOutput() SecretGitlabRegistryPtrOutput {
	return o
}

func (o SecretGitlabRegistryPtrOutput) ToSecretGitlabRegistryPtrOutputWithContext(ctx context.Context) SecretGitlabRegistryPtrOutput {
	return o
}

func (o SecretGitlabRegistryPtrOutput) Elem() SecretGitlabRegistryOutput {
	return o.ApplyT(func(v *SecretGitlabRegistry) SecretGitlabRegistry {
		if v != nil {
			return *v
		}
		var ret SecretGitlabRegistry
		return ret
	}).(SecretGitlabRegistryOutput)
}

// The registry password
func (o SecretGitlabRegistryPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretGitlabRegistry) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The registry username
func (o SecretGitlabRegistryPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretGitlabRegistry) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type SecretPrivateRegistry struct {
	// The registry password
	Password string `pulumi:"password"`
	// The registry url
	Url string `pulumi:"url"`
	// The registry username
	Username string `pulumi:"username"`
}

// SecretPrivateRegistryInput is an input type that accepts SecretPrivateRegistryArgs and SecretPrivateRegistryOutput values.
// You can construct a concrete instance of `SecretPrivateRegistryInput` via:
//
//	SecretPrivateRegistryArgs{...}
type SecretPrivateRegistryInput interface {
	pulumi.Input

	ToSecretPrivateRegistryOutput() SecretPrivateRegistryOutput
	ToSecretPrivateRegistryOutputWithContext(context.Context) SecretPrivateRegistryOutput
}

type SecretPrivateRegistryArgs struct {
	// The registry password
	Password pulumi.StringInput `pulumi:"password"`
	// The registry url
	Url pulumi.StringInput `pulumi:"url"`
	// The registry username
	Username pulumi.StringInput `pulumi:"username"`
}

func (SecretPrivateRegistryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretPrivateRegistry)(nil)).Elem()
}

func (i SecretPrivateRegistryArgs) ToSecretPrivateRegistryOutput() SecretPrivateRegistryOutput {
	return i.ToSecretPrivateRegistryOutputWithContext(context.Background())
}

func (i SecretPrivateRegistryArgs) ToSecretPrivateRegistryOutputWithContext(ctx context.Context) SecretPrivateRegistryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretPrivateRegistryOutput)
}

func (i SecretPrivateRegistryArgs) ToSecretPrivateRegistryPtrOutput() SecretPrivateRegistryPtrOutput {
	return i.ToSecretPrivateRegistryPtrOutputWithContext(context.Background())
}

func (i SecretPrivateRegistryArgs) ToSecretPrivateRegistryPtrOutputWithContext(ctx context.Context) SecretPrivateRegistryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretPrivateRegistryOutput).ToSecretPrivateRegistryPtrOutputWithContext(ctx)
}

// SecretPrivateRegistryPtrInput is an input type that accepts SecretPrivateRegistryArgs, SecretPrivateRegistryPtr and SecretPrivateRegistryPtrOutput values.
// You can construct a concrete instance of `SecretPrivateRegistryPtrInput` via:
//
//	        SecretPrivateRegistryArgs{...}
//
//	or:
//
//	        nil
type SecretPrivateRegistryPtrInput interface {
	pulumi.Input

	ToSecretPrivateRegistryPtrOutput() SecretPrivateRegistryPtrOutput
	ToSecretPrivateRegistryPtrOutputWithContext(context.Context) SecretPrivateRegistryPtrOutput
}

type secretPrivateRegistryPtrType SecretPrivateRegistryArgs

func SecretPrivateRegistryPtr(v *SecretPrivateRegistryArgs) SecretPrivateRegistryPtrInput {
	return (*secretPrivateRegistryPtrType)(v)
}

func (*secretPrivateRegistryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretPrivateRegistry)(nil)).Elem()
}

func (i *secretPrivateRegistryPtrType) ToSecretPrivateRegistryPtrOutput() SecretPrivateRegistryPtrOutput {
	return i.ToSecretPrivateRegistryPtrOutputWithContext(context.Background())
}

func (i *secretPrivateRegistryPtrType) ToSecretPrivateRegistryPtrOutputWithContext(ctx context.Context) SecretPrivateRegistryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SecretPrivateRegistryPtrOutput)
}

type SecretPrivateRegistryOutput struct{ *pulumi.OutputState }

func (SecretPrivateRegistryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SecretPrivateRegistry)(nil)).Elem()
}

func (o SecretPrivateRegistryOutput) ToSecretPrivateRegistryOutput() SecretPrivateRegistryOutput {
	return o
}

func (o SecretPrivateRegistryOutput) ToSecretPrivateRegistryOutputWithContext(ctx context.Context) SecretPrivateRegistryOutput {
	return o
}

func (o SecretPrivateRegistryOutput) ToSecretPrivateRegistryPtrOutput() SecretPrivateRegistryPtrOutput {
	return o.ToSecretPrivateRegistryPtrOutputWithContext(context.Background())
}

func (o SecretPrivateRegistryOutput) ToSecretPrivateRegistryPtrOutputWithContext(ctx context.Context) SecretPrivateRegistryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SecretPrivateRegistry) *SecretPrivateRegistry {
		return &v
	}).(SecretPrivateRegistryPtrOutput)
}

// The registry password
func (o SecretPrivateRegistryOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v SecretPrivateRegistry) string { return v.Password }).(pulumi.StringOutput)
}

// The registry url
func (o SecretPrivateRegistryOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v SecretPrivateRegistry) string { return v.Url }).(pulumi.StringOutput)
}

// The registry username
func (o SecretPrivateRegistryOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v SecretPrivateRegistry) string { return v.Username }).(pulumi.StringOutput)
}

type SecretPrivateRegistryPtrOutput struct{ *pulumi.OutputState }

func (SecretPrivateRegistryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SecretPrivateRegistry)(nil)).Elem()
}

func (o SecretPrivateRegistryPtrOutput) ToSecretPrivateRegistryPtrOutput() SecretPrivateRegistryPtrOutput {
	return o
}

func (o SecretPrivateRegistryPtrOutput) ToSecretPrivateRegistryPtrOutputWithContext(ctx context.Context) SecretPrivateRegistryPtrOutput {
	return o
}

func (o SecretPrivateRegistryPtrOutput) Elem() SecretPrivateRegistryOutput {
	return o.ApplyT(func(v *SecretPrivateRegistry) SecretPrivateRegistry {
		if v != nil {
			return *v
		}
		var ret SecretPrivateRegistry
		return ret
	}).(SecretPrivateRegistryOutput)
}

// The registry password
func (o SecretPrivateRegistryPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretPrivateRegistry) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The registry url
func (o SecretPrivateRegistryPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretPrivateRegistry) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

// The registry username
func (o SecretPrivateRegistryPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SecretPrivateRegistry) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type ServiceDefinition struct {
	Docker        *ServiceDefinitionDocker        `pulumi:"docker"`
	Envs          []ServiceDefinitionEnv          `pulumi:"envs"`
	Git           *ServiceDefinitionGit           `pulumi:"git"`
	HealthChecks  []ServiceDefinitionHealthCheck  `pulumi:"healthChecks"`
	InstanceTypes []ServiceDefinitionInstanceType `pulumi:"instanceTypes"`
	// The service name
	Name  string                  `pulumi:"name"`
	Ports []ServiceDefinitionPort `pulumi:"ports"`
	// The service deployment regions to deploy to
	Regions  []string                   `pulumi:"regions"`
	Routes   []ServiceDefinitionRoute   `pulumi:"routes"`
	Scalings []ServiceDefinitionScaling `pulumi:"scalings"`
	// If set to true, the service will be deployed without using the cache
	SkipCache *bool `pulumi:"skipCache"`
	// The service type, either WEB or WORKER (default WEB)
	Type *string `pulumi:"type"`
}

// ServiceDefinitionInput is an input type that accepts ServiceDefinitionArgs and ServiceDefinitionOutput values.
// You can construct a concrete instance of `ServiceDefinitionInput` via:
//
//	ServiceDefinitionArgs{...}
type ServiceDefinitionInput interface {
	pulumi.Input

	ToServiceDefinitionOutput() ServiceDefinitionOutput
	ToServiceDefinitionOutputWithContext(context.Context) ServiceDefinitionOutput
}

type ServiceDefinitionArgs struct {
	Docker        ServiceDefinitionDockerPtrInput         `pulumi:"docker"`
	Envs          ServiceDefinitionEnvArrayInput          `pulumi:"envs"`
	Git           ServiceDefinitionGitPtrInput            `pulumi:"git"`
	HealthChecks  ServiceDefinitionHealthCheckArrayInput  `pulumi:"healthChecks"`
	InstanceTypes ServiceDefinitionInstanceTypeArrayInput `pulumi:"instanceTypes"`
	// The service name
	Name  pulumi.StringInput              `pulumi:"name"`
	Ports ServiceDefinitionPortArrayInput `pulumi:"ports"`
	// The service deployment regions to deploy to
	Regions  pulumi.StringArrayInput            `pulumi:"regions"`
	Routes   ServiceDefinitionRouteArrayInput   `pulumi:"routes"`
	Scalings ServiceDefinitionScalingArrayInput `pulumi:"scalings"`
	// If set to true, the service will be deployed without using the cache
	SkipCache pulumi.BoolPtrInput `pulumi:"skipCache"`
	// The service type, either WEB or WORKER (default WEB)
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ServiceDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDefinition)(nil)).Elem()
}

func (i ServiceDefinitionArgs) ToServiceDefinitionOutput() ServiceDefinitionOutput {
	return i.ToServiceDefinitionOutputWithContext(context.Background())
}

func (i ServiceDefinitionArgs) ToServiceDefinitionOutputWithContext(ctx context.Context) ServiceDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDefinitionOutput)
}

func (i ServiceDefinitionArgs) ToServiceDefinitionPtrOutput() ServiceDefinitionPtrOutput {
	return i.ToServiceDefinitionPtrOutputWithContext(context.Background())
}

func (i ServiceDefinitionArgs) ToServiceDefinitionPtrOutputWithContext(ctx context.Context) ServiceDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDefinitionOutput).ToServiceDefinitionPtrOutputWithContext(ctx)
}

// ServiceDefinitionPtrInput is an input type that accepts ServiceDefinitionArgs, ServiceDefinitionPtr and ServiceDefinitionPtrOutput values.
// You can construct a concrete instance of `ServiceDefinitionPtrInput` via:
//
//	        ServiceDefinitionArgs{...}
//
//	or:
//
//	        nil
type ServiceDefinitionPtrInput interface {
	pulumi.Input

	ToServiceDefinitionPtrOutput() ServiceDefinitionPtrOutput
	ToServiceDefinitionPtrOutputWithContext(context.Context) ServiceDefinitionPtrOutput
}

type serviceDefinitionPtrType ServiceDefinitionArgs

func ServiceDefinitionPtr(v *ServiceDefinitionArgs) ServiceDefinitionPtrInput {
	return (*serviceDefinitionPtrType)(v)
}

func (*serviceDefinitionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDefinition)(nil)).Elem()
}

func (i *serviceDefinitionPtrType) ToServiceDefinitionPtrOutput() ServiceDefinitionPtrOutput {
	return i.ToServiceDefinitionPtrOutputWithContext(context.Background())
}

func (i *serviceDefinitionPtrType) ToServiceDefinitionPtrOutputWithContext(ctx context.Context) ServiceDefinitionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDefinitionPtrOutput)
}

type ServiceDefinitionOutput struct{ *pulumi.OutputState }

func (ServiceDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDefinition)(nil)).Elem()
}

func (o ServiceDefinitionOutput) ToServiceDefinitionOutput() ServiceDefinitionOutput {
	return o
}

func (o ServiceDefinitionOutput) ToServiceDefinitionOutputWithContext(ctx context.Context) ServiceDefinitionOutput {
	return o
}

func (o ServiceDefinitionOutput) ToServiceDefinitionPtrOutput() ServiceDefinitionPtrOutput {
	return o.ToServiceDefinitionPtrOutputWithContext(context.Background())
}

func (o ServiceDefinitionOutput) ToServiceDefinitionPtrOutputWithContext(ctx context.Context) ServiceDefinitionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceDefinition) *ServiceDefinition {
		return &v
	}).(ServiceDefinitionPtrOutput)
}

func (o ServiceDefinitionOutput) Docker() ServiceDefinitionDockerPtrOutput {
	return o.ApplyT(func(v ServiceDefinition) *ServiceDefinitionDocker { return v.Docker }).(ServiceDefinitionDockerPtrOutput)
}

func (o ServiceDefinitionOutput) Envs() ServiceDefinitionEnvArrayOutput {
	return o.ApplyT(func(v ServiceDefinition) []ServiceDefinitionEnv { return v.Envs }).(ServiceDefinitionEnvArrayOutput)
}

func (o ServiceDefinitionOutput) Git() ServiceDefinitionGitPtrOutput {
	return o.ApplyT(func(v ServiceDefinition) *ServiceDefinitionGit { return v.Git }).(ServiceDefinitionGitPtrOutput)
}

func (o ServiceDefinitionOutput) HealthChecks() ServiceDefinitionHealthCheckArrayOutput {
	return o.ApplyT(func(v ServiceDefinition) []ServiceDefinitionHealthCheck { return v.HealthChecks }).(ServiceDefinitionHealthCheckArrayOutput)
}

func (o ServiceDefinitionOutput) InstanceTypes() ServiceDefinitionInstanceTypeArrayOutput {
	return o.ApplyT(func(v ServiceDefinition) []ServiceDefinitionInstanceType { return v.InstanceTypes }).(ServiceDefinitionInstanceTypeArrayOutput)
}

// The service name
func (o ServiceDefinitionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceDefinition) string { return v.Name }).(pulumi.StringOutput)
}

func (o ServiceDefinitionOutput) Ports() ServiceDefinitionPortArrayOutput {
	return o.ApplyT(func(v ServiceDefinition) []ServiceDefinitionPort { return v.Ports }).(ServiceDefinitionPortArrayOutput)
}

// The service deployment regions to deploy to
func (o ServiceDefinitionOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceDefinition) []string { return v.Regions }).(pulumi.StringArrayOutput)
}

func (o ServiceDefinitionOutput) Routes() ServiceDefinitionRouteArrayOutput {
	return o.ApplyT(func(v ServiceDefinition) []ServiceDefinitionRoute { return v.Routes }).(ServiceDefinitionRouteArrayOutput)
}

func (o ServiceDefinitionOutput) Scalings() ServiceDefinitionScalingArrayOutput {
	return o.ApplyT(func(v ServiceDefinition) []ServiceDefinitionScaling { return v.Scalings }).(ServiceDefinitionScalingArrayOutput)
}

// If set to true, the service will be deployed without using the cache
func (o ServiceDefinitionOutput) SkipCache() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceDefinition) *bool { return v.SkipCache }).(pulumi.BoolPtrOutput)
}

// The service type, either WEB or WORKER (default WEB)
func (o ServiceDefinitionOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceDefinition) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ServiceDefinitionPtrOutput struct{ *pulumi.OutputState }

func (ServiceDefinitionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDefinition)(nil)).Elem()
}

func (o ServiceDefinitionPtrOutput) ToServiceDefinitionPtrOutput() ServiceDefinitionPtrOutput {
	return o
}

func (o ServiceDefinitionPtrOutput) ToServiceDefinitionPtrOutputWithContext(ctx context.Context) ServiceDefinitionPtrOutput {
	return o
}

func (o ServiceDefinitionPtrOutput) Elem() ServiceDefinitionOutput {
	return o.ApplyT(func(v *ServiceDefinition) ServiceDefinition {
		if v != nil {
			return *v
		}
		var ret ServiceDefinition
		return ret
	}).(ServiceDefinitionOutput)
}

func (o ServiceDefinitionPtrOutput) Docker() ServiceDefinitionDockerPtrOutput {
	return o.ApplyT(func(v *ServiceDefinition) *ServiceDefinitionDocker {
		if v == nil {
			return nil
		}
		return v.Docker
	}).(ServiceDefinitionDockerPtrOutput)
}

func (o ServiceDefinitionPtrOutput) Envs() ServiceDefinitionEnvArrayOutput {
	return o.ApplyT(func(v *ServiceDefinition) []ServiceDefinitionEnv {
		if v == nil {
			return nil
		}
		return v.Envs
	}).(ServiceDefinitionEnvArrayOutput)
}

func (o ServiceDefinitionPtrOutput) Git() ServiceDefinitionGitPtrOutput {
	return o.ApplyT(func(v *ServiceDefinition) *ServiceDefinitionGit {
		if v == nil {
			return nil
		}
		return v.Git
	}).(ServiceDefinitionGitPtrOutput)
}

func (o ServiceDefinitionPtrOutput) HealthChecks() ServiceDefinitionHealthCheckArrayOutput {
	return o.ApplyT(func(v *ServiceDefinition) []ServiceDefinitionHealthCheck {
		if v == nil {
			return nil
		}
		return v.HealthChecks
	}).(ServiceDefinitionHealthCheckArrayOutput)
}

func (o ServiceDefinitionPtrOutput) InstanceTypes() ServiceDefinitionInstanceTypeArrayOutput {
	return o.ApplyT(func(v *ServiceDefinition) []ServiceDefinitionInstanceType {
		if v == nil {
			return nil
		}
		return v.InstanceTypes
	}).(ServiceDefinitionInstanceTypeArrayOutput)
}

// The service name
func (o ServiceDefinitionPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceDefinition) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

func (o ServiceDefinitionPtrOutput) Ports() ServiceDefinitionPortArrayOutput {
	return o.ApplyT(func(v *ServiceDefinition) []ServiceDefinitionPort {
		if v == nil {
			return nil
		}
		return v.Ports
	}).(ServiceDefinitionPortArrayOutput)
}

// The service deployment regions to deploy to
func (o ServiceDefinitionPtrOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceDefinition) []string {
		if v == nil {
			return nil
		}
		return v.Regions
	}).(pulumi.StringArrayOutput)
}

func (o ServiceDefinitionPtrOutput) Routes() ServiceDefinitionRouteArrayOutput {
	return o.ApplyT(func(v *ServiceDefinition) []ServiceDefinitionRoute {
		if v == nil {
			return nil
		}
		return v.Routes
	}).(ServiceDefinitionRouteArrayOutput)
}

func (o ServiceDefinitionPtrOutput) Scalings() ServiceDefinitionScalingArrayOutput {
	return o.ApplyT(func(v *ServiceDefinition) []ServiceDefinitionScaling {
		if v == nil {
			return nil
		}
		return v.Scalings
	}).(ServiceDefinitionScalingArrayOutput)
}

// If set to true, the service will be deployed without using the cache
func (o ServiceDefinitionPtrOutput) SkipCache() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceDefinition) *bool {
		if v == nil {
			return nil
		}
		return v.SkipCache
	}).(pulumi.BoolPtrOutput)
}

// The service type, either WEB or WORKER (default WEB)
func (o ServiceDefinitionPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceDefinition) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type ServiceDefinitionDocker struct {
	// The Docker args to use
	Args []string `pulumi:"args"`
	// The Docker command to use
	Command *string `pulumi:"command"`
	// The Docker entrypoint to use
	Entrypoints []string `pulumi:"entrypoints"`
	// The Docker image to use to support your service
	Image string `pulumi:"image"`
	// The Koyeb secret containing the container registry credentials
	ImageRegistrySecret *string `pulumi:"imageRegistrySecret"`
	// When enabled, the service container will run in privileged mode. This advanced feature is useful to get advanced system privileges.
	Privileged *bool `pulumi:"privileged"`
}

// ServiceDefinitionDockerInput is an input type that accepts ServiceDefinitionDockerArgs and ServiceDefinitionDockerOutput values.
// You can construct a concrete instance of `ServiceDefinitionDockerInput` via:
//
//	ServiceDefinitionDockerArgs{...}
type ServiceDefinitionDockerInput interface {
	pulumi.Input

	ToServiceDefinitionDockerOutput() ServiceDefinitionDockerOutput
	ToServiceDefinitionDockerOutputWithContext(context.Context) ServiceDefinitionDockerOutput
}

type ServiceDefinitionDockerArgs struct {
	// The Docker args to use
	Args pulumi.StringArrayInput `pulumi:"args"`
	// The Docker command to use
	Command pulumi.StringPtrInput `pulumi:"command"`
	// The Docker entrypoint to use
	Entrypoints pulumi.StringArrayInput `pulumi:"entrypoints"`
	// The Docker image to use to support your service
	Image pulumi.StringInput `pulumi:"image"`
	// The Koyeb secret containing the container registry credentials
	ImageRegistrySecret pulumi.StringPtrInput `pulumi:"imageRegistrySecret"`
	// When enabled, the service container will run in privileged mode. This advanced feature is useful to get advanced system privileges.
	Privileged pulumi.BoolPtrInput `pulumi:"privileged"`
}

func (ServiceDefinitionDockerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDefinitionDocker)(nil)).Elem()
}

func (i ServiceDefinitionDockerArgs) ToServiceDefinitionDockerOutput() ServiceDefinitionDockerOutput {
	return i.ToServiceDefinitionDockerOutputWithContext(context.Background())
}

func (i ServiceDefinitionDockerArgs) ToServiceDefinitionDockerOutputWithContext(ctx context.Context) ServiceDefinitionDockerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDefinitionDockerOutput)
}

func (i ServiceDefinitionDockerArgs) ToServiceDefinitionDockerPtrOutput() ServiceDefinitionDockerPtrOutput {
	return i.ToServiceDefinitionDockerPtrOutputWithContext(context.Background())
}

func (i ServiceDefinitionDockerArgs) ToServiceDefinitionDockerPtrOutputWithContext(ctx context.Context) ServiceDefinitionDockerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDefinitionDockerOutput).ToServiceDefinitionDockerPtrOutputWithContext(ctx)
}

// ServiceDefinitionDockerPtrInput is an input type that accepts ServiceDefinitionDockerArgs, ServiceDefinitionDockerPtr and ServiceDefinitionDockerPtrOutput values.
// You can construct a concrete instance of `ServiceDefinitionDockerPtrInput` via:
//
//	        ServiceDefinitionDockerArgs{...}
//
//	or:
//
//	        nil
type ServiceDefinitionDockerPtrInput interface {
	pulumi.Input

	ToServiceDefinitionDockerPtrOutput() ServiceDefinitionDockerPtrOutput
	ToServiceDefinitionDockerPtrOutputWithContext(context.Context) ServiceDefinitionDockerPtrOutput
}

type serviceDefinitionDockerPtrType ServiceDefinitionDockerArgs

func ServiceDefinitionDockerPtr(v *ServiceDefinitionDockerArgs) ServiceDefinitionDockerPtrInput {
	return (*serviceDefinitionDockerPtrType)(v)
}

func (*serviceDefinitionDockerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDefinitionDocker)(nil)).Elem()
}

func (i *serviceDefinitionDockerPtrType) ToServiceDefinitionDockerPtrOutput() ServiceDefinitionDockerPtrOutput {
	return i.ToServiceDefinitionDockerPtrOutputWithContext(context.Background())
}

func (i *serviceDefinitionDockerPtrType) ToServiceDefinitionDockerPtrOutputWithContext(ctx context.Context) ServiceDefinitionDockerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDefinitionDockerPtrOutput)
}

type ServiceDefinitionDockerOutput struct{ *pulumi.OutputState }

func (ServiceDefinitionDockerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDefinitionDocker)(nil)).Elem()
}

func (o ServiceDefinitionDockerOutput) ToServiceDefinitionDockerOutput() ServiceDefinitionDockerOutput {
	return o
}

func (o ServiceDefinitionDockerOutput) ToServiceDefinitionDockerOutputWithContext(ctx context.Context) ServiceDefinitionDockerOutput {
	return o
}

func (o ServiceDefinitionDockerOutput) ToServiceDefinitionDockerPtrOutput() ServiceDefinitionDockerPtrOutput {
	return o.ToServiceDefinitionDockerPtrOutputWithContext(context.Background())
}

func (o ServiceDefinitionDockerOutput) ToServiceDefinitionDockerPtrOutputWithContext(ctx context.Context) ServiceDefinitionDockerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceDefinitionDocker) *ServiceDefinitionDocker {
		return &v
	}).(ServiceDefinitionDockerPtrOutput)
}

// The Docker args to use
func (o ServiceDefinitionDockerOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceDefinitionDocker) []string { return v.Args }).(pulumi.StringArrayOutput)
}

// The Docker command to use
func (o ServiceDefinitionDockerOutput) Command() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceDefinitionDocker) *string { return v.Command }).(pulumi.StringPtrOutput)
}

// The Docker entrypoint to use
func (o ServiceDefinitionDockerOutput) Entrypoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceDefinitionDocker) []string { return v.Entrypoints }).(pulumi.StringArrayOutput)
}

// The Docker image to use to support your service
func (o ServiceDefinitionDockerOutput) Image() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceDefinitionDocker) string { return v.Image }).(pulumi.StringOutput)
}

// The Koyeb secret containing the container registry credentials
func (o ServiceDefinitionDockerOutput) ImageRegistrySecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceDefinitionDocker) *string { return v.ImageRegistrySecret }).(pulumi.StringPtrOutput)
}

// When enabled, the service container will run in privileged mode. This advanced feature is useful to get advanced system privileges.
func (o ServiceDefinitionDockerOutput) Privileged() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceDefinitionDocker) *bool { return v.Privileged }).(pulumi.BoolPtrOutput)
}

type ServiceDefinitionDockerPtrOutput struct{ *pulumi.OutputState }

func (ServiceDefinitionDockerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDefinitionDocker)(nil)).Elem()
}

func (o ServiceDefinitionDockerPtrOutput) ToServiceDefinitionDockerPtrOutput() ServiceDefinitionDockerPtrOutput {
	return o
}

func (o ServiceDefinitionDockerPtrOutput) ToServiceDefinitionDockerPtrOutputWithContext(ctx context.Context) ServiceDefinitionDockerPtrOutput {
	return o
}

func (o ServiceDefinitionDockerPtrOutput) Elem() ServiceDefinitionDockerOutput {
	return o.ApplyT(func(v *ServiceDefinitionDocker) ServiceDefinitionDocker {
		if v != nil {
			return *v
		}
		var ret ServiceDefinitionDocker
		return ret
	}).(ServiceDefinitionDockerOutput)
}

// The Docker args to use
func (o ServiceDefinitionDockerPtrOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceDefinitionDocker) []string {
		if v == nil {
			return nil
		}
		return v.Args
	}).(pulumi.StringArrayOutput)
}

// The Docker command to use
func (o ServiceDefinitionDockerPtrOutput) Command() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceDefinitionDocker) *string {
		if v == nil {
			return nil
		}
		return v.Command
	}).(pulumi.StringPtrOutput)
}

// The Docker entrypoint to use
func (o ServiceDefinitionDockerPtrOutput) Entrypoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceDefinitionDocker) []string {
		if v == nil {
			return nil
		}
		return v.Entrypoints
	}).(pulumi.StringArrayOutput)
}

// The Docker image to use to support your service
func (o ServiceDefinitionDockerPtrOutput) Image() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceDefinitionDocker) *string {
		if v == nil {
			return nil
		}
		return &v.Image
	}).(pulumi.StringPtrOutput)
}

// The Koyeb secret containing the container registry credentials
func (o ServiceDefinitionDockerPtrOutput) ImageRegistrySecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceDefinitionDocker) *string {
		if v == nil {
			return nil
		}
		return v.ImageRegistrySecret
	}).(pulumi.StringPtrOutput)
}

// When enabled, the service container will run in privileged mode. This advanced feature is useful to get advanced system privileges.
func (o ServiceDefinitionDockerPtrOutput) Privileged() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceDefinitionDocker) *bool {
		if v == nil {
			return nil
		}
		return v.Privileged
	}).(pulumi.BoolPtrOutput)
}

type ServiceDefinitionEnv struct {
	// The name of the environment variable
	Key string `pulumi:"key"`
	// The regions the environment variable needs to be exposed
	Scopes []string `pulumi:"scopes"`
	// The secret name to use as the value of the environment variable
	Secret *string `pulumi:"secret"`
	// The value of the environment variable
	Value *string `pulumi:"value"`
}

// ServiceDefinitionEnvInput is an input type that accepts ServiceDefinitionEnvArgs and ServiceDefinitionEnvOutput values.
// You can construct a concrete instance of `ServiceDefinitionEnvInput` via:
//
//	ServiceDefinitionEnvArgs{...}
type ServiceDefinitionEnvInput interface {
	pulumi.Input

	ToServiceDefinitionEnvOutput() ServiceDefinitionEnvOutput
	ToServiceDefinitionEnvOutputWithContext(context.Context) ServiceDefinitionEnvOutput
}

type ServiceDefinitionEnvArgs struct {
	// The name of the environment variable
	Key pulumi.StringInput `pulumi:"key"`
	// The regions the environment variable needs to be exposed
	Scopes pulumi.StringArrayInput `pulumi:"scopes"`
	// The secret name to use as the value of the environment variable
	Secret pulumi.StringPtrInput `pulumi:"secret"`
	// The value of the environment variable
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceDefinitionEnvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDefinitionEnv)(nil)).Elem()
}

func (i ServiceDefinitionEnvArgs) ToServiceDefinitionEnvOutput() ServiceDefinitionEnvOutput {
	return i.ToServiceDefinitionEnvOutputWithContext(context.Background())
}

func (i ServiceDefinitionEnvArgs) ToServiceDefinitionEnvOutputWithContext(ctx context.Context) ServiceDefinitionEnvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDefinitionEnvOutput)
}

// ServiceDefinitionEnvArrayInput is an input type that accepts ServiceDefinitionEnvArray and ServiceDefinitionEnvArrayOutput values.
// You can construct a concrete instance of `ServiceDefinitionEnvArrayInput` via:
//
//	ServiceDefinitionEnvArray{ ServiceDefinitionEnvArgs{...} }
type ServiceDefinitionEnvArrayInput interface {
	pulumi.Input

	ToServiceDefinitionEnvArrayOutput() ServiceDefinitionEnvArrayOutput
	ToServiceDefinitionEnvArrayOutputWithContext(context.Context) ServiceDefinitionEnvArrayOutput
}

type ServiceDefinitionEnvArray []ServiceDefinitionEnvInput

func (ServiceDefinitionEnvArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceDefinitionEnv)(nil)).Elem()
}

func (i ServiceDefinitionEnvArray) ToServiceDefinitionEnvArrayOutput() ServiceDefinitionEnvArrayOutput {
	return i.ToServiceDefinitionEnvArrayOutputWithContext(context.Background())
}

func (i ServiceDefinitionEnvArray) ToServiceDefinitionEnvArrayOutputWithContext(ctx context.Context) ServiceDefinitionEnvArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDefinitionEnvArrayOutput)
}

type ServiceDefinitionEnvOutput struct{ *pulumi.OutputState }

func (ServiceDefinitionEnvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDefinitionEnv)(nil)).Elem()
}

func (o ServiceDefinitionEnvOutput) ToServiceDefinitionEnvOutput() ServiceDefinitionEnvOutput {
	return o
}

func (o ServiceDefinitionEnvOutput) ToServiceDefinitionEnvOutputWithContext(ctx context.Context) ServiceDefinitionEnvOutput {
	return o
}

// The name of the environment variable
func (o ServiceDefinitionEnvOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceDefinitionEnv) string { return v.Key }).(pulumi.StringOutput)
}

// The regions the environment variable needs to be exposed
func (o ServiceDefinitionEnvOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceDefinitionEnv) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

// The secret name to use as the value of the environment variable
func (o ServiceDefinitionEnvOutput) Secret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceDefinitionEnv) *string { return v.Secret }).(pulumi.StringPtrOutput)
}

// The value of the environment variable
func (o ServiceDefinitionEnvOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceDefinitionEnv) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceDefinitionEnvArrayOutput struct{ *pulumi.OutputState }

func (ServiceDefinitionEnvArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceDefinitionEnv)(nil)).Elem()
}

func (o ServiceDefinitionEnvArrayOutput) ToServiceDefinitionEnvArrayOutput() ServiceDefinitionEnvArrayOutput {
	return o
}

func (o ServiceDefinitionEnvArrayOutput) ToServiceDefinitionEnvArrayOutputWithContext(ctx context.Context) ServiceDefinitionEnvArrayOutput {
	return o
}

func (o ServiceDefinitionEnvArrayOutput) Index(i pulumi.IntInput) ServiceDefinitionEnvOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceDefinitionEnv {
		return vs[0].([]ServiceDefinitionEnv)[vs[1].(int)]
	}).(ServiceDefinitionEnvOutput)
}

type ServiceDefinitionGit struct {
	// The GitHub branch to deploy
	Branch     string                          `pulumi:"branch"`
	Buildpack  *ServiceDefinitionGitBuildpack  `pulumi:"buildpack"`
	Dockerfile *ServiceDefinitionGitDockerfile `pulumi:"dockerfile"`
	// If set to true, no Koyeb deployments will be triggered when changes are pushed to the GitHub repository branch
	NoDeployOnPush *bool `pulumi:"noDeployOnPush"`
	// The GitHub repository to deploy
	Repository string `pulumi:"repository"`
	// The directory where your source code is located. If not set, the work directory defaults to the root of the repository.
	Workdir *string `pulumi:"workdir"`
}

// ServiceDefinitionGitInput is an input type that accepts ServiceDefinitionGitArgs and ServiceDefinitionGitOutput values.
// You can construct a concrete instance of `ServiceDefinitionGitInput` via:
//
//	ServiceDefinitionGitArgs{...}
type ServiceDefinitionGitInput interface {
	pulumi.Input

	ToServiceDefinitionGitOutput() ServiceDefinitionGitOutput
	ToServiceDefinitionGitOutputWithContext(context.Context) ServiceDefinitionGitOutput
}

type ServiceDefinitionGitArgs struct {
	// The GitHub branch to deploy
	Branch     pulumi.StringInput                     `pulumi:"branch"`
	Buildpack  ServiceDefinitionGitBuildpackPtrInput  `pulumi:"buildpack"`
	Dockerfile ServiceDefinitionGitDockerfilePtrInput `pulumi:"dockerfile"`
	// If set to true, no Koyeb deployments will be triggered when changes are pushed to the GitHub repository branch
	NoDeployOnPush pulumi.BoolPtrInput `pulumi:"noDeployOnPush"`
	// The GitHub repository to deploy
	Repository pulumi.StringInput `pulumi:"repository"`
	// The directory where your source code is located. If not set, the work directory defaults to the root of the repository.
	Workdir pulumi.StringPtrInput `pulumi:"workdir"`
}

func (ServiceDefinitionGitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDefinitionGit)(nil)).Elem()
}

func (i ServiceDefinitionGitArgs) ToServiceDefinitionGitOutput() ServiceDefinitionGitOutput {
	return i.ToServiceDefinitionGitOutputWithContext(context.Background())
}

func (i ServiceDefinitionGitArgs) ToServiceDefinitionGitOutputWithContext(ctx context.Context) ServiceDefinitionGitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDefinitionGitOutput)
}

func (i ServiceDefinitionGitArgs) ToServiceDefinitionGitPtrOutput() ServiceDefinitionGitPtrOutput {
	return i.ToServiceDefinitionGitPtrOutputWithContext(context.Background())
}

func (i ServiceDefinitionGitArgs) ToServiceDefinitionGitPtrOutputWithContext(ctx context.Context) ServiceDefinitionGitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDefinitionGitOutput).ToServiceDefinitionGitPtrOutputWithContext(ctx)
}

// ServiceDefinitionGitPtrInput is an input type that accepts ServiceDefinitionGitArgs, ServiceDefinitionGitPtr and ServiceDefinitionGitPtrOutput values.
// You can construct a concrete instance of `ServiceDefinitionGitPtrInput` via:
//
//	        ServiceDefinitionGitArgs{...}
//
//	or:
//
//	        nil
type ServiceDefinitionGitPtrInput interface {
	pulumi.Input

	ToServiceDefinitionGitPtrOutput() ServiceDefinitionGitPtrOutput
	ToServiceDefinitionGitPtrOutputWithContext(context.Context) ServiceDefinitionGitPtrOutput
}

type serviceDefinitionGitPtrType ServiceDefinitionGitArgs

func ServiceDefinitionGitPtr(v *ServiceDefinitionGitArgs) ServiceDefinitionGitPtrInput {
	return (*serviceDefinitionGitPtrType)(v)
}

func (*serviceDefinitionGitPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDefinitionGit)(nil)).Elem()
}

func (i *serviceDefinitionGitPtrType) ToServiceDefinitionGitPtrOutput() ServiceDefinitionGitPtrOutput {
	return i.ToServiceDefinitionGitPtrOutputWithContext(context.Background())
}

func (i *serviceDefinitionGitPtrType) ToServiceDefinitionGitPtrOutputWithContext(ctx context.Context) ServiceDefinitionGitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDefinitionGitPtrOutput)
}

type ServiceDefinitionGitOutput struct{ *pulumi.OutputState }

func (ServiceDefinitionGitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDefinitionGit)(nil)).Elem()
}

func (o ServiceDefinitionGitOutput) ToServiceDefinitionGitOutput() ServiceDefinitionGitOutput {
	return o
}

func (o ServiceDefinitionGitOutput) ToServiceDefinitionGitOutputWithContext(ctx context.Context) ServiceDefinitionGitOutput {
	return o
}

func (o ServiceDefinitionGitOutput) ToServiceDefinitionGitPtrOutput() ServiceDefinitionGitPtrOutput {
	return o.ToServiceDefinitionGitPtrOutputWithContext(context.Background())
}

func (o ServiceDefinitionGitOutput) ToServiceDefinitionGitPtrOutputWithContext(ctx context.Context) ServiceDefinitionGitPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceDefinitionGit) *ServiceDefinitionGit {
		return &v
	}).(ServiceDefinitionGitPtrOutput)
}

// The GitHub branch to deploy
func (o ServiceDefinitionGitOutput) Branch() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceDefinitionGit) string { return v.Branch }).(pulumi.StringOutput)
}

func (o ServiceDefinitionGitOutput) Buildpack() ServiceDefinitionGitBuildpackPtrOutput {
	return o.ApplyT(func(v ServiceDefinitionGit) *ServiceDefinitionGitBuildpack { return v.Buildpack }).(ServiceDefinitionGitBuildpackPtrOutput)
}

func (o ServiceDefinitionGitOutput) Dockerfile() ServiceDefinitionGitDockerfilePtrOutput {
	return o.ApplyT(func(v ServiceDefinitionGit) *ServiceDefinitionGitDockerfile { return v.Dockerfile }).(ServiceDefinitionGitDockerfilePtrOutput)
}

// If set to true, no Koyeb deployments will be triggered when changes are pushed to the GitHub repository branch
func (o ServiceDefinitionGitOutput) NoDeployOnPush() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceDefinitionGit) *bool { return v.NoDeployOnPush }).(pulumi.BoolPtrOutput)
}

// The GitHub repository to deploy
func (o ServiceDefinitionGitOutput) Repository() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceDefinitionGit) string { return v.Repository }).(pulumi.StringOutput)
}

// The directory where your source code is located. If not set, the work directory defaults to the root of the repository.
func (o ServiceDefinitionGitOutput) Workdir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceDefinitionGit) *string { return v.Workdir }).(pulumi.StringPtrOutput)
}

type ServiceDefinitionGitPtrOutput struct{ *pulumi.OutputState }

func (ServiceDefinitionGitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDefinitionGit)(nil)).Elem()
}

func (o ServiceDefinitionGitPtrOutput) ToServiceDefinitionGitPtrOutput() ServiceDefinitionGitPtrOutput {
	return o
}

func (o ServiceDefinitionGitPtrOutput) ToServiceDefinitionGitPtrOutputWithContext(ctx context.Context) ServiceDefinitionGitPtrOutput {
	return o
}

func (o ServiceDefinitionGitPtrOutput) Elem() ServiceDefinitionGitOutput {
	return o.ApplyT(func(v *ServiceDefinitionGit) ServiceDefinitionGit {
		if v != nil {
			return *v
		}
		var ret ServiceDefinitionGit
		return ret
	}).(ServiceDefinitionGitOutput)
}

// The GitHub branch to deploy
func (o ServiceDefinitionGitPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceDefinitionGit) *string {
		if v == nil {
			return nil
		}
		return &v.Branch
	}).(pulumi.StringPtrOutput)
}

func (o ServiceDefinitionGitPtrOutput) Buildpack() ServiceDefinitionGitBuildpackPtrOutput {
	return o.ApplyT(func(v *ServiceDefinitionGit) *ServiceDefinitionGitBuildpack {
		if v == nil {
			return nil
		}
		return v.Buildpack
	}).(ServiceDefinitionGitBuildpackPtrOutput)
}

func (o ServiceDefinitionGitPtrOutput) Dockerfile() ServiceDefinitionGitDockerfilePtrOutput {
	return o.ApplyT(func(v *ServiceDefinitionGit) *ServiceDefinitionGitDockerfile {
		if v == nil {
			return nil
		}
		return v.Dockerfile
	}).(ServiceDefinitionGitDockerfilePtrOutput)
}

// If set to true, no Koyeb deployments will be triggered when changes are pushed to the GitHub repository branch
func (o ServiceDefinitionGitPtrOutput) NoDeployOnPush() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceDefinitionGit) *bool {
		if v == nil {
			return nil
		}
		return v.NoDeployOnPush
	}).(pulumi.BoolPtrOutput)
}

// The GitHub repository to deploy
func (o ServiceDefinitionGitPtrOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceDefinitionGit) *string {
		if v == nil {
			return nil
		}
		return &v.Repository
	}).(pulumi.StringPtrOutput)
}

// The directory where your source code is located. If not set, the work directory defaults to the root of the repository.
func (o ServiceDefinitionGitPtrOutput) Workdir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceDefinitionGit) *string {
		if v == nil {
			return nil
		}
		return v.Workdir
	}).(pulumi.StringPtrOutput)
}

type ServiceDefinitionGitBuildpack struct {
	// The command to build your application during the build phase. If your application does not require a build command, leave this field empty
	BuildCommand *string `pulumi:"buildCommand"`
	// When enabled, the service container will run in privileged mode. This advanced feature is useful to get advanced system privileges.
	Privileged *bool `pulumi:"privileged"`
	// The command to run your application once the built is completed
	RunCommand *string `pulumi:"runCommand"`
}

// ServiceDefinitionGitBuildpackInput is an input type that accepts ServiceDefinitionGitBuildpackArgs and ServiceDefinitionGitBuildpackOutput values.
// You can construct a concrete instance of `ServiceDefinitionGitBuildpackInput` via:
//
//	ServiceDefinitionGitBuildpackArgs{...}
type ServiceDefinitionGitBuildpackInput interface {
	pulumi.Input

	ToServiceDefinitionGitBuildpackOutput() ServiceDefinitionGitBuildpackOutput
	ToServiceDefinitionGitBuildpackOutputWithContext(context.Context) ServiceDefinitionGitBuildpackOutput
}

type ServiceDefinitionGitBuildpackArgs struct {
	// The command to build your application during the build phase. If your application does not require a build command, leave this field empty
	BuildCommand pulumi.StringPtrInput `pulumi:"buildCommand"`
	// When enabled, the service container will run in privileged mode. This advanced feature is useful to get advanced system privileges.
	Privileged pulumi.BoolPtrInput `pulumi:"privileged"`
	// The command to run your application once the built is completed
	RunCommand pulumi.StringPtrInput `pulumi:"runCommand"`
}

func (ServiceDefinitionGitBuildpackArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDefinitionGitBuildpack)(nil)).Elem()
}

func (i ServiceDefinitionGitBuildpackArgs) ToServiceDefinitionGitBuildpackOutput() ServiceDefinitionGitBuildpackOutput {
	return i.ToServiceDefinitionGitBuildpackOutputWithContext(context.Background())
}

func (i ServiceDefinitionGitBuildpackArgs) ToServiceDefinitionGitBuildpackOutputWithContext(ctx context.Context) ServiceDefinitionGitBuildpackOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDefinitionGitBuildpackOutput)
}

func (i ServiceDefinitionGitBuildpackArgs) ToServiceDefinitionGitBuildpackPtrOutput() ServiceDefinitionGitBuildpackPtrOutput {
	return i.ToServiceDefinitionGitBuildpackPtrOutputWithContext(context.Background())
}

func (i ServiceDefinitionGitBuildpackArgs) ToServiceDefinitionGitBuildpackPtrOutputWithContext(ctx context.Context) ServiceDefinitionGitBuildpackPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDefinitionGitBuildpackOutput).ToServiceDefinitionGitBuildpackPtrOutputWithContext(ctx)
}

// ServiceDefinitionGitBuildpackPtrInput is an input type that accepts ServiceDefinitionGitBuildpackArgs, ServiceDefinitionGitBuildpackPtr and ServiceDefinitionGitBuildpackPtrOutput values.
// You can construct a concrete instance of `ServiceDefinitionGitBuildpackPtrInput` via:
//
//	        ServiceDefinitionGitBuildpackArgs{...}
//
//	or:
//
//	        nil
type ServiceDefinitionGitBuildpackPtrInput interface {
	pulumi.Input

	ToServiceDefinitionGitBuildpackPtrOutput() ServiceDefinitionGitBuildpackPtrOutput
	ToServiceDefinitionGitBuildpackPtrOutputWithContext(context.Context) ServiceDefinitionGitBuildpackPtrOutput
}

type serviceDefinitionGitBuildpackPtrType ServiceDefinitionGitBuildpackArgs

func ServiceDefinitionGitBuildpackPtr(v *ServiceDefinitionGitBuildpackArgs) ServiceDefinitionGitBuildpackPtrInput {
	return (*serviceDefinitionGitBuildpackPtrType)(v)
}

func (*serviceDefinitionGitBuildpackPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDefinitionGitBuildpack)(nil)).Elem()
}

func (i *serviceDefinitionGitBuildpackPtrType) ToServiceDefinitionGitBuildpackPtrOutput() ServiceDefinitionGitBuildpackPtrOutput {
	return i.ToServiceDefinitionGitBuildpackPtrOutputWithContext(context.Background())
}

func (i *serviceDefinitionGitBuildpackPtrType) ToServiceDefinitionGitBuildpackPtrOutputWithContext(ctx context.Context) ServiceDefinitionGitBuildpackPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDefinitionGitBuildpackPtrOutput)
}

type ServiceDefinitionGitBuildpackOutput struct{ *pulumi.OutputState }

func (ServiceDefinitionGitBuildpackOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDefinitionGitBuildpack)(nil)).Elem()
}

func (o ServiceDefinitionGitBuildpackOutput) ToServiceDefinitionGitBuildpackOutput() ServiceDefinitionGitBuildpackOutput {
	return o
}

func (o ServiceDefinitionGitBuildpackOutput) ToServiceDefinitionGitBuildpackOutputWithContext(ctx context.Context) ServiceDefinitionGitBuildpackOutput {
	return o
}

func (o ServiceDefinitionGitBuildpackOutput) ToServiceDefinitionGitBuildpackPtrOutput() ServiceDefinitionGitBuildpackPtrOutput {
	return o.ToServiceDefinitionGitBuildpackPtrOutputWithContext(context.Background())
}

func (o ServiceDefinitionGitBuildpackOutput) ToServiceDefinitionGitBuildpackPtrOutputWithContext(ctx context.Context) ServiceDefinitionGitBuildpackPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceDefinitionGitBuildpack) *ServiceDefinitionGitBuildpack {
		return &v
	}).(ServiceDefinitionGitBuildpackPtrOutput)
}

// The command to build your application during the build phase. If your application does not require a build command, leave this field empty
func (o ServiceDefinitionGitBuildpackOutput) BuildCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceDefinitionGitBuildpack) *string { return v.BuildCommand }).(pulumi.StringPtrOutput)
}

// When enabled, the service container will run in privileged mode. This advanced feature is useful to get advanced system privileges.
func (o ServiceDefinitionGitBuildpackOutput) Privileged() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceDefinitionGitBuildpack) *bool { return v.Privileged }).(pulumi.BoolPtrOutput)
}

// The command to run your application once the built is completed
func (o ServiceDefinitionGitBuildpackOutput) RunCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceDefinitionGitBuildpack) *string { return v.RunCommand }).(pulumi.StringPtrOutput)
}

type ServiceDefinitionGitBuildpackPtrOutput struct{ *pulumi.OutputState }

func (ServiceDefinitionGitBuildpackPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDefinitionGitBuildpack)(nil)).Elem()
}

func (o ServiceDefinitionGitBuildpackPtrOutput) ToServiceDefinitionGitBuildpackPtrOutput() ServiceDefinitionGitBuildpackPtrOutput {
	return o
}

func (o ServiceDefinitionGitBuildpackPtrOutput) ToServiceDefinitionGitBuildpackPtrOutputWithContext(ctx context.Context) ServiceDefinitionGitBuildpackPtrOutput {
	return o
}

func (o ServiceDefinitionGitBuildpackPtrOutput) Elem() ServiceDefinitionGitBuildpackOutput {
	return o.ApplyT(func(v *ServiceDefinitionGitBuildpack) ServiceDefinitionGitBuildpack {
		if v != nil {
			return *v
		}
		var ret ServiceDefinitionGitBuildpack
		return ret
	}).(ServiceDefinitionGitBuildpackOutput)
}

// The command to build your application during the build phase. If your application does not require a build command, leave this field empty
func (o ServiceDefinitionGitBuildpackPtrOutput) BuildCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceDefinitionGitBuildpack) *string {
		if v == nil {
			return nil
		}
		return v.BuildCommand
	}).(pulumi.StringPtrOutput)
}

// When enabled, the service container will run in privileged mode. This advanced feature is useful to get advanced system privileges.
func (o ServiceDefinitionGitBuildpackPtrOutput) Privileged() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceDefinitionGitBuildpack) *bool {
		if v == nil {
			return nil
		}
		return v.Privileged
	}).(pulumi.BoolPtrOutput)
}

// The command to run your application once the built is completed
func (o ServiceDefinitionGitBuildpackPtrOutput) RunCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceDefinitionGitBuildpack) *string {
		if v == nil {
			return nil
		}
		return v.RunCommand
	}).(pulumi.StringPtrOutput)
}

type ServiceDefinitionGitDockerfile struct {
	// The arguments to pass to the Docker command
	Args []string `pulumi:"args"`
	// Override the command to execute on the container
	Command *string `pulumi:"command"`
	// The location of your Dockerfile relative to the work directory. If not set, the work directory defaults to the root of the repository.
	Dockerfile *string `pulumi:"dockerfile"`
	// Override the default entrypoint to execute on the container
	Entrypoints []string `pulumi:"entrypoints"`
	// When enabled, the service container will run in privileged mode. This advanced feature is useful to get advanced system privileges.
	Privileged *bool `pulumi:"privileged"`
	// Target build stage: If your Dockerfile contains multi-stage builds, you can choose the target stage to build and deploy by entering its name
	Target *string `pulumi:"target"`
}

// ServiceDefinitionGitDockerfileInput is an input type that accepts ServiceDefinitionGitDockerfileArgs and ServiceDefinitionGitDockerfileOutput values.
// You can construct a concrete instance of `ServiceDefinitionGitDockerfileInput` via:
//
//	ServiceDefinitionGitDockerfileArgs{...}
type ServiceDefinitionGitDockerfileInput interface {
	pulumi.Input

	ToServiceDefinitionGitDockerfileOutput() ServiceDefinitionGitDockerfileOutput
	ToServiceDefinitionGitDockerfileOutputWithContext(context.Context) ServiceDefinitionGitDockerfileOutput
}

type ServiceDefinitionGitDockerfileArgs struct {
	// The arguments to pass to the Docker command
	Args pulumi.StringArrayInput `pulumi:"args"`
	// Override the command to execute on the container
	Command pulumi.StringPtrInput `pulumi:"command"`
	// The location of your Dockerfile relative to the work directory. If not set, the work directory defaults to the root of the repository.
	Dockerfile pulumi.StringPtrInput `pulumi:"dockerfile"`
	// Override the default entrypoint to execute on the container
	Entrypoints pulumi.StringArrayInput `pulumi:"entrypoints"`
	// When enabled, the service container will run in privileged mode. This advanced feature is useful to get advanced system privileges.
	Privileged pulumi.BoolPtrInput `pulumi:"privileged"`
	// Target build stage: If your Dockerfile contains multi-stage builds, you can choose the target stage to build and deploy by entering its name
	Target pulumi.StringPtrInput `pulumi:"target"`
}

func (ServiceDefinitionGitDockerfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDefinitionGitDockerfile)(nil)).Elem()
}

func (i ServiceDefinitionGitDockerfileArgs) ToServiceDefinitionGitDockerfileOutput() ServiceDefinitionGitDockerfileOutput {
	return i.ToServiceDefinitionGitDockerfileOutputWithContext(context.Background())
}

func (i ServiceDefinitionGitDockerfileArgs) ToServiceDefinitionGitDockerfileOutputWithContext(ctx context.Context) ServiceDefinitionGitDockerfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDefinitionGitDockerfileOutput)
}

func (i ServiceDefinitionGitDockerfileArgs) ToServiceDefinitionGitDockerfilePtrOutput() ServiceDefinitionGitDockerfilePtrOutput {
	return i.ToServiceDefinitionGitDockerfilePtrOutputWithContext(context.Background())
}

func (i ServiceDefinitionGitDockerfileArgs) ToServiceDefinitionGitDockerfilePtrOutputWithContext(ctx context.Context) ServiceDefinitionGitDockerfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDefinitionGitDockerfileOutput).ToServiceDefinitionGitDockerfilePtrOutputWithContext(ctx)
}

// ServiceDefinitionGitDockerfilePtrInput is an input type that accepts ServiceDefinitionGitDockerfileArgs, ServiceDefinitionGitDockerfilePtr and ServiceDefinitionGitDockerfilePtrOutput values.
// You can construct a concrete instance of `ServiceDefinitionGitDockerfilePtrInput` via:
//
//	        ServiceDefinitionGitDockerfileArgs{...}
//
//	or:
//
//	        nil
type ServiceDefinitionGitDockerfilePtrInput interface {
	pulumi.Input

	ToServiceDefinitionGitDockerfilePtrOutput() ServiceDefinitionGitDockerfilePtrOutput
	ToServiceDefinitionGitDockerfilePtrOutputWithContext(context.Context) ServiceDefinitionGitDockerfilePtrOutput
}

type serviceDefinitionGitDockerfilePtrType ServiceDefinitionGitDockerfileArgs

func ServiceDefinitionGitDockerfilePtr(v *ServiceDefinitionGitDockerfileArgs) ServiceDefinitionGitDockerfilePtrInput {
	return (*serviceDefinitionGitDockerfilePtrType)(v)
}

func (*serviceDefinitionGitDockerfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDefinitionGitDockerfile)(nil)).Elem()
}

func (i *serviceDefinitionGitDockerfilePtrType) ToServiceDefinitionGitDockerfilePtrOutput() ServiceDefinitionGitDockerfilePtrOutput {
	return i.ToServiceDefinitionGitDockerfilePtrOutputWithContext(context.Background())
}

func (i *serviceDefinitionGitDockerfilePtrType) ToServiceDefinitionGitDockerfilePtrOutputWithContext(ctx context.Context) ServiceDefinitionGitDockerfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDefinitionGitDockerfilePtrOutput)
}

type ServiceDefinitionGitDockerfileOutput struct{ *pulumi.OutputState }

func (ServiceDefinitionGitDockerfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDefinitionGitDockerfile)(nil)).Elem()
}

func (o ServiceDefinitionGitDockerfileOutput) ToServiceDefinitionGitDockerfileOutput() ServiceDefinitionGitDockerfileOutput {
	return o
}

func (o ServiceDefinitionGitDockerfileOutput) ToServiceDefinitionGitDockerfileOutputWithContext(ctx context.Context) ServiceDefinitionGitDockerfileOutput {
	return o
}

func (o ServiceDefinitionGitDockerfileOutput) ToServiceDefinitionGitDockerfilePtrOutput() ServiceDefinitionGitDockerfilePtrOutput {
	return o.ToServiceDefinitionGitDockerfilePtrOutputWithContext(context.Background())
}

func (o ServiceDefinitionGitDockerfileOutput) ToServiceDefinitionGitDockerfilePtrOutputWithContext(ctx context.Context) ServiceDefinitionGitDockerfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceDefinitionGitDockerfile) *ServiceDefinitionGitDockerfile {
		return &v
	}).(ServiceDefinitionGitDockerfilePtrOutput)
}

// The arguments to pass to the Docker command
func (o ServiceDefinitionGitDockerfileOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceDefinitionGitDockerfile) []string { return v.Args }).(pulumi.StringArrayOutput)
}

// Override the command to execute on the container
func (o ServiceDefinitionGitDockerfileOutput) Command() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceDefinitionGitDockerfile) *string { return v.Command }).(pulumi.StringPtrOutput)
}

// The location of your Dockerfile relative to the work directory. If not set, the work directory defaults to the root of the repository.
func (o ServiceDefinitionGitDockerfileOutput) Dockerfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceDefinitionGitDockerfile) *string { return v.Dockerfile }).(pulumi.StringPtrOutput)
}

// Override the default entrypoint to execute on the container
func (o ServiceDefinitionGitDockerfileOutput) Entrypoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceDefinitionGitDockerfile) []string { return v.Entrypoints }).(pulumi.StringArrayOutput)
}

// When enabled, the service container will run in privileged mode. This advanced feature is useful to get advanced system privileges.
func (o ServiceDefinitionGitDockerfileOutput) Privileged() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ServiceDefinitionGitDockerfile) *bool { return v.Privileged }).(pulumi.BoolPtrOutput)
}

// Target build stage: If your Dockerfile contains multi-stage builds, you can choose the target stage to build and deploy by entering its name
func (o ServiceDefinitionGitDockerfileOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceDefinitionGitDockerfile) *string { return v.Target }).(pulumi.StringPtrOutput)
}

type ServiceDefinitionGitDockerfilePtrOutput struct{ *pulumi.OutputState }

func (ServiceDefinitionGitDockerfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDefinitionGitDockerfile)(nil)).Elem()
}

func (o ServiceDefinitionGitDockerfilePtrOutput) ToServiceDefinitionGitDockerfilePtrOutput() ServiceDefinitionGitDockerfilePtrOutput {
	return o
}

func (o ServiceDefinitionGitDockerfilePtrOutput) ToServiceDefinitionGitDockerfilePtrOutputWithContext(ctx context.Context) ServiceDefinitionGitDockerfilePtrOutput {
	return o
}

func (o ServiceDefinitionGitDockerfilePtrOutput) Elem() ServiceDefinitionGitDockerfileOutput {
	return o.ApplyT(func(v *ServiceDefinitionGitDockerfile) ServiceDefinitionGitDockerfile {
		if v != nil {
			return *v
		}
		var ret ServiceDefinitionGitDockerfile
		return ret
	}).(ServiceDefinitionGitDockerfileOutput)
}

// The arguments to pass to the Docker command
func (o ServiceDefinitionGitDockerfilePtrOutput) Args() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceDefinitionGitDockerfile) []string {
		if v == nil {
			return nil
		}
		return v.Args
	}).(pulumi.StringArrayOutput)
}

// Override the command to execute on the container
func (o ServiceDefinitionGitDockerfilePtrOutput) Command() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceDefinitionGitDockerfile) *string {
		if v == nil {
			return nil
		}
		return v.Command
	}).(pulumi.StringPtrOutput)
}

// The location of your Dockerfile relative to the work directory. If not set, the work directory defaults to the root of the repository.
func (o ServiceDefinitionGitDockerfilePtrOutput) Dockerfile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceDefinitionGitDockerfile) *string {
		if v == nil {
			return nil
		}
		return v.Dockerfile
	}).(pulumi.StringPtrOutput)
}

// Override the default entrypoint to execute on the container
func (o ServiceDefinitionGitDockerfilePtrOutput) Entrypoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ServiceDefinitionGitDockerfile) []string {
		if v == nil {
			return nil
		}
		return v.Entrypoints
	}).(pulumi.StringArrayOutput)
}

// When enabled, the service container will run in privileged mode. This advanced feature is useful to get advanced system privileges.
func (o ServiceDefinitionGitDockerfilePtrOutput) Privileged() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ServiceDefinitionGitDockerfile) *bool {
		if v == nil {
			return nil
		}
		return v.Privileged
	}).(pulumi.BoolPtrOutput)
}

// Target build stage: If your Dockerfile contains multi-stage builds, you can choose the target stage to build and deploy by entering its name
func (o ServiceDefinitionGitDockerfilePtrOutput) Target() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceDefinitionGitDockerfile) *string {
		if v == nil {
			return nil
		}
		return v.Target
	}).(pulumi.StringPtrOutput)
}

type ServiceDefinitionHealthCheck struct {
	// The period in seconds to wait for the instance to become healthy, default is 5s
	GracePeriod *int                              `pulumi:"gracePeriod"`
	Http        *ServiceDefinitionHealthCheckHttp `pulumi:"http"`
	// The period in seconds between two health checks, default is 60s
	Interval *int `pulumi:"interval"`
	// The number of consecutive failures before attempting to restart the service, default is 3
	RestartLimit *int                             `pulumi:"restartLimit"`
	Tcp          *ServiceDefinitionHealthCheckTcp `pulumi:"tcp"`
	// The maximum time to wait in seconds before considering the check as a failure, default is 5s
	Timeout *int `pulumi:"timeout"`
}

// ServiceDefinitionHealthCheckInput is an input type that accepts ServiceDefinitionHealthCheckArgs and ServiceDefinitionHealthCheckOutput values.
// You can construct a concrete instance of `ServiceDefinitionHealthCheckInput` via:
//
//	ServiceDefinitionHealthCheckArgs{...}
type ServiceDefinitionHealthCheckInput interface {
	pulumi.Input

	ToServiceDefinitionHealthCheckOutput() ServiceDefinitionHealthCheckOutput
	ToServiceDefinitionHealthCheckOutputWithContext(context.Context) ServiceDefinitionHealthCheckOutput
}

type ServiceDefinitionHealthCheckArgs struct {
	// The period in seconds to wait for the instance to become healthy, default is 5s
	GracePeriod pulumi.IntPtrInput                       `pulumi:"gracePeriod"`
	Http        ServiceDefinitionHealthCheckHttpPtrInput `pulumi:"http"`
	// The period in seconds between two health checks, default is 60s
	Interval pulumi.IntPtrInput `pulumi:"interval"`
	// The number of consecutive failures before attempting to restart the service, default is 3
	RestartLimit pulumi.IntPtrInput                      `pulumi:"restartLimit"`
	Tcp          ServiceDefinitionHealthCheckTcpPtrInput `pulumi:"tcp"`
	// The maximum time to wait in seconds before considering the check as a failure, default is 5s
	Timeout pulumi.IntPtrInput `pulumi:"timeout"`
}

func (ServiceDefinitionHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDefinitionHealthCheck)(nil)).Elem()
}

func (i ServiceDefinitionHealthCheckArgs) ToServiceDefinitionHealthCheckOutput() ServiceDefinitionHealthCheckOutput {
	return i.ToServiceDefinitionHealthCheckOutputWithContext(context.Background())
}

func (i ServiceDefinitionHealthCheckArgs) ToServiceDefinitionHealthCheckOutputWithContext(ctx context.Context) ServiceDefinitionHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDefinitionHealthCheckOutput)
}

// ServiceDefinitionHealthCheckArrayInput is an input type that accepts ServiceDefinitionHealthCheckArray and ServiceDefinitionHealthCheckArrayOutput values.
// You can construct a concrete instance of `ServiceDefinitionHealthCheckArrayInput` via:
//
//	ServiceDefinitionHealthCheckArray{ ServiceDefinitionHealthCheckArgs{...} }
type ServiceDefinitionHealthCheckArrayInput interface {
	pulumi.Input

	ToServiceDefinitionHealthCheckArrayOutput() ServiceDefinitionHealthCheckArrayOutput
	ToServiceDefinitionHealthCheckArrayOutputWithContext(context.Context) ServiceDefinitionHealthCheckArrayOutput
}

type ServiceDefinitionHealthCheckArray []ServiceDefinitionHealthCheckInput

func (ServiceDefinitionHealthCheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceDefinitionHealthCheck)(nil)).Elem()
}

func (i ServiceDefinitionHealthCheckArray) ToServiceDefinitionHealthCheckArrayOutput() ServiceDefinitionHealthCheckArrayOutput {
	return i.ToServiceDefinitionHealthCheckArrayOutputWithContext(context.Background())
}

func (i ServiceDefinitionHealthCheckArray) ToServiceDefinitionHealthCheckArrayOutputWithContext(ctx context.Context) ServiceDefinitionHealthCheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDefinitionHealthCheckArrayOutput)
}

type ServiceDefinitionHealthCheckOutput struct{ *pulumi.OutputState }

func (ServiceDefinitionHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDefinitionHealthCheck)(nil)).Elem()
}

func (o ServiceDefinitionHealthCheckOutput) ToServiceDefinitionHealthCheckOutput() ServiceDefinitionHealthCheckOutput {
	return o
}

func (o ServiceDefinitionHealthCheckOutput) ToServiceDefinitionHealthCheckOutputWithContext(ctx context.Context) ServiceDefinitionHealthCheckOutput {
	return o
}

// The period in seconds to wait for the instance to become healthy, default is 5s
func (o ServiceDefinitionHealthCheckOutput) GracePeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceDefinitionHealthCheck) *int { return v.GracePeriod }).(pulumi.IntPtrOutput)
}

func (o ServiceDefinitionHealthCheckOutput) Http() ServiceDefinitionHealthCheckHttpPtrOutput {
	return o.ApplyT(func(v ServiceDefinitionHealthCheck) *ServiceDefinitionHealthCheckHttp { return v.Http }).(ServiceDefinitionHealthCheckHttpPtrOutput)
}

// The period in seconds between two health checks, default is 60s
func (o ServiceDefinitionHealthCheckOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceDefinitionHealthCheck) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// The number of consecutive failures before attempting to restart the service, default is 3
func (o ServiceDefinitionHealthCheckOutput) RestartLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceDefinitionHealthCheck) *int { return v.RestartLimit }).(pulumi.IntPtrOutput)
}

func (o ServiceDefinitionHealthCheckOutput) Tcp() ServiceDefinitionHealthCheckTcpPtrOutput {
	return o.ApplyT(func(v ServiceDefinitionHealthCheck) *ServiceDefinitionHealthCheckTcp { return v.Tcp }).(ServiceDefinitionHealthCheckTcpPtrOutput)
}

// The maximum time to wait in seconds before considering the check as a failure, default is 5s
func (o ServiceDefinitionHealthCheckOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceDefinitionHealthCheck) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

type ServiceDefinitionHealthCheckArrayOutput struct{ *pulumi.OutputState }

func (ServiceDefinitionHealthCheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceDefinitionHealthCheck)(nil)).Elem()
}

func (o ServiceDefinitionHealthCheckArrayOutput) ToServiceDefinitionHealthCheckArrayOutput() ServiceDefinitionHealthCheckArrayOutput {
	return o
}

func (o ServiceDefinitionHealthCheckArrayOutput) ToServiceDefinitionHealthCheckArrayOutputWithContext(ctx context.Context) ServiceDefinitionHealthCheckArrayOutput {
	return o
}

func (o ServiceDefinitionHealthCheckArrayOutput) Index(i pulumi.IntInput) ServiceDefinitionHealthCheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceDefinitionHealthCheck {
		return vs[0].([]ServiceDefinitionHealthCheck)[vs[1].(int)]
	}).(ServiceDefinitionHealthCheckOutput)
}

type ServiceDefinitionHealthCheckHttp struct {
	Headers []ServiceDefinitionHealthCheckHttpHeader `pulumi:"headers"`
	// An optional HTTP method to use to perform the health check, default is GET
	Method *string `pulumi:"method"`
	// The path to use to perform the HTTP health check
	Path string `pulumi:"path"`
	// The port to use to perform the health check
	Port int `pulumi:"port"`
}

// ServiceDefinitionHealthCheckHttpInput is an input type that accepts ServiceDefinitionHealthCheckHttpArgs and ServiceDefinitionHealthCheckHttpOutput values.
// You can construct a concrete instance of `ServiceDefinitionHealthCheckHttpInput` via:
//
//	ServiceDefinitionHealthCheckHttpArgs{...}
type ServiceDefinitionHealthCheckHttpInput interface {
	pulumi.Input

	ToServiceDefinitionHealthCheckHttpOutput() ServiceDefinitionHealthCheckHttpOutput
	ToServiceDefinitionHealthCheckHttpOutputWithContext(context.Context) ServiceDefinitionHealthCheckHttpOutput
}

type ServiceDefinitionHealthCheckHttpArgs struct {
	Headers ServiceDefinitionHealthCheckHttpHeaderArrayInput `pulumi:"headers"`
	// An optional HTTP method to use to perform the health check, default is GET
	Method pulumi.StringPtrInput `pulumi:"method"`
	// The path to use to perform the HTTP health check
	Path pulumi.StringInput `pulumi:"path"`
	// The port to use to perform the health check
	Port pulumi.IntInput `pulumi:"port"`
}

func (ServiceDefinitionHealthCheckHttpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDefinitionHealthCheckHttp)(nil)).Elem()
}

func (i ServiceDefinitionHealthCheckHttpArgs) ToServiceDefinitionHealthCheckHttpOutput() ServiceDefinitionHealthCheckHttpOutput {
	return i.ToServiceDefinitionHealthCheckHttpOutputWithContext(context.Background())
}

func (i ServiceDefinitionHealthCheckHttpArgs) ToServiceDefinitionHealthCheckHttpOutputWithContext(ctx context.Context) ServiceDefinitionHealthCheckHttpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDefinitionHealthCheckHttpOutput)
}

func (i ServiceDefinitionHealthCheckHttpArgs) ToServiceDefinitionHealthCheckHttpPtrOutput() ServiceDefinitionHealthCheckHttpPtrOutput {
	return i.ToServiceDefinitionHealthCheckHttpPtrOutputWithContext(context.Background())
}

func (i ServiceDefinitionHealthCheckHttpArgs) ToServiceDefinitionHealthCheckHttpPtrOutputWithContext(ctx context.Context) ServiceDefinitionHealthCheckHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDefinitionHealthCheckHttpOutput).ToServiceDefinitionHealthCheckHttpPtrOutputWithContext(ctx)
}

// ServiceDefinitionHealthCheckHttpPtrInput is an input type that accepts ServiceDefinitionHealthCheckHttpArgs, ServiceDefinitionHealthCheckHttpPtr and ServiceDefinitionHealthCheckHttpPtrOutput values.
// You can construct a concrete instance of `ServiceDefinitionHealthCheckHttpPtrInput` via:
//
//	        ServiceDefinitionHealthCheckHttpArgs{...}
//
//	or:
//
//	        nil
type ServiceDefinitionHealthCheckHttpPtrInput interface {
	pulumi.Input

	ToServiceDefinitionHealthCheckHttpPtrOutput() ServiceDefinitionHealthCheckHttpPtrOutput
	ToServiceDefinitionHealthCheckHttpPtrOutputWithContext(context.Context) ServiceDefinitionHealthCheckHttpPtrOutput
}

type serviceDefinitionHealthCheckHttpPtrType ServiceDefinitionHealthCheckHttpArgs

func ServiceDefinitionHealthCheckHttpPtr(v *ServiceDefinitionHealthCheckHttpArgs) ServiceDefinitionHealthCheckHttpPtrInput {
	return (*serviceDefinitionHealthCheckHttpPtrType)(v)
}

func (*serviceDefinitionHealthCheckHttpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDefinitionHealthCheckHttp)(nil)).Elem()
}

func (i *serviceDefinitionHealthCheckHttpPtrType) ToServiceDefinitionHealthCheckHttpPtrOutput() ServiceDefinitionHealthCheckHttpPtrOutput {
	return i.ToServiceDefinitionHealthCheckHttpPtrOutputWithContext(context.Background())
}

func (i *serviceDefinitionHealthCheckHttpPtrType) ToServiceDefinitionHealthCheckHttpPtrOutputWithContext(ctx context.Context) ServiceDefinitionHealthCheckHttpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDefinitionHealthCheckHttpPtrOutput)
}

type ServiceDefinitionHealthCheckHttpOutput struct{ *pulumi.OutputState }

func (ServiceDefinitionHealthCheckHttpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDefinitionHealthCheckHttp)(nil)).Elem()
}

func (o ServiceDefinitionHealthCheckHttpOutput) ToServiceDefinitionHealthCheckHttpOutput() ServiceDefinitionHealthCheckHttpOutput {
	return o
}

func (o ServiceDefinitionHealthCheckHttpOutput) ToServiceDefinitionHealthCheckHttpOutputWithContext(ctx context.Context) ServiceDefinitionHealthCheckHttpOutput {
	return o
}

func (o ServiceDefinitionHealthCheckHttpOutput) ToServiceDefinitionHealthCheckHttpPtrOutput() ServiceDefinitionHealthCheckHttpPtrOutput {
	return o.ToServiceDefinitionHealthCheckHttpPtrOutputWithContext(context.Background())
}

func (o ServiceDefinitionHealthCheckHttpOutput) ToServiceDefinitionHealthCheckHttpPtrOutputWithContext(ctx context.Context) ServiceDefinitionHealthCheckHttpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceDefinitionHealthCheckHttp) *ServiceDefinitionHealthCheckHttp {
		return &v
	}).(ServiceDefinitionHealthCheckHttpPtrOutput)
}

func (o ServiceDefinitionHealthCheckHttpOutput) Headers() ServiceDefinitionHealthCheckHttpHeaderArrayOutput {
	return o.ApplyT(func(v ServiceDefinitionHealthCheckHttp) []ServiceDefinitionHealthCheckHttpHeader { return v.Headers }).(ServiceDefinitionHealthCheckHttpHeaderArrayOutput)
}

// An optional HTTP method to use to perform the health check, default is GET
func (o ServiceDefinitionHealthCheckHttpOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceDefinitionHealthCheckHttp) *string { return v.Method }).(pulumi.StringPtrOutput)
}

// The path to use to perform the HTTP health check
func (o ServiceDefinitionHealthCheckHttpOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceDefinitionHealthCheckHttp) string { return v.Path }).(pulumi.StringOutput)
}

// The port to use to perform the health check
func (o ServiceDefinitionHealthCheckHttpOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ServiceDefinitionHealthCheckHttp) int { return v.Port }).(pulumi.IntOutput)
}

type ServiceDefinitionHealthCheckHttpPtrOutput struct{ *pulumi.OutputState }

func (ServiceDefinitionHealthCheckHttpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDefinitionHealthCheckHttp)(nil)).Elem()
}

func (o ServiceDefinitionHealthCheckHttpPtrOutput) ToServiceDefinitionHealthCheckHttpPtrOutput() ServiceDefinitionHealthCheckHttpPtrOutput {
	return o
}

func (o ServiceDefinitionHealthCheckHttpPtrOutput) ToServiceDefinitionHealthCheckHttpPtrOutputWithContext(ctx context.Context) ServiceDefinitionHealthCheckHttpPtrOutput {
	return o
}

func (o ServiceDefinitionHealthCheckHttpPtrOutput) Elem() ServiceDefinitionHealthCheckHttpOutput {
	return o.ApplyT(func(v *ServiceDefinitionHealthCheckHttp) ServiceDefinitionHealthCheckHttp {
		if v != nil {
			return *v
		}
		var ret ServiceDefinitionHealthCheckHttp
		return ret
	}).(ServiceDefinitionHealthCheckHttpOutput)
}

func (o ServiceDefinitionHealthCheckHttpPtrOutput) Headers() ServiceDefinitionHealthCheckHttpHeaderArrayOutput {
	return o.ApplyT(func(v *ServiceDefinitionHealthCheckHttp) []ServiceDefinitionHealthCheckHttpHeader {
		if v == nil {
			return nil
		}
		return v.Headers
	}).(ServiceDefinitionHealthCheckHttpHeaderArrayOutput)
}

// An optional HTTP method to use to perform the health check, default is GET
func (o ServiceDefinitionHealthCheckHttpPtrOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceDefinitionHealthCheckHttp) *string {
		if v == nil {
			return nil
		}
		return v.Method
	}).(pulumi.StringPtrOutput)
}

// The path to use to perform the HTTP health check
func (o ServiceDefinitionHealthCheckHttpPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceDefinitionHealthCheckHttp) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// The port to use to perform the health check
func (o ServiceDefinitionHealthCheckHttpPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceDefinitionHealthCheckHttp) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

type ServiceDefinitionHealthCheckHttpHeader struct {
	// The name of the header
	Key string `pulumi:"key"`
	// The value of the header
	Value *string `pulumi:"value"`
}

// ServiceDefinitionHealthCheckHttpHeaderInput is an input type that accepts ServiceDefinitionHealthCheckHttpHeaderArgs and ServiceDefinitionHealthCheckHttpHeaderOutput values.
// You can construct a concrete instance of `ServiceDefinitionHealthCheckHttpHeaderInput` via:
//
//	ServiceDefinitionHealthCheckHttpHeaderArgs{...}
type ServiceDefinitionHealthCheckHttpHeaderInput interface {
	pulumi.Input

	ToServiceDefinitionHealthCheckHttpHeaderOutput() ServiceDefinitionHealthCheckHttpHeaderOutput
	ToServiceDefinitionHealthCheckHttpHeaderOutputWithContext(context.Context) ServiceDefinitionHealthCheckHttpHeaderOutput
}

type ServiceDefinitionHealthCheckHttpHeaderArgs struct {
	// The name of the header
	Key pulumi.StringInput `pulumi:"key"`
	// The value of the header
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (ServiceDefinitionHealthCheckHttpHeaderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDefinitionHealthCheckHttpHeader)(nil)).Elem()
}

func (i ServiceDefinitionHealthCheckHttpHeaderArgs) ToServiceDefinitionHealthCheckHttpHeaderOutput() ServiceDefinitionHealthCheckHttpHeaderOutput {
	return i.ToServiceDefinitionHealthCheckHttpHeaderOutputWithContext(context.Background())
}

func (i ServiceDefinitionHealthCheckHttpHeaderArgs) ToServiceDefinitionHealthCheckHttpHeaderOutputWithContext(ctx context.Context) ServiceDefinitionHealthCheckHttpHeaderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDefinitionHealthCheckHttpHeaderOutput)
}

// ServiceDefinitionHealthCheckHttpHeaderArrayInput is an input type that accepts ServiceDefinitionHealthCheckHttpHeaderArray and ServiceDefinitionHealthCheckHttpHeaderArrayOutput values.
// You can construct a concrete instance of `ServiceDefinitionHealthCheckHttpHeaderArrayInput` via:
//
//	ServiceDefinitionHealthCheckHttpHeaderArray{ ServiceDefinitionHealthCheckHttpHeaderArgs{...} }
type ServiceDefinitionHealthCheckHttpHeaderArrayInput interface {
	pulumi.Input

	ToServiceDefinitionHealthCheckHttpHeaderArrayOutput() ServiceDefinitionHealthCheckHttpHeaderArrayOutput
	ToServiceDefinitionHealthCheckHttpHeaderArrayOutputWithContext(context.Context) ServiceDefinitionHealthCheckHttpHeaderArrayOutput
}

type ServiceDefinitionHealthCheckHttpHeaderArray []ServiceDefinitionHealthCheckHttpHeaderInput

func (ServiceDefinitionHealthCheckHttpHeaderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceDefinitionHealthCheckHttpHeader)(nil)).Elem()
}

func (i ServiceDefinitionHealthCheckHttpHeaderArray) ToServiceDefinitionHealthCheckHttpHeaderArrayOutput() ServiceDefinitionHealthCheckHttpHeaderArrayOutput {
	return i.ToServiceDefinitionHealthCheckHttpHeaderArrayOutputWithContext(context.Background())
}

func (i ServiceDefinitionHealthCheckHttpHeaderArray) ToServiceDefinitionHealthCheckHttpHeaderArrayOutputWithContext(ctx context.Context) ServiceDefinitionHealthCheckHttpHeaderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDefinitionHealthCheckHttpHeaderArrayOutput)
}

type ServiceDefinitionHealthCheckHttpHeaderOutput struct{ *pulumi.OutputState }

func (ServiceDefinitionHealthCheckHttpHeaderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDefinitionHealthCheckHttpHeader)(nil)).Elem()
}

func (o ServiceDefinitionHealthCheckHttpHeaderOutput) ToServiceDefinitionHealthCheckHttpHeaderOutput() ServiceDefinitionHealthCheckHttpHeaderOutput {
	return o
}

func (o ServiceDefinitionHealthCheckHttpHeaderOutput) ToServiceDefinitionHealthCheckHttpHeaderOutputWithContext(ctx context.Context) ServiceDefinitionHealthCheckHttpHeaderOutput {
	return o
}

// The name of the header
func (o ServiceDefinitionHealthCheckHttpHeaderOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceDefinitionHealthCheckHttpHeader) string { return v.Key }).(pulumi.StringOutput)
}

// The value of the header
func (o ServiceDefinitionHealthCheckHttpHeaderOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceDefinitionHealthCheckHttpHeader) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type ServiceDefinitionHealthCheckHttpHeaderArrayOutput struct{ *pulumi.OutputState }

func (ServiceDefinitionHealthCheckHttpHeaderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceDefinitionHealthCheckHttpHeader)(nil)).Elem()
}

func (o ServiceDefinitionHealthCheckHttpHeaderArrayOutput) ToServiceDefinitionHealthCheckHttpHeaderArrayOutput() ServiceDefinitionHealthCheckHttpHeaderArrayOutput {
	return o
}

func (o ServiceDefinitionHealthCheckHttpHeaderArrayOutput) ToServiceDefinitionHealthCheckHttpHeaderArrayOutputWithContext(ctx context.Context) ServiceDefinitionHealthCheckHttpHeaderArrayOutput {
	return o
}

func (o ServiceDefinitionHealthCheckHttpHeaderArrayOutput) Index(i pulumi.IntInput) ServiceDefinitionHealthCheckHttpHeaderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceDefinitionHealthCheckHttpHeader {
		return vs[0].([]ServiceDefinitionHealthCheckHttpHeader)[vs[1].(int)]
	}).(ServiceDefinitionHealthCheckHttpHeaderOutput)
}

type ServiceDefinitionHealthCheckTcp struct {
	// The port to use to perform the health check
	Port int `pulumi:"port"`
}

// ServiceDefinitionHealthCheckTcpInput is an input type that accepts ServiceDefinitionHealthCheckTcpArgs and ServiceDefinitionHealthCheckTcpOutput values.
// You can construct a concrete instance of `ServiceDefinitionHealthCheckTcpInput` via:
//
//	ServiceDefinitionHealthCheckTcpArgs{...}
type ServiceDefinitionHealthCheckTcpInput interface {
	pulumi.Input

	ToServiceDefinitionHealthCheckTcpOutput() ServiceDefinitionHealthCheckTcpOutput
	ToServiceDefinitionHealthCheckTcpOutputWithContext(context.Context) ServiceDefinitionHealthCheckTcpOutput
}

type ServiceDefinitionHealthCheckTcpArgs struct {
	// The port to use to perform the health check
	Port pulumi.IntInput `pulumi:"port"`
}

func (ServiceDefinitionHealthCheckTcpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDefinitionHealthCheckTcp)(nil)).Elem()
}

func (i ServiceDefinitionHealthCheckTcpArgs) ToServiceDefinitionHealthCheckTcpOutput() ServiceDefinitionHealthCheckTcpOutput {
	return i.ToServiceDefinitionHealthCheckTcpOutputWithContext(context.Background())
}

func (i ServiceDefinitionHealthCheckTcpArgs) ToServiceDefinitionHealthCheckTcpOutputWithContext(ctx context.Context) ServiceDefinitionHealthCheckTcpOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDefinitionHealthCheckTcpOutput)
}

func (i ServiceDefinitionHealthCheckTcpArgs) ToServiceDefinitionHealthCheckTcpPtrOutput() ServiceDefinitionHealthCheckTcpPtrOutput {
	return i.ToServiceDefinitionHealthCheckTcpPtrOutputWithContext(context.Background())
}

func (i ServiceDefinitionHealthCheckTcpArgs) ToServiceDefinitionHealthCheckTcpPtrOutputWithContext(ctx context.Context) ServiceDefinitionHealthCheckTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDefinitionHealthCheckTcpOutput).ToServiceDefinitionHealthCheckTcpPtrOutputWithContext(ctx)
}

// ServiceDefinitionHealthCheckTcpPtrInput is an input type that accepts ServiceDefinitionHealthCheckTcpArgs, ServiceDefinitionHealthCheckTcpPtr and ServiceDefinitionHealthCheckTcpPtrOutput values.
// You can construct a concrete instance of `ServiceDefinitionHealthCheckTcpPtrInput` via:
//
//	        ServiceDefinitionHealthCheckTcpArgs{...}
//
//	or:
//
//	        nil
type ServiceDefinitionHealthCheckTcpPtrInput interface {
	pulumi.Input

	ToServiceDefinitionHealthCheckTcpPtrOutput() ServiceDefinitionHealthCheckTcpPtrOutput
	ToServiceDefinitionHealthCheckTcpPtrOutputWithContext(context.Context) ServiceDefinitionHealthCheckTcpPtrOutput
}

type serviceDefinitionHealthCheckTcpPtrType ServiceDefinitionHealthCheckTcpArgs

func ServiceDefinitionHealthCheckTcpPtr(v *ServiceDefinitionHealthCheckTcpArgs) ServiceDefinitionHealthCheckTcpPtrInput {
	return (*serviceDefinitionHealthCheckTcpPtrType)(v)
}

func (*serviceDefinitionHealthCheckTcpPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDefinitionHealthCheckTcp)(nil)).Elem()
}

func (i *serviceDefinitionHealthCheckTcpPtrType) ToServiceDefinitionHealthCheckTcpPtrOutput() ServiceDefinitionHealthCheckTcpPtrOutput {
	return i.ToServiceDefinitionHealthCheckTcpPtrOutputWithContext(context.Background())
}

func (i *serviceDefinitionHealthCheckTcpPtrType) ToServiceDefinitionHealthCheckTcpPtrOutputWithContext(ctx context.Context) ServiceDefinitionHealthCheckTcpPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDefinitionHealthCheckTcpPtrOutput)
}

type ServiceDefinitionHealthCheckTcpOutput struct{ *pulumi.OutputState }

func (ServiceDefinitionHealthCheckTcpOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDefinitionHealthCheckTcp)(nil)).Elem()
}

func (o ServiceDefinitionHealthCheckTcpOutput) ToServiceDefinitionHealthCheckTcpOutput() ServiceDefinitionHealthCheckTcpOutput {
	return o
}

func (o ServiceDefinitionHealthCheckTcpOutput) ToServiceDefinitionHealthCheckTcpOutputWithContext(ctx context.Context) ServiceDefinitionHealthCheckTcpOutput {
	return o
}

func (o ServiceDefinitionHealthCheckTcpOutput) ToServiceDefinitionHealthCheckTcpPtrOutput() ServiceDefinitionHealthCheckTcpPtrOutput {
	return o.ToServiceDefinitionHealthCheckTcpPtrOutputWithContext(context.Background())
}

func (o ServiceDefinitionHealthCheckTcpOutput) ToServiceDefinitionHealthCheckTcpPtrOutputWithContext(ctx context.Context) ServiceDefinitionHealthCheckTcpPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceDefinitionHealthCheckTcp) *ServiceDefinitionHealthCheckTcp {
		return &v
	}).(ServiceDefinitionHealthCheckTcpPtrOutput)
}

// The port to use to perform the health check
func (o ServiceDefinitionHealthCheckTcpOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ServiceDefinitionHealthCheckTcp) int { return v.Port }).(pulumi.IntOutput)
}

type ServiceDefinitionHealthCheckTcpPtrOutput struct{ *pulumi.OutputState }

func (ServiceDefinitionHealthCheckTcpPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceDefinitionHealthCheckTcp)(nil)).Elem()
}

func (o ServiceDefinitionHealthCheckTcpPtrOutput) ToServiceDefinitionHealthCheckTcpPtrOutput() ServiceDefinitionHealthCheckTcpPtrOutput {
	return o
}

func (o ServiceDefinitionHealthCheckTcpPtrOutput) ToServiceDefinitionHealthCheckTcpPtrOutputWithContext(ctx context.Context) ServiceDefinitionHealthCheckTcpPtrOutput {
	return o
}

func (o ServiceDefinitionHealthCheckTcpPtrOutput) Elem() ServiceDefinitionHealthCheckTcpOutput {
	return o.ApplyT(func(v *ServiceDefinitionHealthCheckTcp) ServiceDefinitionHealthCheckTcp {
		if v != nil {
			return *v
		}
		var ret ServiceDefinitionHealthCheckTcp
		return ret
	}).(ServiceDefinitionHealthCheckTcpOutput)
}

// The port to use to perform the health check
func (o ServiceDefinitionHealthCheckTcpPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceDefinitionHealthCheckTcp) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

type ServiceDefinitionInstanceType struct {
	// The regions to use the instance type
	Scopes []string `pulumi:"scopes"`
	// The instance type to use to support your service
	Type string `pulumi:"type"`
}

// ServiceDefinitionInstanceTypeInput is an input type that accepts ServiceDefinitionInstanceTypeArgs and ServiceDefinitionInstanceTypeOutput values.
// You can construct a concrete instance of `ServiceDefinitionInstanceTypeInput` via:
//
//	ServiceDefinitionInstanceTypeArgs{...}
type ServiceDefinitionInstanceTypeInput interface {
	pulumi.Input

	ToServiceDefinitionInstanceTypeOutput() ServiceDefinitionInstanceTypeOutput
	ToServiceDefinitionInstanceTypeOutputWithContext(context.Context) ServiceDefinitionInstanceTypeOutput
}

type ServiceDefinitionInstanceTypeArgs struct {
	// The regions to use the instance type
	Scopes pulumi.StringArrayInput `pulumi:"scopes"`
	// The instance type to use to support your service
	Type pulumi.StringInput `pulumi:"type"`
}

func (ServiceDefinitionInstanceTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDefinitionInstanceType)(nil)).Elem()
}

func (i ServiceDefinitionInstanceTypeArgs) ToServiceDefinitionInstanceTypeOutput() ServiceDefinitionInstanceTypeOutput {
	return i.ToServiceDefinitionInstanceTypeOutputWithContext(context.Background())
}

func (i ServiceDefinitionInstanceTypeArgs) ToServiceDefinitionInstanceTypeOutputWithContext(ctx context.Context) ServiceDefinitionInstanceTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDefinitionInstanceTypeOutput)
}

// ServiceDefinitionInstanceTypeArrayInput is an input type that accepts ServiceDefinitionInstanceTypeArray and ServiceDefinitionInstanceTypeArrayOutput values.
// You can construct a concrete instance of `ServiceDefinitionInstanceTypeArrayInput` via:
//
//	ServiceDefinitionInstanceTypeArray{ ServiceDefinitionInstanceTypeArgs{...} }
type ServiceDefinitionInstanceTypeArrayInput interface {
	pulumi.Input

	ToServiceDefinitionInstanceTypeArrayOutput() ServiceDefinitionInstanceTypeArrayOutput
	ToServiceDefinitionInstanceTypeArrayOutputWithContext(context.Context) ServiceDefinitionInstanceTypeArrayOutput
}

type ServiceDefinitionInstanceTypeArray []ServiceDefinitionInstanceTypeInput

func (ServiceDefinitionInstanceTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceDefinitionInstanceType)(nil)).Elem()
}

func (i ServiceDefinitionInstanceTypeArray) ToServiceDefinitionInstanceTypeArrayOutput() ServiceDefinitionInstanceTypeArrayOutput {
	return i.ToServiceDefinitionInstanceTypeArrayOutputWithContext(context.Background())
}

func (i ServiceDefinitionInstanceTypeArray) ToServiceDefinitionInstanceTypeArrayOutputWithContext(ctx context.Context) ServiceDefinitionInstanceTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDefinitionInstanceTypeArrayOutput)
}

type ServiceDefinitionInstanceTypeOutput struct{ *pulumi.OutputState }

func (ServiceDefinitionInstanceTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDefinitionInstanceType)(nil)).Elem()
}

func (o ServiceDefinitionInstanceTypeOutput) ToServiceDefinitionInstanceTypeOutput() ServiceDefinitionInstanceTypeOutput {
	return o
}

func (o ServiceDefinitionInstanceTypeOutput) ToServiceDefinitionInstanceTypeOutputWithContext(ctx context.Context) ServiceDefinitionInstanceTypeOutput {
	return o
}

// The regions to use the instance type
func (o ServiceDefinitionInstanceTypeOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceDefinitionInstanceType) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

// The instance type to use to support your service
func (o ServiceDefinitionInstanceTypeOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceDefinitionInstanceType) string { return v.Type }).(pulumi.StringOutput)
}

type ServiceDefinitionInstanceTypeArrayOutput struct{ *pulumi.OutputState }

func (ServiceDefinitionInstanceTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceDefinitionInstanceType)(nil)).Elem()
}

func (o ServiceDefinitionInstanceTypeArrayOutput) ToServiceDefinitionInstanceTypeArrayOutput() ServiceDefinitionInstanceTypeArrayOutput {
	return o
}

func (o ServiceDefinitionInstanceTypeArrayOutput) ToServiceDefinitionInstanceTypeArrayOutputWithContext(ctx context.Context) ServiceDefinitionInstanceTypeArrayOutput {
	return o
}

func (o ServiceDefinitionInstanceTypeArrayOutput) Index(i pulumi.IntInput) ServiceDefinitionInstanceTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceDefinitionInstanceType {
		return vs[0].([]ServiceDefinitionInstanceType)[vs[1].(int)]
	}).(ServiceDefinitionInstanceTypeOutput)
}

type ServiceDefinitionPort struct {
	// The internal port on which this service's run command will listen
	Port int `pulumi:"port"`
	// The protocol used by your service
	Protocol string `pulumi:"protocol"`
}

// ServiceDefinitionPortInput is an input type that accepts ServiceDefinitionPortArgs and ServiceDefinitionPortOutput values.
// You can construct a concrete instance of `ServiceDefinitionPortInput` via:
//
//	ServiceDefinitionPortArgs{...}
type ServiceDefinitionPortInput interface {
	pulumi.Input

	ToServiceDefinitionPortOutput() ServiceDefinitionPortOutput
	ToServiceDefinitionPortOutputWithContext(context.Context) ServiceDefinitionPortOutput
}

type ServiceDefinitionPortArgs struct {
	// The internal port on which this service's run command will listen
	Port pulumi.IntInput `pulumi:"port"`
	// The protocol used by your service
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (ServiceDefinitionPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDefinitionPort)(nil)).Elem()
}

func (i ServiceDefinitionPortArgs) ToServiceDefinitionPortOutput() ServiceDefinitionPortOutput {
	return i.ToServiceDefinitionPortOutputWithContext(context.Background())
}

func (i ServiceDefinitionPortArgs) ToServiceDefinitionPortOutputWithContext(ctx context.Context) ServiceDefinitionPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDefinitionPortOutput)
}

// ServiceDefinitionPortArrayInput is an input type that accepts ServiceDefinitionPortArray and ServiceDefinitionPortArrayOutput values.
// You can construct a concrete instance of `ServiceDefinitionPortArrayInput` via:
//
//	ServiceDefinitionPortArray{ ServiceDefinitionPortArgs{...} }
type ServiceDefinitionPortArrayInput interface {
	pulumi.Input

	ToServiceDefinitionPortArrayOutput() ServiceDefinitionPortArrayOutput
	ToServiceDefinitionPortArrayOutputWithContext(context.Context) ServiceDefinitionPortArrayOutput
}

type ServiceDefinitionPortArray []ServiceDefinitionPortInput

func (ServiceDefinitionPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceDefinitionPort)(nil)).Elem()
}

func (i ServiceDefinitionPortArray) ToServiceDefinitionPortArrayOutput() ServiceDefinitionPortArrayOutput {
	return i.ToServiceDefinitionPortArrayOutputWithContext(context.Background())
}

func (i ServiceDefinitionPortArray) ToServiceDefinitionPortArrayOutputWithContext(ctx context.Context) ServiceDefinitionPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDefinitionPortArrayOutput)
}

type ServiceDefinitionPortOutput struct{ *pulumi.OutputState }

func (ServiceDefinitionPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDefinitionPort)(nil)).Elem()
}

func (o ServiceDefinitionPortOutput) ToServiceDefinitionPortOutput() ServiceDefinitionPortOutput {
	return o
}

func (o ServiceDefinitionPortOutput) ToServiceDefinitionPortOutputWithContext(ctx context.Context) ServiceDefinitionPortOutput {
	return o
}

// The internal port on which this service's run command will listen
func (o ServiceDefinitionPortOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ServiceDefinitionPort) int { return v.Port }).(pulumi.IntOutput)
}

// The protocol used by your service
func (o ServiceDefinitionPortOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceDefinitionPort) string { return v.Protocol }).(pulumi.StringOutput)
}

type ServiceDefinitionPortArrayOutput struct{ *pulumi.OutputState }

func (ServiceDefinitionPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceDefinitionPort)(nil)).Elem()
}

func (o ServiceDefinitionPortArrayOutput) ToServiceDefinitionPortArrayOutput() ServiceDefinitionPortArrayOutput {
	return o
}

func (o ServiceDefinitionPortArrayOutput) ToServiceDefinitionPortArrayOutputWithContext(ctx context.Context) ServiceDefinitionPortArrayOutput {
	return o
}

func (o ServiceDefinitionPortArrayOutput) Index(i pulumi.IntInput) ServiceDefinitionPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceDefinitionPort {
		return vs[0].([]ServiceDefinitionPort)[vs[1].(int)]
	}).(ServiceDefinitionPortOutput)
}

type ServiceDefinitionRoute struct {
	// Path specifies a route by HTTP path prefix. Paths must start with / and must be unique within the app
	Path string `pulumi:"path"`
	// The internal port on which this service's run command will listen
	Port int `pulumi:"port"`
}

// ServiceDefinitionRouteInput is an input type that accepts ServiceDefinitionRouteArgs and ServiceDefinitionRouteOutput values.
// You can construct a concrete instance of `ServiceDefinitionRouteInput` via:
//
//	ServiceDefinitionRouteArgs{...}
type ServiceDefinitionRouteInput interface {
	pulumi.Input

	ToServiceDefinitionRouteOutput() ServiceDefinitionRouteOutput
	ToServiceDefinitionRouteOutputWithContext(context.Context) ServiceDefinitionRouteOutput
}

type ServiceDefinitionRouteArgs struct {
	// Path specifies a route by HTTP path prefix. Paths must start with / and must be unique within the app
	Path pulumi.StringInput `pulumi:"path"`
	// The internal port on which this service's run command will listen
	Port pulumi.IntInput `pulumi:"port"`
}

func (ServiceDefinitionRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDefinitionRoute)(nil)).Elem()
}

func (i ServiceDefinitionRouteArgs) ToServiceDefinitionRouteOutput() ServiceDefinitionRouteOutput {
	return i.ToServiceDefinitionRouteOutputWithContext(context.Background())
}

func (i ServiceDefinitionRouteArgs) ToServiceDefinitionRouteOutputWithContext(ctx context.Context) ServiceDefinitionRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDefinitionRouteOutput)
}

// ServiceDefinitionRouteArrayInput is an input type that accepts ServiceDefinitionRouteArray and ServiceDefinitionRouteArrayOutput values.
// You can construct a concrete instance of `ServiceDefinitionRouteArrayInput` via:
//
//	ServiceDefinitionRouteArray{ ServiceDefinitionRouteArgs{...} }
type ServiceDefinitionRouteArrayInput interface {
	pulumi.Input

	ToServiceDefinitionRouteArrayOutput() ServiceDefinitionRouteArrayOutput
	ToServiceDefinitionRouteArrayOutputWithContext(context.Context) ServiceDefinitionRouteArrayOutput
}

type ServiceDefinitionRouteArray []ServiceDefinitionRouteInput

func (ServiceDefinitionRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceDefinitionRoute)(nil)).Elem()
}

func (i ServiceDefinitionRouteArray) ToServiceDefinitionRouteArrayOutput() ServiceDefinitionRouteArrayOutput {
	return i.ToServiceDefinitionRouteArrayOutputWithContext(context.Background())
}

func (i ServiceDefinitionRouteArray) ToServiceDefinitionRouteArrayOutputWithContext(ctx context.Context) ServiceDefinitionRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDefinitionRouteArrayOutput)
}

type ServiceDefinitionRouteOutput struct{ *pulumi.OutputState }

func (ServiceDefinitionRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDefinitionRoute)(nil)).Elem()
}

func (o ServiceDefinitionRouteOutput) ToServiceDefinitionRouteOutput() ServiceDefinitionRouteOutput {
	return o
}

func (o ServiceDefinitionRouteOutput) ToServiceDefinitionRouteOutputWithContext(ctx context.Context) ServiceDefinitionRouteOutput {
	return o
}

// Path specifies a route by HTTP path prefix. Paths must start with / and must be unique within the app
func (o ServiceDefinitionRouteOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceDefinitionRoute) string { return v.Path }).(pulumi.StringOutput)
}

// The internal port on which this service's run command will listen
func (o ServiceDefinitionRouteOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v ServiceDefinitionRoute) int { return v.Port }).(pulumi.IntOutput)
}

type ServiceDefinitionRouteArrayOutput struct{ *pulumi.OutputState }

func (ServiceDefinitionRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceDefinitionRoute)(nil)).Elem()
}

func (o ServiceDefinitionRouteArrayOutput) ToServiceDefinitionRouteArrayOutput() ServiceDefinitionRouteArrayOutput {
	return o
}

func (o ServiceDefinitionRouteArrayOutput) ToServiceDefinitionRouteArrayOutputWithContext(ctx context.Context) ServiceDefinitionRouteArrayOutput {
	return o
}

func (o ServiceDefinitionRouteArrayOutput) Index(i pulumi.IntInput) ServiceDefinitionRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceDefinitionRoute {
		return vs[0].([]ServiceDefinitionRoute)[vs[1].(int)]
	}).(ServiceDefinitionRouteOutput)
}

type ServiceDefinitionScaling struct {
	// The maximum number of instance to use to support your service
	Max *int `pulumi:"max"`
	// The minimal number of instances to use to support your service
	Min *int `pulumi:"min"`
	// The regions to apply the scaling configuration
	Scopes  []string                         `pulumi:"scopes"`
	Targets []ServiceDefinitionScalingTarget `pulumi:"targets"`
}

// ServiceDefinitionScalingInput is an input type that accepts ServiceDefinitionScalingArgs and ServiceDefinitionScalingOutput values.
// You can construct a concrete instance of `ServiceDefinitionScalingInput` via:
//
//	ServiceDefinitionScalingArgs{...}
type ServiceDefinitionScalingInput interface {
	pulumi.Input

	ToServiceDefinitionScalingOutput() ServiceDefinitionScalingOutput
	ToServiceDefinitionScalingOutputWithContext(context.Context) ServiceDefinitionScalingOutput
}

type ServiceDefinitionScalingArgs struct {
	// The maximum number of instance to use to support your service
	Max pulumi.IntPtrInput `pulumi:"max"`
	// The minimal number of instances to use to support your service
	Min pulumi.IntPtrInput `pulumi:"min"`
	// The regions to apply the scaling configuration
	Scopes  pulumi.StringArrayInput                  `pulumi:"scopes"`
	Targets ServiceDefinitionScalingTargetArrayInput `pulumi:"targets"`
}

func (ServiceDefinitionScalingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDefinitionScaling)(nil)).Elem()
}

func (i ServiceDefinitionScalingArgs) ToServiceDefinitionScalingOutput() ServiceDefinitionScalingOutput {
	return i.ToServiceDefinitionScalingOutputWithContext(context.Background())
}

func (i ServiceDefinitionScalingArgs) ToServiceDefinitionScalingOutputWithContext(ctx context.Context) ServiceDefinitionScalingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDefinitionScalingOutput)
}

// ServiceDefinitionScalingArrayInput is an input type that accepts ServiceDefinitionScalingArray and ServiceDefinitionScalingArrayOutput values.
// You can construct a concrete instance of `ServiceDefinitionScalingArrayInput` via:
//
//	ServiceDefinitionScalingArray{ ServiceDefinitionScalingArgs{...} }
type ServiceDefinitionScalingArrayInput interface {
	pulumi.Input

	ToServiceDefinitionScalingArrayOutput() ServiceDefinitionScalingArrayOutput
	ToServiceDefinitionScalingArrayOutputWithContext(context.Context) ServiceDefinitionScalingArrayOutput
}

type ServiceDefinitionScalingArray []ServiceDefinitionScalingInput

func (ServiceDefinitionScalingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceDefinitionScaling)(nil)).Elem()
}

func (i ServiceDefinitionScalingArray) ToServiceDefinitionScalingArrayOutput() ServiceDefinitionScalingArrayOutput {
	return i.ToServiceDefinitionScalingArrayOutputWithContext(context.Background())
}

func (i ServiceDefinitionScalingArray) ToServiceDefinitionScalingArrayOutputWithContext(ctx context.Context) ServiceDefinitionScalingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDefinitionScalingArrayOutput)
}

type ServiceDefinitionScalingOutput struct{ *pulumi.OutputState }

func (ServiceDefinitionScalingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDefinitionScaling)(nil)).Elem()
}

func (o ServiceDefinitionScalingOutput) ToServiceDefinitionScalingOutput() ServiceDefinitionScalingOutput {
	return o
}

func (o ServiceDefinitionScalingOutput) ToServiceDefinitionScalingOutputWithContext(ctx context.Context) ServiceDefinitionScalingOutput {
	return o
}

// The maximum number of instance to use to support your service
func (o ServiceDefinitionScalingOutput) Max() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceDefinitionScaling) *int { return v.Max }).(pulumi.IntPtrOutput)
}

// The minimal number of instances to use to support your service
func (o ServiceDefinitionScalingOutput) Min() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceDefinitionScaling) *int { return v.Min }).(pulumi.IntPtrOutput)
}

// The regions to apply the scaling configuration
func (o ServiceDefinitionScalingOutput) Scopes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ServiceDefinitionScaling) []string { return v.Scopes }).(pulumi.StringArrayOutput)
}

func (o ServiceDefinitionScalingOutput) Targets() ServiceDefinitionScalingTargetArrayOutput {
	return o.ApplyT(func(v ServiceDefinitionScaling) []ServiceDefinitionScalingTarget { return v.Targets }).(ServiceDefinitionScalingTargetArrayOutput)
}

type ServiceDefinitionScalingArrayOutput struct{ *pulumi.OutputState }

func (ServiceDefinitionScalingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceDefinitionScaling)(nil)).Elem()
}

func (o ServiceDefinitionScalingArrayOutput) ToServiceDefinitionScalingArrayOutput() ServiceDefinitionScalingArrayOutput {
	return o
}

func (o ServiceDefinitionScalingArrayOutput) ToServiceDefinitionScalingArrayOutputWithContext(ctx context.Context) ServiceDefinitionScalingArrayOutput {
	return o
}

func (o ServiceDefinitionScalingArrayOutput) Index(i pulumi.IntInput) ServiceDefinitionScalingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceDefinitionScaling {
		return vs[0].([]ServiceDefinitionScaling)[vs[1].(int)]
	}).(ServiceDefinitionScalingOutput)
}

type ServiceDefinitionScalingTarget struct {
	// The CPU usage (expressed as a percentage) across all Instances of your Service within a region
	AverageCpus []ServiceDefinitionScalingTargetAverageCpus `pulumi:"averageCpus"`
	// The memory usage (expressed as a percentage) across all Instances of your Service within a region
	AverageMems []ServiceDefinitionScalingTargetAverageMem `pulumi:"averageMems"`
	// The number of concurrent requests per second across all Instances of your Service within a region
	RequestsPerSeconds []ServiceDefinitionScalingTargetRequestsPerSecond `pulumi:"requestsPerSeconds"`
}

// ServiceDefinitionScalingTargetInput is an input type that accepts ServiceDefinitionScalingTargetArgs and ServiceDefinitionScalingTargetOutput values.
// You can construct a concrete instance of `ServiceDefinitionScalingTargetInput` via:
//
//	ServiceDefinitionScalingTargetArgs{...}
type ServiceDefinitionScalingTargetInput interface {
	pulumi.Input

	ToServiceDefinitionScalingTargetOutput() ServiceDefinitionScalingTargetOutput
	ToServiceDefinitionScalingTargetOutputWithContext(context.Context) ServiceDefinitionScalingTargetOutput
}

type ServiceDefinitionScalingTargetArgs struct {
	// The CPU usage (expressed as a percentage) across all Instances of your Service within a region
	AverageCpus ServiceDefinitionScalingTargetAverageCpusArrayInput `pulumi:"averageCpus"`
	// The memory usage (expressed as a percentage) across all Instances of your Service within a region
	AverageMems ServiceDefinitionScalingTargetAverageMemArrayInput `pulumi:"averageMems"`
	// The number of concurrent requests per second across all Instances of your Service within a region
	RequestsPerSeconds ServiceDefinitionScalingTargetRequestsPerSecondArrayInput `pulumi:"requestsPerSeconds"`
}

func (ServiceDefinitionScalingTargetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDefinitionScalingTarget)(nil)).Elem()
}

func (i ServiceDefinitionScalingTargetArgs) ToServiceDefinitionScalingTargetOutput() ServiceDefinitionScalingTargetOutput {
	return i.ToServiceDefinitionScalingTargetOutputWithContext(context.Background())
}

func (i ServiceDefinitionScalingTargetArgs) ToServiceDefinitionScalingTargetOutputWithContext(ctx context.Context) ServiceDefinitionScalingTargetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDefinitionScalingTargetOutput)
}

// ServiceDefinitionScalingTargetArrayInput is an input type that accepts ServiceDefinitionScalingTargetArray and ServiceDefinitionScalingTargetArrayOutput values.
// You can construct a concrete instance of `ServiceDefinitionScalingTargetArrayInput` via:
//
//	ServiceDefinitionScalingTargetArray{ ServiceDefinitionScalingTargetArgs{...} }
type ServiceDefinitionScalingTargetArrayInput interface {
	pulumi.Input

	ToServiceDefinitionScalingTargetArrayOutput() ServiceDefinitionScalingTargetArrayOutput
	ToServiceDefinitionScalingTargetArrayOutputWithContext(context.Context) ServiceDefinitionScalingTargetArrayOutput
}

type ServiceDefinitionScalingTargetArray []ServiceDefinitionScalingTargetInput

func (ServiceDefinitionScalingTargetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceDefinitionScalingTarget)(nil)).Elem()
}

func (i ServiceDefinitionScalingTargetArray) ToServiceDefinitionScalingTargetArrayOutput() ServiceDefinitionScalingTargetArrayOutput {
	return i.ToServiceDefinitionScalingTargetArrayOutputWithContext(context.Background())
}

func (i ServiceDefinitionScalingTargetArray) ToServiceDefinitionScalingTargetArrayOutputWithContext(ctx context.Context) ServiceDefinitionScalingTargetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDefinitionScalingTargetArrayOutput)
}

type ServiceDefinitionScalingTargetOutput struct{ *pulumi.OutputState }

func (ServiceDefinitionScalingTargetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDefinitionScalingTarget)(nil)).Elem()
}

func (o ServiceDefinitionScalingTargetOutput) ToServiceDefinitionScalingTargetOutput() ServiceDefinitionScalingTargetOutput {
	return o
}

func (o ServiceDefinitionScalingTargetOutput) ToServiceDefinitionScalingTargetOutputWithContext(ctx context.Context) ServiceDefinitionScalingTargetOutput {
	return o
}

// The CPU usage (expressed as a percentage) across all Instances of your Service within a region
func (o ServiceDefinitionScalingTargetOutput) AverageCpus() ServiceDefinitionScalingTargetAverageCpusArrayOutput {
	return o.ApplyT(func(v ServiceDefinitionScalingTarget) []ServiceDefinitionScalingTargetAverageCpus {
		return v.AverageCpus
	}).(ServiceDefinitionScalingTargetAverageCpusArrayOutput)
}

// The memory usage (expressed as a percentage) across all Instances of your Service within a region
func (o ServiceDefinitionScalingTargetOutput) AverageMems() ServiceDefinitionScalingTargetAverageMemArrayOutput {
	return o.ApplyT(func(v ServiceDefinitionScalingTarget) []ServiceDefinitionScalingTargetAverageMem {
		return v.AverageMems
	}).(ServiceDefinitionScalingTargetAverageMemArrayOutput)
}

// The number of concurrent requests per second across all Instances of your Service within a region
func (o ServiceDefinitionScalingTargetOutput) RequestsPerSeconds() ServiceDefinitionScalingTargetRequestsPerSecondArrayOutput {
	return o.ApplyT(func(v ServiceDefinitionScalingTarget) []ServiceDefinitionScalingTargetRequestsPerSecond {
		return v.RequestsPerSeconds
	}).(ServiceDefinitionScalingTargetRequestsPerSecondArrayOutput)
}

type ServiceDefinitionScalingTargetArrayOutput struct{ *pulumi.OutputState }

func (ServiceDefinitionScalingTargetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceDefinitionScalingTarget)(nil)).Elem()
}

func (o ServiceDefinitionScalingTargetArrayOutput) ToServiceDefinitionScalingTargetArrayOutput() ServiceDefinitionScalingTargetArrayOutput {
	return o
}

func (o ServiceDefinitionScalingTargetArrayOutput) ToServiceDefinitionScalingTargetArrayOutputWithContext(ctx context.Context) ServiceDefinitionScalingTargetArrayOutput {
	return o
}

func (o ServiceDefinitionScalingTargetArrayOutput) Index(i pulumi.IntInput) ServiceDefinitionScalingTargetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceDefinitionScalingTarget {
		return vs[0].([]ServiceDefinitionScalingTarget)[vs[1].(int)]
	}).(ServiceDefinitionScalingTargetOutput)
}

type ServiceDefinitionScalingTargetAverageCpus struct {
	// The target value of the autoscaling target
	Value int `pulumi:"value"`
}

// ServiceDefinitionScalingTargetAverageCpusInput is an input type that accepts ServiceDefinitionScalingTargetAverageCpusArgs and ServiceDefinitionScalingTargetAverageCpusOutput values.
// You can construct a concrete instance of `ServiceDefinitionScalingTargetAverageCpusInput` via:
//
//	ServiceDefinitionScalingTargetAverageCpusArgs{...}
type ServiceDefinitionScalingTargetAverageCpusInput interface {
	pulumi.Input

	ToServiceDefinitionScalingTargetAverageCpusOutput() ServiceDefinitionScalingTargetAverageCpusOutput
	ToServiceDefinitionScalingTargetAverageCpusOutputWithContext(context.Context) ServiceDefinitionScalingTargetAverageCpusOutput
}

type ServiceDefinitionScalingTargetAverageCpusArgs struct {
	// The target value of the autoscaling target
	Value pulumi.IntInput `pulumi:"value"`
}

func (ServiceDefinitionScalingTargetAverageCpusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDefinitionScalingTargetAverageCpus)(nil)).Elem()
}

func (i ServiceDefinitionScalingTargetAverageCpusArgs) ToServiceDefinitionScalingTargetAverageCpusOutput() ServiceDefinitionScalingTargetAverageCpusOutput {
	return i.ToServiceDefinitionScalingTargetAverageCpusOutputWithContext(context.Background())
}

func (i ServiceDefinitionScalingTargetAverageCpusArgs) ToServiceDefinitionScalingTargetAverageCpusOutputWithContext(ctx context.Context) ServiceDefinitionScalingTargetAverageCpusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDefinitionScalingTargetAverageCpusOutput)
}

// ServiceDefinitionScalingTargetAverageCpusArrayInput is an input type that accepts ServiceDefinitionScalingTargetAverageCpusArray and ServiceDefinitionScalingTargetAverageCpusArrayOutput values.
// You can construct a concrete instance of `ServiceDefinitionScalingTargetAverageCpusArrayInput` via:
//
//	ServiceDefinitionScalingTargetAverageCpusArray{ ServiceDefinitionScalingTargetAverageCpusArgs{...} }
type ServiceDefinitionScalingTargetAverageCpusArrayInput interface {
	pulumi.Input

	ToServiceDefinitionScalingTargetAverageCpusArrayOutput() ServiceDefinitionScalingTargetAverageCpusArrayOutput
	ToServiceDefinitionScalingTargetAverageCpusArrayOutputWithContext(context.Context) ServiceDefinitionScalingTargetAverageCpusArrayOutput
}

type ServiceDefinitionScalingTargetAverageCpusArray []ServiceDefinitionScalingTargetAverageCpusInput

func (ServiceDefinitionScalingTargetAverageCpusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceDefinitionScalingTargetAverageCpus)(nil)).Elem()
}

func (i ServiceDefinitionScalingTargetAverageCpusArray) ToServiceDefinitionScalingTargetAverageCpusArrayOutput() ServiceDefinitionScalingTargetAverageCpusArrayOutput {
	return i.ToServiceDefinitionScalingTargetAverageCpusArrayOutputWithContext(context.Background())
}

func (i ServiceDefinitionScalingTargetAverageCpusArray) ToServiceDefinitionScalingTargetAverageCpusArrayOutputWithContext(ctx context.Context) ServiceDefinitionScalingTargetAverageCpusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDefinitionScalingTargetAverageCpusArrayOutput)
}

type ServiceDefinitionScalingTargetAverageCpusOutput struct{ *pulumi.OutputState }

func (ServiceDefinitionScalingTargetAverageCpusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDefinitionScalingTargetAverageCpus)(nil)).Elem()
}

func (o ServiceDefinitionScalingTargetAverageCpusOutput) ToServiceDefinitionScalingTargetAverageCpusOutput() ServiceDefinitionScalingTargetAverageCpusOutput {
	return o
}

func (o ServiceDefinitionScalingTargetAverageCpusOutput) ToServiceDefinitionScalingTargetAverageCpusOutputWithContext(ctx context.Context) ServiceDefinitionScalingTargetAverageCpusOutput {
	return o
}

// The target value of the autoscaling target
func (o ServiceDefinitionScalingTargetAverageCpusOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v ServiceDefinitionScalingTargetAverageCpus) int { return v.Value }).(pulumi.IntOutput)
}

type ServiceDefinitionScalingTargetAverageCpusArrayOutput struct{ *pulumi.OutputState }

func (ServiceDefinitionScalingTargetAverageCpusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceDefinitionScalingTargetAverageCpus)(nil)).Elem()
}

func (o ServiceDefinitionScalingTargetAverageCpusArrayOutput) ToServiceDefinitionScalingTargetAverageCpusArrayOutput() ServiceDefinitionScalingTargetAverageCpusArrayOutput {
	return o
}

func (o ServiceDefinitionScalingTargetAverageCpusArrayOutput) ToServiceDefinitionScalingTargetAverageCpusArrayOutputWithContext(ctx context.Context) ServiceDefinitionScalingTargetAverageCpusArrayOutput {
	return o
}

func (o ServiceDefinitionScalingTargetAverageCpusArrayOutput) Index(i pulumi.IntInput) ServiceDefinitionScalingTargetAverageCpusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceDefinitionScalingTargetAverageCpus {
		return vs[0].([]ServiceDefinitionScalingTargetAverageCpus)[vs[1].(int)]
	}).(ServiceDefinitionScalingTargetAverageCpusOutput)
}

type ServiceDefinitionScalingTargetAverageMem struct {
	// The target value of the autoscaling target
	Value int `pulumi:"value"`
}

// ServiceDefinitionScalingTargetAverageMemInput is an input type that accepts ServiceDefinitionScalingTargetAverageMemArgs and ServiceDefinitionScalingTargetAverageMemOutput values.
// You can construct a concrete instance of `ServiceDefinitionScalingTargetAverageMemInput` via:
//
//	ServiceDefinitionScalingTargetAverageMemArgs{...}
type ServiceDefinitionScalingTargetAverageMemInput interface {
	pulumi.Input

	ToServiceDefinitionScalingTargetAverageMemOutput() ServiceDefinitionScalingTargetAverageMemOutput
	ToServiceDefinitionScalingTargetAverageMemOutputWithContext(context.Context) ServiceDefinitionScalingTargetAverageMemOutput
}

type ServiceDefinitionScalingTargetAverageMemArgs struct {
	// The target value of the autoscaling target
	Value pulumi.IntInput `pulumi:"value"`
}

func (ServiceDefinitionScalingTargetAverageMemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDefinitionScalingTargetAverageMem)(nil)).Elem()
}

func (i ServiceDefinitionScalingTargetAverageMemArgs) ToServiceDefinitionScalingTargetAverageMemOutput() ServiceDefinitionScalingTargetAverageMemOutput {
	return i.ToServiceDefinitionScalingTargetAverageMemOutputWithContext(context.Background())
}

func (i ServiceDefinitionScalingTargetAverageMemArgs) ToServiceDefinitionScalingTargetAverageMemOutputWithContext(ctx context.Context) ServiceDefinitionScalingTargetAverageMemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDefinitionScalingTargetAverageMemOutput)
}

// ServiceDefinitionScalingTargetAverageMemArrayInput is an input type that accepts ServiceDefinitionScalingTargetAverageMemArray and ServiceDefinitionScalingTargetAverageMemArrayOutput values.
// You can construct a concrete instance of `ServiceDefinitionScalingTargetAverageMemArrayInput` via:
//
//	ServiceDefinitionScalingTargetAverageMemArray{ ServiceDefinitionScalingTargetAverageMemArgs{...} }
type ServiceDefinitionScalingTargetAverageMemArrayInput interface {
	pulumi.Input

	ToServiceDefinitionScalingTargetAverageMemArrayOutput() ServiceDefinitionScalingTargetAverageMemArrayOutput
	ToServiceDefinitionScalingTargetAverageMemArrayOutputWithContext(context.Context) ServiceDefinitionScalingTargetAverageMemArrayOutput
}

type ServiceDefinitionScalingTargetAverageMemArray []ServiceDefinitionScalingTargetAverageMemInput

func (ServiceDefinitionScalingTargetAverageMemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceDefinitionScalingTargetAverageMem)(nil)).Elem()
}

func (i ServiceDefinitionScalingTargetAverageMemArray) ToServiceDefinitionScalingTargetAverageMemArrayOutput() ServiceDefinitionScalingTargetAverageMemArrayOutput {
	return i.ToServiceDefinitionScalingTargetAverageMemArrayOutputWithContext(context.Background())
}

func (i ServiceDefinitionScalingTargetAverageMemArray) ToServiceDefinitionScalingTargetAverageMemArrayOutputWithContext(ctx context.Context) ServiceDefinitionScalingTargetAverageMemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDefinitionScalingTargetAverageMemArrayOutput)
}

type ServiceDefinitionScalingTargetAverageMemOutput struct{ *pulumi.OutputState }

func (ServiceDefinitionScalingTargetAverageMemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDefinitionScalingTargetAverageMem)(nil)).Elem()
}

func (o ServiceDefinitionScalingTargetAverageMemOutput) ToServiceDefinitionScalingTargetAverageMemOutput() ServiceDefinitionScalingTargetAverageMemOutput {
	return o
}

func (o ServiceDefinitionScalingTargetAverageMemOutput) ToServiceDefinitionScalingTargetAverageMemOutputWithContext(ctx context.Context) ServiceDefinitionScalingTargetAverageMemOutput {
	return o
}

// The target value of the autoscaling target
func (o ServiceDefinitionScalingTargetAverageMemOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v ServiceDefinitionScalingTargetAverageMem) int { return v.Value }).(pulumi.IntOutput)
}

type ServiceDefinitionScalingTargetAverageMemArrayOutput struct{ *pulumi.OutputState }

func (ServiceDefinitionScalingTargetAverageMemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceDefinitionScalingTargetAverageMem)(nil)).Elem()
}

func (o ServiceDefinitionScalingTargetAverageMemArrayOutput) ToServiceDefinitionScalingTargetAverageMemArrayOutput() ServiceDefinitionScalingTargetAverageMemArrayOutput {
	return o
}

func (o ServiceDefinitionScalingTargetAverageMemArrayOutput) ToServiceDefinitionScalingTargetAverageMemArrayOutputWithContext(ctx context.Context) ServiceDefinitionScalingTargetAverageMemArrayOutput {
	return o
}

func (o ServiceDefinitionScalingTargetAverageMemArrayOutput) Index(i pulumi.IntInput) ServiceDefinitionScalingTargetAverageMemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceDefinitionScalingTargetAverageMem {
		return vs[0].([]ServiceDefinitionScalingTargetAverageMem)[vs[1].(int)]
	}).(ServiceDefinitionScalingTargetAverageMemOutput)
}

type ServiceDefinitionScalingTargetRequestsPerSecond struct {
	// The target value of the autoscaling target
	Value int `pulumi:"value"`
}

// ServiceDefinitionScalingTargetRequestsPerSecondInput is an input type that accepts ServiceDefinitionScalingTargetRequestsPerSecondArgs and ServiceDefinitionScalingTargetRequestsPerSecondOutput values.
// You can construct a concrete instance of `ServiceDefinitionScalingTargetRequestsPerSecondInput` via:
//
//	ServiceDefinitionScalingTargetRequestsPerSecondArgs{...}
type ServiceDefinitionScalingTargetRequestsPerSecondInput interface {
	pulumi.Input

	ToServiceDefinitionScalingTargetRequestsPerSecondOutput() ServiceDefinitionScalingTargetRequestsPerSecondOutput
	ToServiceDefinitionScalingTargetRequestsPerSecondOutputWithContext(context.Context) ServiceDefinitionScalingTargetRequestsPerSecondOutput
}

type ServiceDefinitionScalingTargetRequestsPerSecondArgs struct {
	// The target value of the autoscaling target
	Value pulumi.IntInput `pulumi:"value"`
}

func (ServiceDefinitionScalingTargetRequestsPerSecondArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDefinitionScalingTargetRequestsPerSecond)(nil)).Elem()
}

func (i ServiceDefinitionScalingTargetRequestsPerSecondArgs) ToServiceDefinitionScalingTargetRequestsPerSecondOutput() ServiceDefinitionScalingTargetRequestsPerSecondOutput {
	return i.ToServiceDefinitionScalingTargetRequestsPerSecondOutputWithContext(context.Background())
}

func (i ServiceDefinitionScalingTargetRequestsPerSecondArgs) ToServiceDefinitionScalingTargetRequestsPerSecondOutputWithContext(ctx context.Context) ServiceDefinitionScalingTargetRequestsPerSecondOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDefinitionScalingTargetRequestsPerSecondOutput)
}

// ServiceDefinitionScalingTargetRequestsPerSecondArrayInput is an input type that accepts ServiceDefinitionScalingTargetRequestsPerSecondArray and ServiceDefinitionScalingTargetRequestsPerSecondArrayOutput values.
// You can construct a concrete instance of `ServiceDefinitionScalingTargetRequestsPerSecondArrayInput` via:
//
//	ServiceDefinitionScalingTargetRequestsPerSecondArray{ ServiceDefinitionScalingTargetRequestsPerSecondArgs{...} }
type ServiceDefinitionScalingTargetRequestsPerSecondArrayInput interface {
	pulumi.Input

	ToServiceDefinitionScalingTargetRequestsPerSecondArrayOutput() ServiceDefinitionScalingTargetRequestsPerSecondArrayOutput
	ToServiceDefinitionScalingTargetRequestsPerSecondArrayOutputWithContext(context.Context) ServiceDefinitionScalingTargetRequestsPerSecondArrayOutput
}

type ServiceDefinitionScalingTargetRequestsPerSecondArray []ServiceDefinitionScalingTargetRequestsPerSecondInput

func (ServiceDefinitionScalingTargetRequestsPerSecondArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceDefinitionScalingTargetRequestsPerSecond)(nil)).Elem()
}

func (i ServiceDefinitionScalingTargetRequestsPerSecondArray) ToServiceDefinitionScalingTargetRequestsPerSecondArrayOutput() ServiceDefinitionScalingTargetRequestsPerSecondArrayOutput {
	return i.ToServiceDefinitionScalingTargetRequestsPerSecondArrayOutputWithContext(context.Background())
}

func (i ServiceDefinitionScalingTargetRequestsPerSecondArray) ToServiceDefinitionScalingTargetRequestsPerSecondArrayOutputWithContext(ctx context.Context) ServiceDefinitionScalingTargetRequestsPerSecondArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceDefinitionScalingTargetRequestsPerSecondArrayOutput)
}

type ServiceDefinitionScalingTargetRequestsPerSecondOutput struct{ *pulumi.OutputState }

func (ServiceDefinitionScalingTargetRequestsPerSecondOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceDefinitionScalingTargetRequestsPerSecond)(nil)).Elem()
}

func (o ServiceDefinitionScalingTargetRequestsPerSecondOutput) ToServiceDefinitionScalingTargetRequestsPerSecondOutput() ServiceDefinitionScalingTargetRequestsPerSecondOutput {
	return o
}

func (o ServiceDefinitionScalingTargetRequestsPerSecondOutput) ToServiceDefinitionScalingTargetRequestsPerSecondOutputWithContext(ctx context.Context) ServiceDefinitionScalingTargetRequestsPerSecondOutput {
	return o
}

// The target value of the autoscaling target
func (o ServiceDefinitionScalingTargetRequestsPerSecondOutput) Value() pulumi.IntOutput {
	return o.ApplyT(func(v ServiceDefinitionScalingTargetRequestsPerSecond) int { return v.Value }).(pulumi.IntOutput)
}

type ServiceDefinitionScalingTargetRequestsPerSecondArrayOutput struct{ *pulumi.OutputState }

func (ServiceDefinitionScalingTargetRequestsPerSecondArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceDefinitionScalingTargetRequestsPerSecond)(nil)).Elem()
}

func (o ServiceDefinitionScalingTargetRequestsPerSecondArrayOutput) ToServiceDefinitionScalingTargetRequestsPerSecondArrayOutput() ServiceDefinitionScalingTargetRequestsPerSecondArrayOutput {
	return o
}

func (o ServiceDefinitionScalingTargetRequestsPerSecondArrayOutput) ToServiceDefinitionScalingTargetRequestsPerSecondArrayOutputWithContext(ctx context.Context) ServiceDefinitionScalingTargetRequestsPerSecondArrayOutput {
	return o
}

func (o ServiceDefinitionScalingTargetRequestsPerSecondArrayOutput) Index(i pulumi.IntInput) ServiceDefinitionScalingTargetRequestsPerSecondOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceDefinitionScalingTargetRequestsPerSecond {
		return vs[0].([]ServiceDefinitionScalingTargetRequestsPerSecond)[vs[1].(int)]
	}).(ServiceDefinitionScalingTargetRequestsPerSecondOutput)
}

type GetAppDomain struct {
	// The app name the domain is assigned to
	AppName *string `pulumi:"appName"`
	// The date and time of when the domain was created
	CreatedAt string `pulumi:"createdAt"`
	// The deployment group assigned to the domain
	DeploymentGroup string `pulumi:"deploymentGroup"`
	// The domain ID
	Id string `pulumi:"id"`
	// The CNAME record to point the domain to
	IntendedCname string `pulumi:"intendedCname"`
	// The status messages of the domain
	Messages string `pulumi:"messages"`
	// The domain name
	Name string `pulumi:"name"`
	// The organization ID owning the domain
	OrganizationId string `pulumi:"organizationId"`
	// The status of the domain
	Status string `pulumi:"status"`
	// The domain type
	Type string `pulumi:"type"`
	// The date and time of when the domain was last updated
	UpdatedAt string `pulumi:"updatedAt"`
	// The date and time of when the domain was last verified
	VerifiedAt string `pulumi:"verifiedAt"`
	// The version of the domain
	Version string `pulumi:"version"`
}

// GetAppDomainInput is an input type that accepts GetAppDomainArgs and GetAppDomainOutput values.
// You can construct a concrete instance of `GetAppDomainInput` via:
//
//	GetAppDomainArgs{...}
type GetAppDomainInput interface {
	pulumi.Input

	ToGetAppDomainOutput() GetAppDomainOutput
	ToGetAppDomainOutputWithContext(context.Context) GetAppDomainOutput
}

type GetAppDomainArgs struct {
	// The app name the domain is assigned to
	AppName pulumi.StringPtrInput `pulumi:"appName"`
	// The date and time of when the domain was created
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The deployment group assigned to the domain
	DeploymentGroup pulumi.StringInput `pulumi:"deploymentGroup"`
	// The domain ID
	Id pulumi.StringInput `pulumi:"id"`
	// The CNAME record to point the domain to
	IntendedCname pulumi.StringInput `pulumi:"intendedCname"`
	// The status messages of the domain
	Messages pulumi.StringInput `pulumi:"messages"`
	// The domain name
	Name pulumi.StringInput `pulumi:"name"`
	// The organization ID owning the domain
	OrganizationId pulumi.StringInput `pulumi:"organizationId"`
	// The status of the domain
	Status pulumi.StringInput `pulumi:"status"`
	// The domain type
	Type pulumi.StringInput `pulumi:"type"`
	// The date and time of when the domain was last updated
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
	// The date and time of when the domain was last verified
	VerifiedAt pulumi.StringInput `pulumi:"verifiedAt"`
	// The version of the domain
	Version pulumi.StringInput `pulumi:"version"`
}

func (GetAppDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppDomain)(nil)).Elem()
}

func (i GetAppDomainArgs) ToGetAppDomainOutput() GetAppDomainOutput {
	return i.ToGetAppDomainOutputWithContext(context.Background())
}

func (i GetAppDomainArgs) ToGetAppDomainOutputWithContext(ctx context.Context) GetAppDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppDomainOutput)
}

// GetAppDomainArrayInput is an input type that accepts GetAppDomainArray and GetAppDomainArrayOutput values.
// You can construct a concrete instance of `GetAppDomainArrayInput` via:
//
//	GetAppDomainArray{ GetAppDomainArgs{...} }
type GetAppDomainArrayInput interface {
	pulumi.Input

	ToGetAppDomainArrayOutput() GetAppDomainArrayOutput
	ToGetAppDomainArrayOutputWithContext(context.Context) GetAppDomainArrayOutput
}

type GetAppDomainArray []GetAppDomainInput

func (GetAppDomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppDomain)(nil)).Elem()
}

func (i GetAppDomainArray) ToGetAppDomainArrayOutput() GetAppDomainArrayOutput {
	return i.ToGetAppDomainArrayOutputWithContext(context.Background())
}

func (i GetAppDomainArray) ToGetAppDomainArrayOutputWithContext(ctx context.Context) GetAppDomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppDomainArrayOutput)
}

type GetAppDomainOutput struct{ *pulumi.OutputState }

func (GetAppDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppDomain)(nil)).Elem()
}

func (o GetAppDomainOutput) ToGetAppDomainOutput() GetAppDomainOutput {
	return o
}

func (o GetAppDomainOutput) ToGetAppDomainOutputWithContext(ctx context.Context) GetAppDomainOutput {
	return o
}

// The app name the domain is assigned to
func (o GetAppDomainOutput) AppName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppDomain) *string { return v.AppName }).(pulumi.StringPtrOutput)
}

// The date and time of when the domain was created
func (o GetAppDomainOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppDomain) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The deployment group assigned to the domain
func (o GetAppDomainOutput) DeploymentGroup() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppDomain) string { return v.DeploymentGroup }).(pulumi.StringOutput)
}

// The domain ID
func (o GetAppDomainOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppDomain) string { return v.Id }).(pulumi.StringOutput)
}

// The CNAME record to point the domain to
func (o GetAppDomainOutput) IntendedCname() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppDomain) string { return v.IntendedCname }).(pulumi.StringOutput)
}

// The status messages of the domain
func (o GetAppDomainOutput) Messages() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppDomain) string { return v.Messages }).(pulumi.StringOutput)
}

// The domain name
func (o GetAppDomainOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppDomain) string { return v.Name }).(pulumi.StringOutput)
}

// The organization ID owning the domain
func (o GetAppDomainOutput) OrganizationId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppDomain) string { return v.OrganizationId }).(pulumi.StringOutput)
}

// The status of the domain
func (o GetAppDomainOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppDomain) string { return v.Status }).(pulumi.StringOutput)
}

// The domain type
func (o GetAppDomainOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppDomain) string { return v.Type }).(pulumi.StringOutput)
}

// The date and time of when the domain was last updated
func (o GetAppDomainOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppDomain) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

// The date and time of when the domain was last verified
func (o GetAppDomainOutput) VerifiedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppDomain) string { return v.VerifiedAt }).(pulumi.StringOutput)
}

// The version of the domain
func (o GetAppDomainOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppDomain) string { return v.Version }).(pulumi.StringOutput)
}

type GetAppDomainArrayOutput struct{ *pulumi.OutputState }

func (GetAppDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppDomain)(nil)).Elem()
}

func (o GetAppDomainArrayOutput) ToGetAppDomainArrayOutput() GetAppDomainArrayOutput {
	return o
}

func (o GetAppDomainArrayOutput) ToGetAppDomainArrayOutputWithContext(ctx context.Context) GetAppDomainArrayOutput {
	return o
}

func (o GetAppDomainArrayOutput) Index(i pulumi.IntInput) GetAppDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAppDomain {
		return vs[0].([]GetAppDomain)[vs[1].(int)]
	}).(GetAppDomainOutput)
}

type GetSecretAzureContainerRegistry struct {
	// The registry password
	Password string `pulumi:"password"`
	// The registry name
	RegistryName string `pulumi:"registryName"`
	// The registry username
	Username string `pulumi:"username"`
}

// GetSecretAzureContainerRegistryInput is an input type that accepts GetSecretAzureContainerRegistryArgs and GetSecretAzureContainerRegistryOutput values.
// You can construct a concrete instance of `GetSecretAzureContainerRegistryInput` via:
//
//	GetSecretAzureContainerRegistryArgs{...}
type GetSecretAzureContainerRegistryInput interface {
	pulumi.Input

	ToGetSecretAzureContainerRegistryOutput() GetSecretAzureContainerRegistryOutput
	ToGetSecretAzureContainerRegistryOutputWithContext(context.Context) GetSecretAzureContainerRegistryOutput
}

type GetSecretAzureContainerRegistryArgs struct {
	// The registry password
	Password pulumi.StringInput `pulumi:"password"`
	// The registry name
	RegistryName pulumi.StringInput `pulumi:"registryName"`
	// The registry username
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetSecretAzureContainerRegistryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretAzureContainerRegistry)(nil)).Elem()
}

func (i GetSecretAzureContainerRegistryArgs) ToGetSecretAzureContainerRegistryOutput() GetSecretAzureContainerRegistryOutput {
	return i.ToGetSecretAzureContainerRegistryOutputWithContext(context.Background())
}

func (i GetSecretAzureContainerRegistryArgs) ToGetSecretAzureContainerRegistryOutputWithContext(ctx context.Context) GetSecretAzureContainerRegistryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretAzureContainerRegistryOutput)
}

func (i GetSecretAzureContainerRegistryArgs) ToGetSecretAzureContainerRegistryPtrOutput() GetSecretAzureContainerRegistryPtrOutput {
	return i.ToGetSecretAzureContainerRegistryPtrOutputWithContext(context.Background())
}

func (i GetSecretAzureContainerRegistryArgs) ToGetSecretAzureContainerRegistryPtrOutputWithContext(ctx context.Context) GetSecretAzureContainerRegistryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretAzureContainerRegistryOutput).ToGetSecretAzureContainerRegistryPtrOutputWithContext(ctx)
}

// GetSecretAzureContainerRegistryPtrInput is an input type that accepts GetSecretAzureContainerRegistryArgs, GetSecretAzureContainerRegistryPtr and GetSecretAzureContainerRegistryPtrOutput values.
// You can construct a concrete instance of `GetSecretAzureContainerRegistryPtrInput` via:
//
//	        GetSecretAzureContainerRegistryArgs{...}
//
//	or:
//
//	        nil
type GetSecretAzureContainerRegistryPtrInput interface {
	pulumi.Input

	ToGetSecretAzureContainerRegistryPtrOutput() GetSecretAzureContainerRegistryPtrOutput
	ToGetSecretAzureContainerRegistryPtrOutputWithContext(context.Context) GetSecretAzureContainerRegistryPtrOutput
}

type getSecretAzureContainerRegistryPtrType GetSecretAzureContainerRegistryArgs

func GetSecretAzureContainerRegistryPtr(v *GetSecretAzureContainerRegistryArgs) GetSecretAzureContainerRegistryPtrInput {
	return (*getSecretAzureContainerRegistryPtrType)(v)
}

func (*getSecretAzureContainerRegistryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecretAzureContainerRegistry)(nil)).Elem()
}

func (i *getSecretAzureContainerRegistryPtrType) ToGetSecretAzureContainerRegistryPtrOutput() GetSecretAzureContainerRegistryPtrOutput {
	return i.ToGetSecretAzureContainerRegistryPtrOutputWithContext(context.Background())
}

func (i *getSecretAzureContainerRegistryPtrType) ToGetSecretAzureContainerRegistryPtrOutputWithContext(ctx context.Context) GetSecretAzureContainerRegistryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretAzureContainerRegistryPtrOutput)
}

type GetSecretAzureContainerRegistryOutput struct{ *pulumi.OutputState }

func (GetSecretAzureContainerRegistryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretAzureContainerRegistry)(nil)).Elem()
}

func (o GetSecretAzureContainerRegistryOutput) ToGetSecretAzureContainerRegistryOutput() GetSecretAzureContainerRegistryOutput {
	return o
}

func (o GetSecretAzureContainerRegistryOutput) ToGetSecretAzureContainerRegistryOutputWithContext(ctx context.Context) GetSecretAzureContainerRegistryOutput {
	return o
}

func (o GetSecretAzureContainerRegistryOutput) ToGetSecretAzureContainerRegistryPtrOutput() GetSecretAzureContainerRegistryPtrOutput {
	return o.ToGetSecretAzureContainerRegistryPtrOutputWithContext(context.Background())
}

func (o GetSecretAzureContainerRegistryOutput) ToGetSecretAzureContainerRegistryPtrOutputWithContext(ctx context.Context) GetSecretAzureContainerRegistryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSecretAzureContainerRegistry) *GetSecretAzureContainerRegistry {
		return &v
	}).(GetSecretAzureContainerRegistryPtrOutput)
}

// The registry password
func (o GetSecretAzureContainerRegistryOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretAzureContainerRegistry) string { return v.Password }).(pulumi.StringOutput)
}

// The registry name
func (o GetSecretAzureContainerRegistryOutput) RegistryName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretAzureContainerRegistry) string { return v.RegistryName }).(pulumi.StringOutput)
}

// The registry username
func (o GetSecretAzureContainerRegistryOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretAzureContainerRegistry) string { return v.Username }).(pulumi.StringOutput)
}

type GetSecretAzureContainerRegistryPtrOutput struct{ *pulumi.OutputState }

func (GetSecretAzureContainerRegistryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecretAzureContainerRegistry)(nil)).Elem()
}

func (o GetSecretAzureContainerRegistryPtrOutput) ToGetSecretAzureContainerRegistryPtrOutput() GetSecretAzureContainerRegistryPtrOutput {
	return o
}

func (o GetSecretAzureContainerRegistryPtrOutput) ToGetSecretAzureContainerRegistryPtrOutputWithContext(ctx context.Context) GetSecretAzureContainerRegistryPtrOutput {
	return o
}

func (o GetSecretAzureContainerRegistryPtrOutput) Elem() GetSecretAzureContainerRegistryOutput {
	return o.ApplyT(func(v *GetSecretAzureContainerRegistry) GetSecretAzureContainerRegistry {
		if v != nil {
			return *v
		}
		var ret GetSecretAzureContainerRegistry
		return ret
	}).(GetSecretAzureContainerRegistryOutput)
}

// The registry password
func (o GetSecretAzureContainerRegistryPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSecretAzureContainerRegistry) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The registry name
func (o GetSecretAzureContainerRegistryPtrOutput) RegistryName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSecretAzureContainerRegistry) *string {
		if v == nil {
			return nil
		}
		return &v.RegistryName
	}).(pulumi.StringPtrOutput)
}

// The registry username
func (o GetSecretAzureContainerRegistryPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSecretAzureContainerRegistry) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type GetSecretDigitalOceanContainerRegistry struct {
	// The registry password
	Password string `pulumi:"password"`
	// The registry username
	Username string `pulumi:"username"`
}

// GetSecretDigitalOceanContainerRegistryInput is an input type that accepts GetSecretDigitalOceanContainerRegistryArgs and GetSecretDigitalOceanContainerRegistryOutput values.
// You can construct a concrete instance of `GetSecretDigitalOceanContainerRegistryInput` via:
//
//	GetSecretDigitalOceanContainerRegistryArgs{...}
type GetSecretDigitalOceanContainerRegistryInput interface {
	pulumi.Input

	ToGetSecretDigitalOceanContainerRegistryOutput() GetSecretDigitalOceanContainerRegistryOutput
	ToGetSecretDigitalOceanContainerRegistryOutputWithContext(context.Context) GetSecretDigitalOceanContainerRegistryOutput
}

type GetSecretDigitalOceanContainerRegistryArgs struct {
	// The registry password
	Password pulumi.StringInput `pulumi:"password"`
	// The registry username
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetSecretDigitalOceanContainerRegistryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretDigitalOceanContainerRegistry)(nil)).Elem()
}

func (i GetSecretDigitalOceanContainerRegistryArgs) ToGetSecretDigitalOceanContainerRegistryOutput() GetSecretDigitalOceanContainerRegistryOutput {
	return i.ToGetSecretDigitalOceanContainerRegistryOutputWithContext(context.Background())
}

func (i GetSecretDigitalOceanContainerRegistryArgs) ToGetSecretDigitalOceanContainerRegistryOutputWithContext(ctx context.Context) GetSecretDigitalOceanContainerRegistryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretDigitalOceanContainerRegistryOutput)
}

func (i GetSecretDigitalOceanContainerRegistryArgs) ToGetSecretDigitalOceanContainerRegistryPtrOutput() GetSecretDigitalOceanContainerRegistryPtrOutput {
	return i.ToGetSecretDigitalOceanContainerRegistryPtrOutputWithContext(context.Background())
}

func (i GetSecretDigitalOceanContainerRegistryArgs) ToGetSecretDigitalOceanContainerRegistryPtrOutputWithContext(ctx context.Context) GetSecretDigitalOceanContainerRegistryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretDigitalOceanContainerRegistryOutput).ToGetSecretDigitalOceanContainerRegistryPtrOutputWithContext(ctx)
}

// GetSecretDigitalOceanContainerRegistryPtrInput is an input type that accepts GetSecretDigitalOceanContainerRegistryArgs, GetSecretDigitalOceanContainerRegistryPtr and GetSecretDigitalOceanContainerRegistryPtrOutput values.
// You can construct a concrete instance of `GetSecretDigitalOceanContainerRegistryPtrInput` via:
//
//	        GetSecretDigitalOceanContainerRegistryArgs{...}
//
//	or:
//
//	        nil
type GetSecretDigitalOceanContainerRegistryPtrInput interface {
	pulumi.Input

	ToGetSecretDigitalOceanContainerRegistryPtrOutput() GetSecretDigitalOceanContainerRegistryPtrOutput
	ToGetSecretDigitalOceanContainerRegistryPtrOutputWithContext(context.Context) GetSecretDigitalOceanContainerRegistryPtrOutput
}

type getSecretDigitalOceanContainerRegistryPtrType GetSecretDigitalOceanContainerRegistryArgs

func GetSecretDigitalOceanContainerRegistryPtr(v *GetSecretDigitalOceanContainerRegistryArgs) GetSecretDigitalOceanContainerRegistryPtrInput {
	return (*getSecretDigitalOceanContainerRegistryPtrType)(v)
}

func (*getSecretDigitalOceanContainerRegistryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecretDigitalOceanContainerRegistry)(nil)).Elem()
}

func (i *getSecretDigitalOceanContainerRegistryPtrType) ToGetSecretDigitalOceanContainerRegistryPtrOutput() GetSecretDigitalOceanContainerRegistryPtrOutput {
	return i.ToGetSecretDigitalOceanContainerRegistryPtrOutputWithContext(context.Background())
}

func (i *getSecretDigitalOceanContainerRegistryPtrType) ToGetSecretDigitalOceanContainerRegistryPtrOutputWithContext(ctx context.Context) GetSecretDigitalOceanContainerRegistryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretDigitalOceanContainerRegistryPtrOutput)
}

type GetSecretDigitalOceanContainerRegistryOutput struct{ *pulumi.OutputState }

func (GetSecretDigitalOceanContainerRegistryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretDigitalOceanContainerRegistry)(nil)).Elem()
}

func (o GetSecretDigitalOceanContainerRegistryOutput) ToGetSecretDigitalOceanContainerRegistryOutput() GetSecretDigitalOceanContainerRegistryOutput {
	return o
}

func (o GetSecretDigitalOceanContainerRegistryOutput) ToGetSecretDigitalOceanContainerRegistryOutputWithContext(ctx context.Context) GetSecretDigitalOceanContainerRegistryOutput {
	return o
}

func (o GetSecretDigitalOceanContainerRegistryOutput) ToGetSecretDigitalOceanContainerRegistryPtrOutput() GetSecretDigitalOceanContainerRegistryPtrOutput {
	return o.ToGetSecretDigitalOceanContainerRegistryPtrOutputWithContext(context.Background())
}

func (o GetSecretDigitalOceanContainerRegistryOutput) ToGetSecretDigitalOceanContainerRegistryPtrOutputWithContext(ctx context.Context) GetSecretDigitalOceanContainerRegistryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSecretDigitalOceanContainerRegistry) *GetSecretDigitalOceanContainerRegistry {
		return &v
	}).(GetSecretDigitalOceanContainerRegistryPtrOutput)
}

// The registry password
func (o GetSecretDigitalOceanContainerRegistryOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretDigitalOceanContainerRegistry) string { return v.Password }).(pulumi.StringOutput)
}

// The registry username
func (o GetSecretDigitalOceanContainerRegistryOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretDigitalOceanContainerRegistry) string { return v.Username }).(pulumi.StringOutput)
}

type GetSecretDigitalOceanContainerRegistryPtrOutput struct{ *pulumi.OutputState }

func (GetSecretDigitalOceanContainerRegistryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecretDigitalOceanContainerRegistry)(nil)).Elem()
}

func (o GetSecretDigitalOceanContainerRegistryPtrOutput) ToGetSecretDigitalOceanContainerRegistryPtrOutput() GetSecretDigitalOceanContainerRegistryPtrOutput {
	return o
}

func (o GetSecretDigitalOceanContainerRegistryPtrOutput) ToGetSecretDigitalOceanContainerRegistryPtrOutputWithContext(ctx context.Context) GetSecretDigitalOceanContainerRegistryPtrOutput {
	return o
}

func (o GetSecretDigitalOceanContainerRegistryPtrOutput) Elem() GetSecretDigitalOceanContainerRegistryOutput {
	return o.ApplyT(func(v *GetSecretDigitalOceanContainerRegistry) GetSecretDigitalOceanContainerRegistry {
		if v != nil {
			return *v
		}
		var ret GetSecretDigitalOceanContainerRegistry
		return ret
	}).(GetSecretDigitalOceanContainerRegistryOutput)
}

// The registry password
func (o GetSecretDigitalOceanContainerRegistryPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSecretDigitalOceanContainerRegistry) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The registry username
func (o GetSecretDigitalOceanContainerRegistryPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSecretDigitalOceanContainerRegistry) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type GetSecretDockerHubRegistry struct {
	// The registry password
	Password string `pulumi:"password"`
	// The registry username
	Username string `pulumi:"username"`
}

// GetSecretDockerHubRegistryInput is an input type that accepts GetSecretDockerHubRegistryArgs and GetSecretDockerHubRegistryOutput values.
// You can construct a concrete instance of `GetSecretDockerHubRegistryInput` via:
//
//	GetSecretDockerHubRegistryArgs{...}
type GetSecretDockerHubRegistryInput interface {
	pulumi.Input

	ToGetSecretDockerHubRegistryOutput() GetSecretDockerHubRegistryOutput
	ToGetSecretDockerHubRegistryOutputWithContext(context.Context) GetSecretDockerHubRegistryOutput
}

type GetSecretDockerHubRegistryArgs struct {
	// The registry password
	Password pulumi.StringInput `pulumi:"password"`
	// The registry username
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetSecretDockerHubRegistryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretDockerHubRegistry)(nil)).Elem()
}

func (i GetSecretDockerHubRegistryArgs) ToGetSecretDockerHubRegistryOutput() GetSecretDockerHubRegistryOutput {
	return i.ToGetSecretDockerHubRegistryOutputWithContext(context.Background())
}

func (i GetSecretDockerHubRegistryArgs) ToGetSecretDockerHubRegistryOutputWithContext(ctx context.Context) GetSecretDockerHubRegistryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretDockerHubRegistryOutput)
}

func (i GetSecretDockerHubRegistryArgs) ToGetSecretDockerHubRegistryPtrOutput() GetSecretDockerHubRegistryPtrOutput {
	return i.ToGetSecretDockerHubRegistryPtrOutputWithContext(context.Background())
}

func (i GetSecretDockerHubRegistryArgs) ToGetSecretDockerHubRegistryPtrOutputWithContext(ctx context.Context) GetSecretDockerHubRegistryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretDockerHubRegistryOutput).ToGetSecretDockerHubRegistryPtrOutputWithContext(ctx)
}

// GetSecretDockerHubRegistryPtrInput is an input type that accepts GetSecretDockerHubRegistryArgs, GetSecretDockerHubRegistryPtr and GetSecretDockerHubRegistryPtrOutput values.
// You can construct a concrete instance of `GetSecretDockerHubRegistryPtrInput` via:
//
//	        GetSecretDockerHubRegistryArgs{...}
//
//	or:
//
//	        nil
type GetSecretDockerHubRegistryPtrInput interface {
	pulumi.Input

	ToGetSecretDockerHubRegistryPtrOutput() GetSecretDockerHubRegistryPtrOutput
	ToGetSecretDockerHubRegistryPtrOutputWithContext(context.Context) GetSecretDockerHubRegistryPtrOutput
}

type getSecretDockerHubRegistryPtrType GetSecretDockerHubRegistryArgs

func GetSecretDockerHubRegistryPtr(v *GetSecretDockerHubRegistryArgs) GetSecretDockerHubRegistryPtrInput {
	return (*getSecretDockerHubRegistryPtrType)(v)
}

func (*getSecretDockerHubRegistryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecretDockerHubRegistry)(nil)).Elem()
}

func (i *getSecretDockerHubRegistryPtrType) ToGetSecretDockerHubRegistryPtrOutput() GetSecretDockerHubRegistryPtrOutput {
	return i.ToGetSecretDockerHubRegistryPtrOutputWithContext(context.Background())
}

func (i *getSecretDockerHubRegistryPtrType) ToGetSecretDockerHubRegistryPtrOutputWithContext(ctx context.Context) GetSecretDockerHubRegistryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretDockerHubRegistryPtrOutput)
}

type GetSecretDockerHubRegistryOutput struct{ *pulumi.OutputState }

func (GetSecretDockerHubRegistryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretDockerHubRegistry)(nil)).Elem()
}

func (o GetSecretDockerHubRegistryOutput) ToGetSecretDockerHubRegistryOutput() GetSecretDockerHubRegistryOutput {
	return o
}

func (o GetSecretDockerHubRegistryOutput) ToGetSecretDockerHubRegistryOutputWithContext(ctx context.Context) GetSecretDockerHubRegistryOutput {
	return o
}

func (o GetSecretDockerHubRegistryOutput) ToGetSecretDockerHubRegistryPtrOutput() GetSecretDockerHubRegistryPtrOutput {
	return o.ToGetSecretDockerHubRegistryPtrOutputWithContext(context.Background())
}

func (o GetSecretDockerHubRegistryOutput) ToGetSecretDockerHubRegistryPtrOutputWithContext(ctx context.Context) GetSecretDockerHubRegistryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSecretDockerHubRegistry) *GetSecretDockerHubRegistry {
		return &v
	}).(GetSecretDockerHubRegistryPtrOutput)
}

// The registry password
func (o GetSecretDockerHubRegistryOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretDockerHubRegistry) string { return v.Password }).(pulumi.StringOutput)
}

// The registry username
func (o GetSecretDockerHubRegistryOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretDockerHubRegistry) string { return v.Username }).(pulumi.StringOutput)
}

type GetSecretDockerHubRegistryPtrOutput struct{ *pulumi.OutputState }

func (GetSecretDockerHubRegistryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecretDockerHubRegistry)(nil)).Elem()
}

func (o GetSecretDockerHubRegistryPtrOutput) ToGetSecretDockerHubRegistryPtrOutput() GetSecretDockerHubRegistryPtrOutput {
	return o
}

func (o GetSecretDockerHubRegistryPtrOutput) ToGetSecretDockerHubRegistryPtrOutputWithContext(ctx context.Context) GetSecretDockerHubRegistryPtrOutput {
	return o
}

func (o GetSecretDockerHubRegistryPtrOutput) Elem() GetSecretDockerHubRegistryOutput {
	return o.ApplyT(func(v *GetSecretDockerHubRegistry) GetSecretDockerHubRegistry {
		if v != nil {
			return *v
		}
		var ret GetSecretDockerHubRegistry
		return ret
	}).(GetSecretDockerHubRegistryOutput)
}

// The registry password
func (o GetSecretDockerHubRegistryPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSecretDockerHubRegistry) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The registry username
func (o GetSecretDockerHubRegistryPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSecretDockerHubRegistry) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type GetSecretGithubRegistry struct {
	// The registry password
	Password string `pulumi:"password"`
	// The registry username
	Username string `pulumi:"username"`
}

// GetSecretGithubRegistryInput is an input type that accepts GetSecretGithubRegistryArgs and GetSecretGithubRegistryOutput values.
// You can construct a concrete instance of `GetSecretGithubRegistryInput` via:
//
//	GetSecretGithubRegistryArgs{...}
type GetSecretGithubRegistryInput interface {
	pulumi.Input

	ToGetSecretGithubRegistryOutput() GetSecretGithubRegistryOutput
	ToGetSecretGithubRegistryOutputWithContext(context.Context) GetSecretGithubRegistryOutput
}

type GetSecretGithubRegistryArgs struct {
	// The registry password
	Password pulumi.StringInput `pulumi:"password"`
	// The registry username
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetSecretGithubRegistryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretGithubRegistry)(nil)).Elem()
}

func (i GetSecretGithubRegistryArgs) ToGetSecretGithubRegistryOutput() GetSecretGithubRegistryOutput {
	return i.ToGetSecretGithubRegistryOutputWithContext(context.Background())
}

func (i GetSecretGithubRegistryArgs) ToGetSecretGithubRegistryOutputWithContext(ctx context.Context) GetSecretGithubRegistryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretGithubRegistryOutput)
}

func (i GetSecretGithubRegistryArgs) ToGetSecretGithubRegistryPtrOutput() GetSecretGithubRegistryPtrOutput {
	return i.ToGetSecretGithubRegistryPtrOutputWithContext(context.Background())
}

func (i GetSecretGithubRegistryArgs) ToGetSecretGithubRegistryPtrOutputWithContext(ctx context.Context) GetSecretGithubRegistryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretGithubRegistryOutput).ToGetSecretGithubRegistryPtrOutputWithContext(ctx)
}

// GetSecretGithubRegistryPtrInput is an input type that accepts GetSecretGithubRegistryArgs, GetSecretGithubRegistryPtr and GetSecretGithubRegistryPtrOutput values.
// You can construct a concrete instance of `GetSecretGithubRegistryPtrInput` via:
//
//	        GetSecretGithubRegistryArgs{...}
//
//	or:
//
//	        nil
type GetSecretGithubRegistryPtrInput interface {
	pulumi.Input

	ToGetSecretGithubRegistryPtrOutput() GetSecretGithubRegistryPtrOutput
	ToGetSecretGithubRegistryPtrOutputWithContext(context.Context) GetSecretGithubRegistryPtrOutput
}

type getSecretGithubRegistryPtrType GetSecretGithubRegistryArgs

func GetSecretGithubRegistryPtr(v *GetSecretGithubRegistryArgs) GetSecretGithubRegistryPtrInput {
	return (*getSecretGithubRegistryPtrType)(v)
}

func (*getSecretGithubRegistryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecretGithubRegistry)(nil)).Elem()
}

func (i *getSecretGithubRegistryPtrType) ToGetSecretGithubRegistryPtrOutput() GetSecretGithubRegistryPtrOutput {
	return i.ToGetSecretGithubRegistryPtrOutputWithContext(context.Background())
}

func (i *getSecretGithubRegistryPtrType) ToGetSecretGithubRegistryPtrOutputWithContext(ctx context.Context) GetSecretGithubRegistryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretGithubRegistryPtrOutput)
}

type GetSecretGithubRegistryOutput struct{ *pulumi.OutputState }

func (GetSecretGithubRegistryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretGithubRegistry)(nil)).Elem()
}

func (o GetSecretGithubRegistryOutput) ToGetSecretGithubRegistryOutput() GetSecretGithubRegistryOutput {
	return o
}

func (o GetSecretGithubRegistryOutput) ToGetSecretGithubRegistryOutputWithContext(ctx context.Context) GetSecretGithubRegistryOutput {
	return o
}

func (o GetSecretGithubRegistryOutput) ToGetSecretGithubRegistryPtrOutput() GetSecretGithubRegistryPtrOutput {
	return o.ToGetSecretGithubRegistryPtrOutputWithContext(context.Background())
}

func (o GetSecretGithubRegistryOutput) ToGetSecretGithubRegistryPtrOutputWithContext(ctx context.Context) GetSecretGithubRegistryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSecretGithubRegistry) *GetSecretGithubRegistry {
		return &v
	}).(GetSecretGithubRegistryPtrOutput)
}

// The registry password
func (o GetSecretGithubRegistryOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretGithubRegistry) string { return v.Password }).(pulumi.StringOutput)
}

// The registry username
func (o GetSecretGithubRegistryOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretGithubRegistry) string { return v.Username }).(pulumi.StringOutput)
}

type GetSecretGithubRegistryPtrOutput struct{ *pulumi.OutputState }

func (GetSecretGithubRegistryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecretGithubRegistry)(nil)).Elem()
}

func (o GetSecretGithubRegistryPtrOutput) ToGetSecretGithubRegistryPtrOutput() GetSecretGithubRegistryPtrOutput {
	return o
}

func (o GetSecretGithubRegistryPtrOutput) ToGetSecretGithubRegistryPtrOutputWithContext(ctx context.Context) GetSecretGithubRegistryPtrOutput {
	return o
}

func (o GetSecretGithubRegistryPtrOutput) Elem() GetSecretGithubRegistryOutput {
	return o.ApplyT(func(v *GetSecretGithubRegistry) GetSecretGithubRegistry {
		if v != nil {
			return *v
		}
		var ret GetSecretGithubRegistry
		return ret
	}).(GetSecretGithubRegistryOutput)
}

// The registry password
func (o GetSecretGithubRegistryPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSecretGithubRegistry) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The registry username
func (o GetSecretGithubRegistryPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSecretGithubRegistry) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type GetSecretGitlabRegistry struct {
	// The registry password
	Password string `pulumi:"password"`
	// The registry username
	Username string `pulumi:"username"`
}

// GetSecretGitlabRegistryInput is an input type that accepts GetSecretGitlabRegistryArgs and GetSecretGitlabRegistryOutput values.
// You can construct a concrete instance of `GetSecretGitlabRegistryInput` via:
//
//	GetSecretGitlabRegistryArgs{...}
type GetSecretGitlabRegistryInput interface {
	pulumi.Input

	ToGetSecretGitlabRegistryOutput() GetSecretGitlabRegistryOutput
	ToGetSecretGitlabRegistryOutputWithContext(context.Context) GetSecretGitlabRegistryOutput
}

type GetSecretGitlabRegistryArgs struct {
	// The registry password
	Password pulumi.StringInput `pulumi:"password"`
	// The registry username
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetSecretGitlabRegistryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretGitlabRegistry)(nil)).Elem()
}

func (i GetSecretGitlabRegistryArgs) ToGetSecretGitlabRegistryOutput() GetSecretGitlabRegistryOutput {
	return i.ToGetSecretGitlabRegistryOutputWithContext(context.Background())
}

func (i GetSecretGitlabRegistryArgs) ToGetSecretGitlabRegistryOutputWithContext(ctx context.Context) GetSecretGitlabRegistryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretGitlabRegistryOutput)
}

func (i GetSecretGitlabRegistryArgs) ToGetSecretGitlabRegistryPtrOutput() GetSecretGitlabRegistryPtrOutput {
	return i.ToGetSecretGitlabRegistryPtrOutputWithContext(context.Background())
}

func (i GetSecretGitlabRegistryArgs) ToGetSecretGitlabRegistryPtrOutputWithContext(ctx context.Context) GetSecretGitlabRegistryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretGitlabRegistryOutput).ToGetSecretGitlabRegistryPtrOutputWithContext(ctx)
}

// GetSecretGitlabRegistryPtrInput is an input type that accepts GetSecretGitlabRegistryArgs, GetSecretGitlabRegistryPtr and GetSecretGitlabRegistryPtrOutput values.
// You can construct a concrete instance of `GetSecretGitlabRegistryPtrInput` via:
//
//	        GetSecretGitlabRegistryArgs{...}
//
//	or:
//
//	        nil
type GetSecretGitlabRegistryPtrInput interface {
	pulumi.Input

	ToGetSecretGitlabRegistryPtrOutput() GetSecretGitlabRegistryPtrOutput
	ToGetSecretGitlabRegistryPtrOutputWithContext(context.Context) GetSecretGitlabRegistryPtrOutput
}

type getSecretGitlabRegistryPtrType GetSecretGitlabRegistryArgs

func GetSecretGitlabRegistryPtr(v *GetSecretGitlabRegistryArgs) GetSecretGitlabRegistryPtrInput {
	return (*getSecretGitlabRegistryPtrType)(v)
}

func (*getSecretGitlabRegistryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecretGitlabRegistry)(nil)).Elem()
}

func (i *getSecretGitlabRegistryPtrType) ToGetSecretGitlabRegistryPtrOutput() GetSecretGitlabRegistryPtrOutput {
	return i.ToGetSecretGitlabRegistryPtrOutputWithContext(context.Background())
}

func (i *getSecretGitlabRegistryPtrType) ToGetSecretGitlabRegistryPtrOutputWithContext(ctx context.Context) GetSecretGitlabRegistryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretGitlabRegistryPtrOutput)
}

type GetSecretGitlabRegistryOutput struct{ *pulumi.OutputState }

func (GetSecretGitlabRegistryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretGitlabRegistry)(nil)).Elem()
}

func (o GetSecretGitlabRegistryOutput) ToGetSecretGitlabRegistryOutput() GetSecretGitlabRegistryOutput {
	return o
}

func (o GetSecretGitlabRegistryOutput) ToGetSecretGitlabRegistryOutputWithContext(ctx context.Context) GetSecretGitlabRegistryOutput {
	return o
}

func (o GetSecretGitlabRegistryOutput) ToGetSecretGitlabRegistryPtrOutput() GetSecretGitlabRegistryPtrOutput {
	return o.ToGetSecretGitlabRegistryPtrOutputWithContext(context.Background())
}

func (o GetSecretGitlabRegistryOutput) ToGetSecretGitlabRegistryPtrOutputWithContext(ctx context.Context) GetSecretGitlabRegistryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSecretGitlabRegistry) *GetSecretGitlabRegistry {
		return &v
	}).(GetSecretGitlabRegistryPtrOutput)
}

// The registry password
func (o GetSecretGitlabRegistryOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretGitlabRegistry) string { return v.Password }).(pulumi.StringOutput)
}

// The registry username
func (o GetSecretGitlabRegistryOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretGitlabRegistry) string { return v.Username }).(pulumi.StringOutput)
}

type GetSecretGitlabRegistryPtrOutput struct{ *pulumi.OutputState }

func (GetSecretGitlabRegistryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecretGitlabRegistry)(nil)).Elem()
}

func (o GetSecretGitlabRegistryPtrOutput) ToGetSecretGitlabRegistryPtrOutput() GetSecretGitlabRegistryPtrOutput {
	return o
}

func (o GetSecretGitlabRegistryPtrOutput) ToGetSecretGitlabRegistryPtrOutputWithContext(ctx context.Context) GetSecretGitlabRegistryPtrOutput {
	return o
}

func (o GetSecretGitlabRegistryPtrOutput) Elem() GetSecretGitlabRegistryOutput {
	return o.ApplyT(func(v *GetSecretGitlabRegistry) GetSecretGitlabRegistry {
		if v != nil {
			return *v
		}
		var ret GetSecretGitlabRegistry
		return ret
	}).(GetSecretGitlabRegistryOutput)
}

// The registry password
func (o GetSecretGitlabRegistryPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSecretGitlabRegistry) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The registry username
func (o GetSecretGitlabRegistryPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSecretGitlabRegistry) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

type GetSecretPrivateRegistry struct {
	// The registry password
	Password string `pulumi:"password"`
	// The registry url
	Url string `pulumi:"url"`
	// The registry username
	Username string `pulumi:"username"`
}

// GetSecretPrivateRegistryInput is an input type that accepts GetSecretPrivateRegistryArgs and GetSecretPrivateRegistryOutput values.
// You can construct a concrete instance of `GetSecretPrivateRegistryInput` via:
//
//	GetSecretPrivateRegistryArgs{...}
type GetSecretPrivateRegistryInput interface {
	pulumi.Input

	ToGetSecretPrivateRegistryOutput() GetSecretPrivateRegistryOutput
	ToGetSecretPrivateRegistryOutputWithContext(context.Context) GetSecretPrivateRegistryOutput
}

type GetSecretPrivateRegistryArgs struct {
	// The registry password
	Password pulumi.StringInput `pulumi:"password"`
	// The registry url
	Url pulumi.StringInput `pulumi:"url"`
	// The registry username
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetSecretPrivateRegistryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretPrivateRegistry)(nil)).Elem()
}

func (i GetSecretPrivateRegistryArgs) ToGetSecretPrivateRegistryOutput() GetSecretPrivateRegistryOutput {
	return i.ToGetSecretPrivateRegistryOutputWithContext(context.Background())
}

func (i GetSecretPrivateRegistryArgs) ToGetSecretPrivateRegistryOutputWithContext(ctx context.Context) GetSecretPrivateRegistryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretPrivateRegistryOutput)
}

func (i GetSecretPrivateRegistryArgs) ToGetSecretPrivateRegistryPtrOutput() GetSecretPrivateRegistryPtrOutput {
	return i.ToGetSecretPrivateRegistryPtrOutputWithContext(context.Background())
}

func (i GetSecretPrivateRegistryArgs) ToGetSecretPrivateRegistryPtrOutputWithContext(ctx context.Context) GetSecretPrivateRegistryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretPrivateRegistryOutput).ToGetSecretPrivateRegistryPtrOutputWithContext(ctx)
}

// GetSecretPrivateRegistryPtrInput is an input type that accepts GetSecretPrivateRegistryArgs, GetSecretPrivateRegistryPtr and GetSecretPrivateRegistryPtrOutput values.
// You can construct a concrete instance of `GetSecretPrivateRegistryPtrInput` via:
//
//	        GetSecretPrivateRegistryArgs{...}
//
//	or:
//
//	        nil
type GetSecretPrivateRegistryPtrInput interface {
	pulumi.Input

	ToGetSecretPrivateRegistryPtrOutput() GetSecretPrivateRegistryPtrOutput
	ToGetSecretPrivateRegistryPtrOutputWithContext(context.Context) GetSecretPrivateRegistryPtrOutput
}

type getSecretPrivateRegistryPtrType GetSecretPrivateRegistryArgs

func GetSecretPrivateRegistryPtr(v *GetSecretPrivateRegistryArgs) GetSecretPrivateRegistryPtrInput {
	return (*getSecretPrivateRegistryPtrType)(v)
}

func (*getSecretPrivateRegistryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecretPrivateRegistry)(nil)).Elem()
}

func (i *getSecretPrivateRegistryPtrType) ToGetSecretPrivateRegistryPtrOutput() GetSecretPrivateRegistryPtrOutput {
	return i.ToGetSecretPrivateRegistryPtrOutputWithContext(context.Background())
}

func (i *getSecretPrivateRegistryPtrType) ToGetSecretPrivateRegistryPtrOutputWithContext(ctx context.Context) GetSecretPrivateRegistryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSecretPrivateRegistryPtrOutput)
}

type GetSecretPrivateRegistryOutput struct{ *pulumi.OutputState }

func (GetSecretPrivateRegistryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecretPrivateRegistry)(nil)).Elem()
}

func (o GetSecretPrivateRegistryOutput) ToGetSecretPrivateRegistryOutput() GetSecretPrivateRegistryOutput {
	return o
}

func (o GetSecretPrivateRegistryOutput) ToGetSecretPrivateRegistryOutputWithContext(ctx context.Context) GetSecretPrivateRegistryOutput {
	return o
}

func (o GetSecretPrivateRegistryOutput) ToGetSecretPrivateRegistryPtrOutput() GetSecretPrivateRegistryPtrOutput {
	return o.ToGetSecretPrivateRegistryPtrOutputWithContext(context.Background())
}

func (o GetSecretPrivateRegistryOutput) ToGetSecretPrivateRegistryPtrOutputWithContext(ctx context.Context) GetSecretPrivateRegistryPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetSecretPrivateRegistry) *GetSecretPrivateRegistry {
		return &v
	}).(GetSecretPrivateRegistryPtrOutput)
}

// The registry password
func (o GetSecretPrivateRegistryOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretPrivateRegistry) string { return v.Password }).(pulumi.StringOutput)
}

// The registry url
func (o GetSecretPrivateRegistryOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretPrivateRegistry) string { return v.Url }).(pulumi.StringOutput)
}

// The registry username
func (o GetSecretPrivateRegistryOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecretPrivateRegistry) string { return v.Username }).(pulumi.StringOutput)
}

type GetSecretPrivateRegistryPtrOutput struct{ *pulumi.OutputState }

func (GetSecretPrivateRegistryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetSecretPrivateRegistry)(nil)).Elem()
}

func (o GetSecretPrivateRegistryPtrOutput) ToGetSecretPrivateRegistryPtrOutput() GetSecretPrivateRegistryPtrOutput {
	return o
}

func (o GetSecretPrivateRegistryPtrOutput) ToGetSecretPrivateRegistryPtrOutputWithContext(ctx context.Context) GetSecretPrivateRegistryPtrOutput {
	return o
}

func (o GetSecretPrivateRegistryPtrOutput) Elem() GetSecretPrivateRegistryOutput {
	return o.ApplyT(func(v *GetSecretPrivateRegistry) GetSecretPrivateRegistry {
		if v != nil {
			return *v
		}
		var ret GetSecretPrivateRegistry
		return ret
	}).(GetSecretPrivateRegistryOutput)
}

// The registry password
func (o GetSecretPrivateRegistryPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSecretPrivateRegistry) *string {
		if v == nil {
			return nil
		}
		return &v.Password
	}).(pulumi.StringPtrOutput)
}

// The registry url
func (o GetSecretPrivateRegistryPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSecretPrivateRegistry) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

// The registry username
func (o GetSecretPrivateRegistryPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetSecretPrivateRegistry) *string {
		if v == nil {
			return nil
		}
		return &v.Username
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppDomainInput)(nil)).Elem(), AppDomainArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppDomainArrayInput)(nil)).Elem(), AppDomainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretAzureContainerRegistryInput)(nil)).Elem(), SecretAzureContainerRegistryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretAzureContainerRegistryPtrInput)(nil)).Elem(), SecretAzureContainerRegistryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretDigitalOceanContainerRegistryInput)(nil)).Elem(), SecretDigitalOceanContainerRegistryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretDigitalOceanContainerRegistryPtrInput)(nil)).Elem(), SecretDigitalOceanContainerRegistryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretDockerHubRegistryInput)(nil)).Elem(), SecretDockerHubRegistryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretDockerHubRegistryPtrInput)(nil)).Elem(), SecretDockerHubRegistryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretGithubRegistryInput)(nil)).Elem(), SecretGithubRegistryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretGithubRegistryPtrInput)(nil)).Elem(), SecretGithubRegistryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretGitlabRegistryInput)(nil)).Elem(), SecretGitlabRegistryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretGitlabRegistryPtrInput)(nil)).Elem(), SecretGitlabRegistryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretPrivateRegistryInput)(nil)).Elem(), SecretPrivateRegistryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SecretPrivateRegistryPtrInput)(nil)).Elem(), SecretPrivateRegistryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDefinitionInput)(nil)).Elem(), ServiceDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDefinitionPtrInput)(nil)).Elem(), ServiceDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDefinitionDockerInput)(nil)).Elem(), ServiceDefinitionDockerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDefinitionDockerPtrInput)(nil)).Elem(), ServiceDefinitionDockerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDefinitionEnvInput)(nil)).Elem(), ServiceDefinitionEnvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDefinitionEnvArrayInput)(nil)).Elem(), ServiceDefinitionEnvArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDefinitionGitInput)(nil)).Elem(), ServiceDefinitionGitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDefinitionGitPtrInput)(nil)).Elem(), ServiceDefinitionGitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDefinitionGitBuildpackInput)(nil)).Elem(), ServiceDefinitionGitBuildpackArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDefinitionGitBuildpackPtrInput)(nil)).Elem(), ServiceDefinitionGitBuildpackArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDefinitionGitDockerfileInput)(nil)).Elem(), ServiceDefinitionGitDockerfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDefinitionGitDockerfilePtrInput)(nil)).Elem(), ServiceDefinitionGitDockerfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDefinitionHealthCheckInput)(nil)).Elem(), ServiceDefinitionHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDefinitionHealthCheckArrayInput)(nil)).Elem(), ServiceDefinitionHealthCheckArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDefinitionHealthCheckHttpInput)(nil)).Elem(), ServiceDefinitionHealthCheckHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDefinitionHealthCheckHttpPtrInput)(nil)).Elem(), ServiceDefinitionHealthCheckHttpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDefinitionHealthCheckHttpHeaderInput)(nil)).Elem(), ServiceDefinitionHealthCheckHttpHeaderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDefinitionHealthCheckHttpHeaderArrayInput)(nil)).Elem(), ServiceDefinitionHealthCheckHttpHeaderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDefinitionHealthCheckTcpInput)(nil)).Elem(), ServiceDefinitionHealthCheckTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDefinitionHealthCheckTcpPtrInput)(nil)).Elem(), ServiceDefinitionHealthCheckTcpArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDefinitionInstanceTypeInput)(nil)).Elem(), ServiceDefinitionInstanceTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDefinitionInstanceTypeArrayInput)(nil)).Elem(), ServiceDefinitionInstanceTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDefinitionPortInput)(nil)).Elem(), ServiceDefinitionPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDefinitionPortArrayInput)(nil)).Elem(), ServiceDefinitionPortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDefinitionRouteInput)(nil)).Elem(), ServiceDefinitionRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDefinitionRouteArrayInput)(nil)).Elem(), ServiceDefinitionRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDefinitionScalingInput)(nil)).Elem(), ServiceDefinitionScalingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDefinitionScalingArrayInput)(nil)).Elem(), ServiceDefinitionScalingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDefinitionScalingTargetInput)(nil)).Elem(), ServiceDefinitionScalingTargetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDefinitionScalingTargetArrayInput)(nil)).Elem(), ServiceDefinitionScalingTargetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDefinitionScalingTargetAverageCpusInput)(nil)).Elem(), ServiceDefinitionScalingTargetAverageCpusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDefinitionScalingTargetAverageCpusArrayInput)(nil)).Elem(), ServiceDefinitionScalingTargetAverageCpusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDefinitionScalingTargetAverageMemInput)(nil)).Elem(), ServiceDefinitionScalingTargetAverageMemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDefinitionScalingTargetAverageMemArrayInput)(nil)).Elem(), ServiceDefinitionScalingTargetAverageMemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDefinitionScalingTargetRequestsPerSecondInput)(nil)).Elem(), ServiceDefinitionScalingTargetRequestsPerSecondArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceDefinitionScalingTargetRequestsPerSecondArrayInput)(nil)).Elem(), ServiceDefinitionScalingTargetRequestsPerSecondArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppDomainInput)(nil)).Elem(), GetAppDomainArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppDomainArrayInput)(nil)).Elem(), GetAppDomainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretAzureContainerRegistryInput)(nil)).Elem(), GetSecretAzureContainerRegistryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretAzureContainerRegistryPtrInput)(nil)).Elem(), GetSecretAzureContainerRegistryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretDigitalOceanContainerRegistryInput)(nil)).Elem(), GetSecretDigitalOceanContainerRegistryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretDigitalOceanContainerRegistryPtrInput)(nil)).Elem(), GetSecretDigitalOceanContainerRegistryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretDockerHubRegistryInput)(nil)).Elem(), GetSecretDockerHubRegistryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretDockerHubRegistryPtrInput)(nil)).Elem(), GetSecretDockerHubRegistryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretGithubRegistryInput)(nil)).Elem(), GetSecretGithubRegistryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretGithubRegistryPtrInput)(nil)).Elem(), GetSecretGithubRegistryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretGitlabRegistryInput)(nil)).Elem(), GetSecretGitlabRegistryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretGitlabRegistryPtrInput)(nil)).Elem(), GetSecretGitlabRegistryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretPrivateRegistryInput)(nil)).Elem(), GetSecretPrivateRegistryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSecretPrivateRegistryPtrInput)(nil)).Elem(), GetSecretPrivateRegistryArgs{})
	pulumi.RegisterOutputType(AppDomainOutput{})
	pulumi.RegisterOutputType(AppDomainArrayOutput{})
	pulumi.RegisterOutputType(SecretAzureContainerRegistryOutput{})
	pulumi.RegisterOutputType(SecretAzureContainerRegistryPtrOutput{})
	pulumi.RegisterOutputType(SecretDigitalOceanContainerRegistryOutput{})
	pulumi.RegisterOutputType(SecretDigitalOceanContainerRegistryPtrOutput{})
	pulumi.RegisterOutputType(SecretDockerHubRegistryOutput{})
	pulumi.RegisterOutputType(SecretDockerHubRegistryPtrOutput{})
	pulumi.RegisterOutputType(SecretGithubRegistryOutput{})
	pulumi.RegisterOutputType(SecretGithubRegistryPtrOutput{})
	pulumi.RegisterOutputType(SecretGitlabRegistryOutput{})
	pulumi.RegisterOutputType(SecretGitlabRegistryPtrOutput{})
	pulumi.RegisterOutputType(SecretPrivateRegistryOutput{})
	pulumi.RegisterOutputType(SecretPrivateRegistryPtrOutput{})
	pulumi.RegisterOutputType(ServiceDefinitionOutput{})
	pulumi.RegisterOutputType(ServiceDefinitionPtrOutput{})
	pulumi.RegisterOutputType(ServiceDefinitionDockerOutput{})
	pulumi.RegisterOutputType(ServiceDefinitionDockerPtrOutput{})
	pulumi.RegisterOutputType(ServiceDefinitionEnvOutput{})
	pulumi.RegisterOutputType(ServiceDefinitionEnvArrayOutput{})
	pulumi.RegisterOutputType(ServiceDefinitionGitOutput{})
	pulumi.RegisterOutputType(ServiceDefinitionGitPtrOutput{})
	pulumi.RegisterOutputType(ServiceDefinitionGitBuildpackOutput{})
	pulumi.RegisterOutputType(ServiceDefinitionGitBuildpackPtrOutput{})
	pulumi.RegisterOutputType(ServiceDefinitionGitDockerfileOutput{})
	pulumi.RegisterOutputType(ServiceDefinitionGitDockerfilePtrOutput{})
	pulumi.RegisterOutputType(ServiceDefinitionHealthCheckOutput{})
	pulumi.RegisterOutputType(ServiceDefinitionHealthCheckArrayOutput{})
	pulumi.RegisterOutputType(ServiceDefinitionHealthCheckHttpOutput{})
	pulumi.RegisterOutputType(ServiceDefinitionHealthCheckHttpPtrOutput{})
	pulumi.RegisterOutputType(ServiceDefinitionHealthCheckHttpHeaderOutput{})
	pulumi.RegisterOutputType(ServiceDefinitionHealthCheckHttpHeaderArrayOutput{})
	pulumi.RegisterOutputType(ServiceDefinitionHealthCheckTcpOutput{})
	pulumi.RegisterOutputType(ServiceDefinitionHealthCheckTcpPtrOutput{})
	pulumi.RegisterOutputType(ServiceDefinitionInstanceTypeOutput{})
	pulumi.RegisterOutputType(ServiceDefinitionInstanceTypeArrayOutput{})
	pulumi.RegisterOutputType(ServiceDefinitionPortOutput{})
	pulumi.RegisterOutputType(ServiceDefinitionPortArrayOutput{})
	pulumi.RegisterOutputType(ServiceDefinitionRouteOutput{})
	pulumi.RegisterOutputType(ServiceDefinitionRouteArrayOutput{})
	pulumi.RegisterOutputType(ServiceDefinitionScalingOutput{})
	pulumi.RegisterOutputType(ServiceDefinitionScalingArrayOutput{})
	pulumi.RegisterOutputType(ServiceDefinitionScalingTargetOutput{})
	pulumi.RegisterOutputType(ServiceDefinitionScalingTargetArrayOutput{})
	pulumi.RegisterOutputType(ServiceDefinitionScalingTargetAverageCpusOutput{})
	pulumi.RegisterOutputType(ServiceDefinitionScalingTargetAverageCpusArrayOutput{})
	pulumi.RegisterOutputType(ServiceDefinitionScalingTargetAverageMemOutput{})
	pulumi.RegisterOutputType(ServiceDefinitionScalingTargetAverageMemArrayOutput{})
	pulumi.RegisterOutputType(ServiceDefinitionScalingTargetRequestsPerSecondOutput{})
	pulumi.RegisterOutputType(ServiceDefinitionScalingTargetRequestsPerSecondArrayOutput{})
	pulumi.RegisterOutputType(GetAppDomainOutput{})
	pulumi.RegisterOutputType(GetAppDomainArrayOutput{})
	pulumi.RegisterOutputType(GetSecretAzureContainerRegistryOutput{})
	pulumi.RegisterOutputType(GetSecretAzureContainerRegistryPtrOutput{})
	pulumi.RegisterOutputType(GetSecretDigitalOceanContainerRegistryOutput{})
	pulumi.RegisterOutputType(GetSecretDigitalOceanContainerRegistryPtrOutput{})
	pulumi.RegisterOutputType(GetSecretDockerHubRegistryOutput{})
	pulumi.RegisterOutputType(GetSecretDockerHubRegistryPtrOutput{})
	pulumi.RegisterOutputType(GetSecretGithubRegistryOutput{})
	pulumi.RegisterOutputType(GetSecretGithubRegistryPtrOutput{})
	pulumi.RegisterOutputType(GetSecretGitlabRegistryOutput{})
	pulumi.RegisterOutputType(GetSecretGitlabRegistryPtrOutput{})
	pulumi.RegisterOutputType(GetSecretPrivateRegistryOutput{})
	pulumi.RegisterOutputType(GetSecretPrivateRegistryPtrOutput{})
}
