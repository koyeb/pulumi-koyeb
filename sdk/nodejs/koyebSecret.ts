// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as koyeb from "@pulumi/koyeb";
 *
 * const simple_secret = new koyeb.KoyebSecret("simple-secret", {
 *     value: "secret-value",
 * });
 * ```
 */
export class KoyebSecret extends pulumi.CustomResource {
    /**
     * Get an existing KoyebSecret resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: KoyebSecretState, opts?: pulumi.CustomResourceOptions): KoyebSecret {
        return new KoyebSecret(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'koyeb:index/koyebSecret:KoyebSecret';

    /**
     * Returns true if the given object is an instance of KoyebSecret.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is KoyebSecret {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === KoyebSecret.__pulumiType;
    }

    /**
     * The Azure registry configuration to use
     */
    public readonly azureContainerRegistry!: pulumi.Output<outputs.KoyebSecretAzureContainerRegistry | undefined>;
    /**
     * The date and time of when the secret was created
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The DigitalOcean registry configuration to use
     */
    public readonly digitalOceanContainerRegistry!: pulumi.Output<outputs.KoyebSecretDigitalOceanContainerRegistry | undefined>;
    /**
     * The DockerHub registry configuration to use
     */
    public readonly dockerHubRegistry!: pulumi.Output<outputs.KoyebSecretDockerHubRegistry | undefined>;
    /**
     * The GitHub registry configuration to use
     */
    public readonly githubRegistry!: pulumi.Output<outputs.KoyebSecretGithubRegistry | undefined>;
    /**
     * The GitLab registry configuration to use
     */
    public readonly gitlabRegistry!: pulumi.Output<outputs.KoyebSecretGitlabRegistry | undefined>;
    /**
     * The secret name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The organization ID owning the secret
     */
    public /*out*/ readonly organizationId!: pulumi.Output<string>;
    /**
     * The DigitalOcean registry configuration to use
     */
    public readonly privateRegistry!: pulumi.Output<outputs.KoyebSecretPrivateRegistry | undefined>;
    /**
     * The secret type
     */
    public readonly type!: pulumi.Output<string | undefined>;
    /**
     * The date and time of when the secret was last updated
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;
    /**
     * The secret value
     */
    public readonly value!: pulumi.Output<string | undefined>;

    /**
     * Create a KoyebSecret resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: KoyebSecretArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: KoyebSecretArgs | KoyebSecretState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as KoyebSecretState | undefined;
            resourceInputs["azureContainerRegistry"] = state ? state.azureContainerRegistry : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["digitalOceanContainerRegistry"] = state ? state.digitalOceanContainerRegistry : undefined;
            resourceInputs["dockerHubRegistry"] = state ? state.dockerHubRegistry : undefined;
            resourceInputs["githubRegistry"] = state ? state.githubRegistry : undefined;
            resourceInputs["gitlabRegistry"] = state ? state.gitlabRegistry : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["organizationId"] = state ? state.organizationId : undefined;
            resourceInputs["privateRegistry"] = state ? state.privateRegistry : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
            resourceInputs["value"] = state ? state.value : undefined;
        } else {
            const args = argsOrState as KoyebSecretArgs | undefined;
            resourceInputs["azureContainerRegistry"] = args ? args.azureContainerRegistry : undefined;
            resourceInputs["digitalOceanContainerRegistry"] = args ? args.digitalOceanContainerRegistry : undefined;
            resourceInputs["dockerHubRegistry"] = args ? args.dockerHubRegistry : undefined;
            resourceInputs["githubRegistry"] = args ? args.githubRegistry : undefined;
            resourceInputs["gitlabRegistry"] = args ? args.gitlabRegistry : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["privateRegistry"] = args ? args.privateRegistry : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["value"] = args ? args.value : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["organizationId"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(KoyebSecret.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering KoyebSecret resources.
 */
export interface KoyebSecretState {
    /**
     * The Azure registry configuration to use
     */
    azureContainerRegistry?: pulumi.Input<inputs.KoyebSecretAzureContainerRegistry>;
    /**
     * The date and time of when the secret was created
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The DigitalOcean registry configuration to use
     */
    digitalOceanContainerRegistry?: pulumi.Input<inputs.KoyebSecretDigitalOceanContainerRegistry>;
    /**
     * The DockerHub registry configuration to use
     */
    dockerHubRegistry?: pulumi.Input<inputs.KoyebSecretDockerHubRegistry>;
    /**
     * The GitHub registry configuration to use
     */
    githubRegistry?: pulumi.Input<inputs.KoyebSecretGithubRegistry>;
    /**
     * The GitLab registry configuration to use
     */
    gitlabRegistry?: pulumi.Input<inputs.KoyebSecretGitlabRegistry>;
    /**
     * The secret name
     */
    name?: pulumi.Input<string>;
    /**
     * The organization ID owning the secret
     */
    organizationId?: pulumi.Input<string>;
    /**
     * The DigitalOcean registry configuration to use
     */
    privateRegistry?: pulumi.Input<inputs.KoyebSecretPrivateRegistry>;
    /**
     * The secret type
     */
    type?: pulumi.Input<string>;
    /**
     * The date and time of when the secret was last updated
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * The secret value
     */
    value?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a KoyebSecret resource.
 */
export interface KoyebSecretArgs {
    /**
     * The Azure registry configuration to use
     */
    azureContainerRegistry?: pulumi.Input<inputs.KoyebSecretAzureContainerRegistry>;
    /**
     * The DigitalOcean registry configuration to use
     */
    digitalOceanContainerRegistry?: pulumi.Input<inputs.KoyebSecretDigitalOceanContainerRegistry>;
    /**
     * The DockerHub registry configuration to use
     */
    dockerHubRegistry?: pulumi.Input<inputs.KoyebSecretDockerHubRegistry>;
    /**
     * The GitHub registry configuration to use
     */
    githubRegistry?: pulumi.Input<inputs.KoyebSecretGithubRegistry>;
    /**
     * The GitLab registry configuration to use
     */
    gitlabRegistry?: pulumi.Input<inputs.KoyebSecretGitlabRegistry>;
    /**
     * The secret name
     */
    name?: pulumi.Input<string>;
    /**
     * The DigitalOcean registry configuration to use
     */
    privateRegistry?: pulumi.Input<inputs.KoyebSecretPrivateRegistry>;
    /**
     * The secret type
     */
    type?: pulumi.Input<string>;
    /**
     * The secret value
     */
    value?: pulumi.Input<string>;
}
