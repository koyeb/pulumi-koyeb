// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as koyeb from "@pulumi/koyeb";
 *
 * const my_domain = new koyeb.KoyebDomain("my-domain", {});
 * ```
 */
export class KoyebDomain extends pulumi.CustomResource {
    /**
     * Get an existing KoyebDomain resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: KoyebDomainState, opts?: pulumi.CustomResourceOptions): KoyebDomain {
        return new KoyebDomain(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'koyeb:index/koyebDomain:KoyebDomain';

    /**
     * Returns true if the given object is an instance of KoyebDomain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is KoyebDomain {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === KoyebDomain.__pulumiType;
    }

    /**
     * The app name the domain is assigned to
     */
    public readonly appName!: pulumi.Output<string | undefined>;
    /**
     * The date and time of when the domain was created
     */
    public /*out*/ readonly createdAt!: pulumi.Output<string>;
    /**
     * The deployment group assigned to the domain
     */
    public readonly deploymentGroup!: pulumi.Output<string>;
    /**
     * The CNAME record to point the domain to
     */
    public readonly intendedCname!: pulumi.Output<string>;
    /**
     * The status messages of the domain
     */
    public readonly messages!: pulumi.Output<string>;
    /**
     * The domain name
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The organization ID owning the domain
     */
    public /*out*/ readonly organizationId!: pulumi.Output<string>;
    /**
     * The status of the domain
     */
    public /*out*/ readonly status!: pulumi.Output<string>;
    /**
     * The domain type
     */
    public /*out*/ readonly type!: pulumi.Output<string>;
    /**
     * The date and time of when the domain was last updated
     */
    public /*out*/ readonly updatedAt!: pulumi.Output<string>;
    /**
     * The date and time of when the domain was last verified
     */
    public readonly verifiedAt!: pulumi.Output<string>;
    /**
     * The version of the domain
     */
    public /*out*/ readonly version!: pulumi.Output<string>;

    /**
     * Create a KoyebDomain resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: KoyebDomainArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: KoyebDomainArgs | KoyebDomainState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as KoyebDomainState | undefined;
            resourceInputs["appName"] = state ? state.appName : undefined;
            resourceInputs["createdAt"] = state ? state.createdAt : undefined;
            resourceInputs["deploymentGroup"] = state ? state.deploymentGroup : undefined;
            resourceInputs["intendedCname"] = state ? state.intendedCname : undefined;
            resourceInputs["messages"] = state ? state.messages : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["organizationId"] = state ? state.organizationId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["updatedAt"] = state ? state.updatedAt : undefined;
            resourceInputs["verifiedAt"] = state ? state.verifiedAt : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as KoyebDomainArgs | undefined;
            resourceInputs["appName"] = args ? args.appName : undefined;
            resourceInputs["deploymentGroup"] = args ? args.deploymentGroup : undefined;
            resourceInputs["intendedCname"] = args ? args.intendedCname : undefined;
            resourceInputs["messages"] = args ? args.messages : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["verifiedAt"] = args ? args.verifiedAt : undefined;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["organizationId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(KoyebDomain.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering KoyebDomain resources.
 */
export interface KoyebDomainState {
    /**
     * The app name the domain is assigned to
     */
    appName?: pulumi.Input<string>;
    /**
     * The date and time of when the domain was created
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The deployment group assigned to the domain
     */
    deploymentGroup?: pulumi.Input<string>;
    /**
     * The CNAME record to point the domain to
     */
    intendedCname?: pulumi.Input<string>;
    /**
     * The status messages of the domain
     */
    messages?: pulumi.Input<string>;
    /**
     * The domain name
     */
    name?: pulumi.Input<string>;
    /**
     * The organization ID owning the domain
     */
    organizationId?: pulumi.Input<string>;
    /**
     * The status of the domain
     */
    status?: pulumi.Input<string>;
    /**
     * The domain type
     */
    type?: pulumi.Input<string>;
    /**
     * The date and time of when the domain was last updated
     */
    updatedAt?: pulumi.Input<string>;
    /**
     * The date and time of when the domain was last verified
     */
    verifiedAt?: pulumi.Input<string>;
    /**
     * The version of the domain
     */
    version?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a KoyebDomain resource.
 */
export interface KoyebDomainArgs {
    /**
     * The app name the domain is assigned to
     */
    appName?: pulumi.Input<string>;
    /**
     * The deployment group assigned to the domain
     */
    deploymentGroup?: pulumi.Input<string>;
    /**
     * The CNAME record to point the domain to
     */
    intendedCname?: pulumi.Input<string>;
    /**
     * The status messages of the domain
     */
    messages?: pulumi.Input<string>;
    /**
     * The domain name
     */
    name?: pulumi.Input<string>;
    /**
     * The date and time of when the domain was last verified
     */
    verifiedAt?: pulumi.Input<string>;
}
