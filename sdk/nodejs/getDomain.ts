// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as koyeb from "@pulumi/koyeb";
 *
 * const my_domain = pulumi.output(koyeb.getDomain({
 *     name: "www.exampled.tld",
 * }));
 * ```
 */
export function getDomain(args: GetDomainArgs, opts?: pulumi.InvokeOptions): Promise<GetDomainResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("koyeb:index/getDomain:getDomain", {
        "appName": args.appName,
        "deploymentGroup": args.deploymentGroup,
        "intendedCname": args.intendedCname,
        "messages": args.messages,
        "name": args.name,
        "verifiedAt": args.verifiedAt,
    }, opts);
}

/**
 * A collection of arguments for invoking getDomain.
 */
export interface GetDomainArgs {
    /**
     * The app name the domain is assigned to
     */
    appName?: string;
    /**
     * The deployment group assigned to the domain
     */
    deploymentGroup?: string;
    /**
     * The CNAME record to point the domain to
     */
    intendedCname?: string;
    /**
     * The status messages of the domain
     */
    messages?: string;
    /**
     * The domain name
     */
    name: string;
    /**
     * The date and time of when the domain was last verified
     */
    verifiedAt?: string;
}

/**
 * A collection of values returned by getDomain.
 */
export interface GetDomainResult {
    /**
     * The app name the domain is assigned to
     */
    readonly appName?: string;
    /**
     * The date and time of when the domain was created
     */
    readonly createdAt: string;
    /**
     * The deployment group assigned to the domain
     */
    readonly deploymentGroup: string;
    /**
     * The domain ID
     */
    readonly id: string;
    /**
     * The CNAME record to point the domain to
     */
    readonly intendedCname: string;
    /**
     * The status messages of the domain
     */
    readonly messages: string;
    /**
     * The domain name
     */
    readonly name: string;
    /**
     * The organization ID owning the domain
     */
    readonly organizationId: string;
    /**
     * The status of the domain
     */
    readonly status: string;
    /**
     * The domain type
     */
    readonly type: string;
    /**
     * The date and time of when the domain was last updated
     */
    readonly updatedAt: string;
    /**
     * The date and time of when the domain was last verified
     */
    readonly verifiedAt: string;
    /**
     * The version of the domain
     */
    readonly version: string;
}

export function getDomainOutput(args: GetDomainOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDomainResult> {
    return pulumi.output(args).apply(a => getDomain(a, opts))
}

/**
 * A collection of arguments for invoking getDomain.
 */
export interface GetDomainOutputArgs {
    /**
     * The app name the domain is assigned to
     */
    appName?: pulumi.Input<string>;
    /**
     * The deployment group assigned to the domain
     */
    deploymentGroup?: pulumi.Input<string>;
    /**
     * The CNAME record to point the domain to
     */
    intendedCname?: pulumi.Input<string>;
    /**
     * The status messages of the domain
     */
    messages?: pulumi.Input<string>;
    /**
     * The domain name
     */
    name: pulumi.Input<string>;
    /**
     * The date and time of when the domain was last verified
     */
    verifiedAt?: pulumi.Input<string>;
}
