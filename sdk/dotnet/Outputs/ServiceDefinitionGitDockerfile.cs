// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Koyeb.Outputs
{

    [OutputType]
    public sealed class ServiceDefinitionGitDockerfile
    {
        /// <summary>
        /// The arguments to pass to the Docker command
        /// </summary>
        public readonly ImmutableArray<string> Args;
        /// <summary>
        /// Override the command to execute on the container
        /// </summary>
        public readonly string? Command;
        /// <summary>
        /// The location of your Dockerfile relative to the work directory. If not set, the work directory defaults to the root of the repository.
        /// </summary>
        public readonly string? Dockerfile;
        /// <summary>
        /// Override the default entrypoint to execute on the container
        /// </summary>
        public readonly ImmutableArray<string> Entrypoints;
        /// <summary>
        /// When enabled, the service container will run in privileged mode. This advanced feature is useful to get advanced system privileges.
        /// </summary>
        public readonly bool? Privileged;
        /// <summary>
        /// Target build stage: If your Dockerfile contains multi-stage builds, you can choose the target stage to build and deploy by entering its name
        /// </summary>
        public readonly string? Target;

        [OutputConstructor]
        private ServiceDefinitionGitDockerfile(
            ImmutableArray<string> args,

            string? command,

            string? dockerfile,

            ImmutableArray<string> entrypoints,

            bool? privileged,

            string? target)
        {
            Args = args;
            Command = command;
            Dockerfile = dockerfile;
            Entrypoints = entrypoints;
            Privileged = privileged;
            Target = target;
        }
    }
}
