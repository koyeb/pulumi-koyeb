// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Koyeb
{
    public static class GetService
    {
        /// <summary>
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Koyeb = Pulumi.Koyeb;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var my_service = Output.Create(Koyeb.GetService.InvokeAsync(new Koyeb.GetServiceArgs
        ///         {
        ///             Slug = "my-app/my-service",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetServiceResult> InvokeAsync(GetServiceArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetServiceResult>("koyeb:index/getService:getService", args ?? new GetServiceArgs(), options.WithDefaults());

        /// <summary>
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Koyeb = Pulumi.Koyeb;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var my_service = Output.Create(Koyeb.GetService.InvokeAsync(new Koyeb.GetServiceArgs
        ///         {
        ///             Slug = "my-app/my-service",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetServiceResult> Invoke(GetServiceInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetServiceResult>("koyeb:index/getService:getService", args ?? new GetServiceInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetServiceArgs : Pulumi.InvokeArgs
    {
        [Input("messages")]
        public string? Messages { get; set; }

        [Input("slug", required: true)]
        public string Slug { get; set; } = null!;

        public GetServiceArgs()
        {
        }
    }

    public sealed class GetServiceInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("messages")]
        public Input<string>? Messages { get; set; }

        [Input("slug", required: true)]
        public Input<string> Slug { get; set; } = null!;

        public GetServiceInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetServiceResult
    {
        public readonly string ActiveDeployment;
        public readonly string AppId;
        public readonly string CreatedAt;
        public readonly string Id;
        public readonly string LatestDeployment;
        public readonly string Messages;
        public readonly string Name;
        public readonly string OrganizationId;
        public readonly string PausedAt;
        public readonly string ResumedAt;
        public readonly string Slug;
        public readonly string Status;
        public readonly string TerminatedAt;
        public readonly string UpdatedAt;
        public readonly string Version;

        [OutputConstructor]
        private GetServiceResult(
            string activeDeployment,

            string appId,

            string createdAt,

            string id,

            string latestDeployment,

            string messages,

            string name,

            string organizationId,

            string pausedAt,

            string resumedAt,

            string slug,

            string status,

            string terminatedAt,

            string updatedAt,

            string version)
        {
            ActiveDeployment = activeDeployment;
            AppId = appId;
            CreatedAt = createdAt;
            Id = id;
            LatestDeployment = latestDeployment;
            Messages = messages;
            Name = name;
            OrganizationId = organizationId;
            PausedAt = pausedAt;
            ResumedAt = resumedAt;
            Slug = slug;
            Status = status;
            TerminatedAt = terminatedAt;
            UpdatedAt = updatedAt;
            Version = version;
        }
    }
}
