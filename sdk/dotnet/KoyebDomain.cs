// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Koyeb
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Koyeb = Pulumi.Koyeb;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var my_domain = new Koyeb.KoyebDomain("my-domain", new Koyeb.KoyebDomainArgs
    ///         {
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// </summary>
    [KoyebResourceType("koyeb:index/koyebDomain:KoyebDomain")]
    public partial class KoyebDomain : Pulumi.CustomResource
    {
        /// <summary>
        /// The app name the domain is assigned to
        /// </summary>
        [Output("appName")]
        public Output<string?> AppName { get; private set; } = null!;

        /// <summary>
        /// The date and time of when the domain was created
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// The deployment group assigned to the domain
        /// </summary>
        [Output("deploymentGroup")]
        public Output<string> DeploymentGroup { get; private set; } = null!;

        /// <summary>
        /// The CNAME record to point the domain to
        /// </summary>
        [Output("intendedCname")]
        public Output<string> IntendedCname { get; private set; } = null!;

        /// <summary>
        /// The status messages of the domain
        /// </summary>
        [Output("messages")]
        public Output<string> Messages { get; private set; } = null!;

        /// <summary>
        /// The domain name
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The organization ID owning the domain
        /// </summary>
        [Output("organizationId")]
        public Output<string> OrganizationId { get; private set; } = null!;

        /// <summary>
        /// The status of the domain
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// The domain type
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// The date and time of when the domain was last updated
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;

        /// <summary>
        /// The date and time of when the domain was last verified
        /// </summary>
        [Output("verifiedAt")]
        public Output<string> VerifiedAt { get; private set; } = null!;

        /// <summary>
        /// The version of the domain
        /// </summary>
        [Output("version")]
        public Output<string> Version { get; private set; } = null!;


        /// <summary>
        /// Create a KoyebDomain resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public KoyebDomain(string name, KoyebDomainArgs? args = null, CustomResourceOptions? options = null)
            : base("koyeb:index/koyebDomain:KoyebDomain", name, args ?? new KoyebDomainArgs(), MakeResourceOptions(options, ""))
        {
        }

        private KoyebDomain(string name, Input<string> id, KoyebDomainState? state = null, CustomResourceOptions? options = null)
            : base("koyeb:index/koyebDomain:KoyebDomain", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing KoyebDomain resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static KoyebDomain Get(string name, Input<string> id, KoyebDomainState? state = null, CustomResourceOptions? options = null)
        {
            return new KoyebDomain(name, id, state, options);
        }
    }

    public sealed class KoyebDomainArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The app name the domain is assigned to
        /// </summary>
        [Input("appName")]
        public Input<string>? AppName { get; set; }

        /// <summary>
        /// The deployment group assigned to the domain
        /// </summary>
        [Input("deploymentGroup")]
        public Input<string>? DeploymentGroup { get; set; }

        /// <summary>
        /// The CNAME record to point the domain to
        /// </summary>
        [Input("intendedCname")]
        public Input<string>? IntendedCname { get; set; }

        /// <summary>
        /// The status messages of the domain
        /// </summary>
        [Input("messages")]
        public Input<string>? Messages { get; set; }

        /// <summary>
        /// The domain name
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The date and time of when the domain was last verified
        /// </summary>
        [Input("verifiedAt")]
        public Input<string>? VerifiedAt { get; set; }

        public KoyebDomainArgs()
        {
        }
    }

    public sealed class KoyebDomainState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The app name the domain is assigned to
        /// </summary>
        [Input("appName")]
        public Input<string>? AppName { get; set; }

        /// <summary>
        /// The date and time of when the domain was created
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// The deployment group assigned to the domain
        /// </summary>
        [Input("deploymentGroup")]
        public Input<string>? DeploymentGroup { get; set; }

        /// <summary>
        /// The CNAME record to point the domain to
        /// </summary>
        [Input("intendedCname")]
        public Input<string>? IntendedCname { get; set; }

        /// <summary>
        /// The status messages of the domain
        /// </summary>
        [Input("messages")]
        public Input<string>? Messages { get; set; }

        /// <summary>
        /// The domain name
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The organization ID owning the domain
        /// </summary>
        [Input("organizationId")]
        public Input<string>? OrganizationId { get; set; }

        /// <summary>
        /// The status of the domain
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        /// <summary>
        /// The domain type
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// The date and time of when the domain was last updated
        /// </summary>
        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        /// <summary>
        /// The date and time of when the domain was last verified
        /// </summary>
        [Input("verifiedAt")]
        public Input<string>? VerifiedAt { get; set; }

        /// <summary>
        /// The version of the domain
        /// </summary>
        [Input("version")]
        public Input<string>? Version { get; set; }

        public KoyebDomainState()
        {
        }
    }
}
