// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Koyeb
{
    public static class GetDomain
    {
        /// <summary>
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Koyeb = Pulumi.Koyeb;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var my_domain = Output.Create(Koyeb.GetDomain.InvokeAsync(new Koyeb.GetDomainArgs
        ///         {
        ///             Name = "www.exampled.tld",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetDomainResult> InvokeAsync(GetDomainArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetDomainResult>("koyeb:index/getDomain:getDomain", args ?? new GetDomainArgs(), options.WithDefaults());

        /// <summary>
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Koyeb = Pulumi.Koyeb;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var my_domain = Output.Create(Koyeb.GetDomain.InvokeAsync(new Koyeb.GetDomainArgs
        ///         {
        ///             Name = "www.exampled.tld",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetDomainResult> Invoke(GetDomainInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetDomainResult>("koyeb:index/getDomain:getDomain", args ?? new GetDomainInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDomainArgs : Pulumi.InvokeArgs
    {
        [Input("appName")]
        public string? AppName { get; set; }

        [Input("deploymentGroup")]
        public string? DeploymentGroup { get; set; }

        [Input("intendedCname")]
        public string? IntendedCname { get; set; }

        [Input("messages")]
        public string? Messages { get; set; }

        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("verifiedAt")]
        public string? VerifiedAt { get; set; }

        public GetDomainArgs()
        {
        }
    }

    public sealed class GetDomainInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("appName")]
        public Input<string>? AppName { get; set; }

        [Input("deploymentGroup")]
        public Input<string>? DeploymentGroup { get; set; }

        [Input("intendedCname")]
        public Input<string>? IntendedCname { get; set; }

        [Input("messages")]
        public Input<string>? Messages { get; set; }

        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("verifiedAt")]
        public Input<string>? VerifiedAt { get; set; }

        public GetDomainInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetDomainResult
    {
        public readonly string? AppName;
        public readonly string CreatedAt;
        public readonly string DeploymentGroup;
        public readonly string Id;
        public readonly string IntendedCname;
        public readonly string Messages;
        public readonly string Name;
        public readonly string OrganizationId;
        public readonly string Status;
        public readonly string Type;
        public readonly string UpdatedAt;
        public readonly string VerifiedAt;
        public readonly string Version;

        [OutputConstructor]
        private GetDomainResult(
            string? appName,

            string createdAt,

            string deploymentGroup,

            string id,

            string intendedCname,

            string messages,

            string name,

            string organizationId,

            string status,

            string type,

            string updatedAt,

            string verifiedAt,

            string version)
        {
            AppName = appName;
            CreatedAt = createdAt;
            DeploymentGroup = deploymentGroup;
            Id = id;
            IntendedCname = intendedCname;
            Messages = messages;
            Name = name;
            OrganizationId = organizationId;
            Status = status;
            Type = type;
            UpdatedAt = updatedAt;
            VerifiedAt = verifiedAt;
            Version = version;
        }
    }
}
